<!DOCTYPE html>
<html>
<head>

<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="0"/>

<meta name="keywords" content="ethernet 16-axis controller, cnc control, motion control, cnc boards, 4-axis, 8-axis, stepper, brushless, DC motor, servo, encoder, adc, dac, motion controller, automated motion, manufacturing, Mach3">
<meta name="description" content="Manufacturer of premium motion control products for CNC Manufacturing, Robotics and Automation">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">
<title>Tool Setup Screen - Trajectory Planner</title>

<link rel="stylesheet" type="text/css" href="../css/style.css">
<link rel="stylesheet" href="../css/prism.css" data-noprefix />
<script src="../js/prism.js"></script>
</head>

<body>

<div id="logo"><a href="../index.htm"></a></div>

<div id="home">
<a href="../index.htm">Table of contents</a> |  
	<script>
		if (navigator.userAgent.indexOf("NT 6.2") == -1){
			document.write('<a href="https://www.dynomotion.com">Dynomotion home page</a>')
		} else {
			document.write('<a href="https://www.dynomotion.com" target="_blank">Dynomotion home page</a>')
		}
	</script>
</div>
	
<div id="searchNav">

	<div class="gcse-search">
					<script>
					  if (document.location.protocol  ==  'https:') {
					  (function() {
					  var cx = '012657033059195044748:9fmjmlufts0';
					  var gcse = document.createElement('script');
					  gcse.type = 'text/javascript';
					  gcse.async = true;
					  gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
					      '//cse.google.com/cse.js?cx=' + cx;
					  var s = document.getElementsByTagName('script')[0];
					  s.parentNode.insertBefore(gcse, s);
					})();
					  }
				      </script> 
				      <gcse:search> </gcse:search>  

	       </div>
</div>	

	


<div id="google_translate_element" style="background: transparent;" align="right"><script type="text/javascript">
if (navigator.userAgent.indexOf("NT 6.2") == -1) {
		function googleTranslateElementInit() {
	  new google.translate.TranslateElement({pageLanguage: 'en', includedLanguages: 'en,de,fr,it,es,pt,ru,uk,ar,zh-CN,zh-TW,ko,iw,hi,ja,tr', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
		}						}
	</script>
	<script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit">
	</script>
</div>		
<div id="main">
	
<h1>Trajectory Planner Corner Rounding Settings</h1>

<p>The KMotionCNC Trajectory planner contains two 
parameters (Facet Angle and Corner Tolerance) that can be used to smooth paths 
generated by line segments in the GCode. Although shown below as 2D paths 
this smoothing applies for 3D paths as well. Standard GCode and many CAD 
systems do not support arcs in arbitrary 3D space so small line segments are 
typically used to define the 3D path. Facet Angles in the original GCode 
data that are less than the specified Break Angle (which are considered &quot;small&quot; 
and will not cause a motion stop) will be re-faceted with smaller line segments 
along a curve to have Facet Angles smaller than the specified amount. The 
new line segments will be placed along the largest arc that will not 
deviate more than the specified Corner Tolerance or consume more than 1/2 of the 
segment length. If no Corner Rounding is desired the Corner Tolerance can 
be set to zero.</p>

<p><img src="KMotionCNCfiles/FacetAngle.png" width="462" height="191" alt="Facet Angle" /></p>

<p><img src="KMotionCNCfiles/CornerTol.png" width="462" height="191" alt="Corner Tol Angle" /></p>

<p>Shown below is an example motion path where the 
bottom right arc is formed by 30 line segments. Normally a simple arc 
could be specified but for test purposes it was created with 30 3 degree angle 
facets forming the 90 degree turn. The tests below were performed 
simulating a fairly high performance system with 30 in/sec<sup>2</sup> 
acceleration in both X and Y. The Gcode used can be downloaded
<a href="KMotionCNCfiles/TESTCURVEOFTERROR3DEG.NC">here</a>.</p>

<p>Here is the path Overview.</p>

<p><img src="KMotionCNCfiles/TestCurveZoomOut.png" width="780" height="542" alt="Test Curve Zoom Out" /></p>

<p>Notice the circled region of the path looks 
smooth, but when zooming in as shown below the 3-degree angle facets are just 
barely visible. This resolution is typically used to provide a reasonably 
smooth path without making the file size abnormally large.</p>

<p><img src="KMotionCNCfiles/Facets3degrees.png" width="780" height="542" alt="Facets 3 degrees" /></p>

<p>In the plot below the Corner Rounding is enabled and the facets are now reduced 
in size and form 0.5 degree angles that can now no longer be seen.</p>

<p><img src="KMotionCNCfiles/Facets0.5degrees.png" width="780" height="542" alt="Facets 0.5 degrees" /></p>

<p>To see more clearly the improvement the X Axis 
motion was captured in real-time (180us sample rate) and plotted. From the 
position the Velocity and Acceleration were also computed and plotted. </p>
<p>First the original captured motion X axis position, 
velocity, and acceleration vs. time through the original 3-degree facets with no 
corner rounding. </p>

<p>Note that the velocity plot has an odd shape for 
several reasons. At constant velocity the facet angle change causes the x 
velocity to drop while the y velocity increases, but since we are 
accelerating through the curve (because a more diagonal direction can make use of 
the increased (combined) acceleration of both axes) the velocity ramps up at the 
max acceleration toward the beginning of each facet. The programmed feed rate is 400ipm (6.67ips) but the speed is acceleration limited by the 
curvature of the path, hence the deceleration to ~ 5.5ips on the left as we enter the curve.</p>

<p><img src="KMotionCNCfiles/Pos3degree.png" alt="Pos 3 degrees" /></p>
<p><img src="KMotionCNCfiles/Vel3deg.png" alt="Vel 3 degrees" /></p>
<p><img src="KMotionCNCfiles/Accel3deg.png" alt="Accel 3 degrees" /></p>
<p></p>
<p>Now using the Trajectory Planner settings shown 
below. Notice the velocity is much smoother and the Acceleration is less 
Jerky.</p>
<p>

<img src="KMotionCNCfiles/TJPSettings.png" alt="TJP Settings" /></p>
<p><img src="KMotionCNCfiles/Pos0.5.png" alt="Pos 0.5 degrees" /></p>
<p><img src="KMotionCNCfiles/Vel0.5.png" alt="Vel 0.5 degrees" /></p>
<p><img src="KMotionCNCfiles/Accel0.5.png" alt="Accel 0.5 degrees" /></p>

<p>For still further motion smoothing an additional KFLOP feature can be used. 
A low pass filter can be applied to the output of the coordinated motion path.</p>

<p>The Low Pass Filter will be applied to all axes of coordinated motion (up to 8) 
by setting the KLP coefficient within KFLOP. Currently a C Program must be used 
to set this global parameter.</p>

<p>To compute an appropriate coefficient from a time constant 
Tau in seconds use the formula KLP = exp(-TIMEBASE/Tau) as shown below</p>

<pre>
	<code class="language-c">
	#include &quot;KMotionDef.h&quot;
	main()
	{
		double Tau = 0.001; // seconds for Low Pass Filter Time Constant
		KLP = exp(-TIMEBASE/Tau);
		printf(&quot;Tau=%f KLP=%f\n&quot;,Tau,KLP);
	}
	</code>
</pre>

<p>Note the Velocity and Acceleration plots are even 
smoother. A low pass time constant Tau = 1 millisecond was used. </p>

<p><img src="KMotionCNCfiles/PosLP001.png" alt="Pos Tau = 1 millisecond" /></p>
<p><img src="KMotionCNCfiles/VelLP001.png" alt="Vel Tau = 1 millisecond" /></p>
<p><img src="KMotionCNCfiles/AccelLP001.png" alt="Accel Tau = 1 millisecond" /></p>

<p>The disadvantage associated with low pass filtering of the 
trajectory is a potential lag in the commanded positions which may cause small path errors. 
The plots shown below show that a Low Pass Filter setting of 1 millisecond will 
be insignificant for most systems. A nearly worst case 90-degree angle with max 
deceleration on the X axis, followed by max acceleration on the Y axis are shown 
below.</p>

<p>The first case is captured with no Low Pass 
Filtering. Note a perfectly square corner. Each tick mark shows a 
captured 180us sample point.</p>

<p><img src="KMotionCNCfiles/CornerLPoff.png" alt="Corner LP Off" /></p>

<p>The case below is with 1 millisecond of filtering with a path error of ~ 0.01 
mil (0.25um)</p>

<p><img src="KMotionCNCfiles/CornerLP001.png" alt="Corner LP 001" /></p>

<p>The case below is with 3 milliseconds of filtering with a path error of ~ 0.1 
mil (2.5um)</p>

<p><img src="KMotionCNCfiles/CornerLP003.png" alt="Corner LP 003" /></p>

<p>Because the Low Pass Smoothing introduces a small position 
lag the very end of the smoothed path will not be completed when the coordinated 
path is completed. To complete the path the final position and velocity of 
each of the coordinated axes are used to calculate a Cubic Spline to complete 
the final small motion. The Cubic Spline allows continuous velocity from 
the end of the smoothed path to the target position in a manner where the 
velocity also reaches zero at the target position. A Time duration of the 
Cubic Spline set at 2xTau of the low pass filter provides a relatively constant 
deceleration to the Target. </p>

<p>
<img src="KMotionCNCfiles/SmoothedSplineEnding.png" width="803" height="533" alt="Smooth Spline Ending" /></p>

<p>&nbsp;</p>
	</div>

</body>

</html>
