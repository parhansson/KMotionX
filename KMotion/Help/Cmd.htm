<!DOCTYPE html>
<html>
<head>

<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="0"/>

<meta name="keywords" content="ethernet 16-axis controller, cnc control, motion control, cnc boards, 4-axis, 8-axis, stepper, brushless, DC motor, servo, encoder, adc, dac, motion controller, automated motion, manufacturing, Mach3">
<meta name="description" content="Manufacturer of premium motion control products for CNC Manufacturing, Robotics and Automation">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">

<title>Script Commands</title>

<link rel="stylesheet" type="text/css" href="css/style.css">
<link rel="stylesheet" href="css/prism.css" data-noprefix />
<script src="js/prism.js"></script>
</head>

<body>

<div id="logo"><a href="index.htm"></a></div>

<div id="home">
	<a href="index.htm">Table of contents</a> | 
	<script>
		if (navigator.userAgent.indexOf("NT 6.2") == -1){
			document.write('<a href="https://www.dynomotion.com">Dynomotion home page</a>')
		} else {
			document.write('<a href="https://www.dynomotion.com" target="_blank">Dynomotion home page</a>')
		}
	</script>
</div>
<div id="searchNav">

	<div class="gcse-search">
					<script>
					  if (document.location.protocol  ==  'https:') {
					  (function() {
					  var cx = '012657033059195044748:9fmjmlufts0';
					  var gcse = document.createElement('script');
					  gcse.type = 'text/javascript';
					  gcse.async = true;
					  gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
					      '//cse.google.com/cse.js?cx=' + cx;
					  var s = document.getElementsByTagName('script')[0];
					  s.parentNode.insertBefore(gcse, s);
					})();
					  }
				      </script> 
				      <gcse:search> </gcse:search>  

	       </div>
</div>	

	


<div id="google_translate_element" style="background: transparent;" align="right"><script type="text/javascript">
if (navigator.userAgent.indexOf("NT 6.2") == -1) {
		function googleTranslateElementInit() {
	  new google.translate.TranslateElement({pageLanguage: 'en', includedLanguages: 'en,de,fr,it,es,pt,ru,uk,ar,zh-CN,zh-TW,ko,iw,hi,ja,tr', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
		}						}
	</script>
	<script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit">
	</script>
</div>		
<div id="main">
      <div id="cmd">
       <h1>Script Commands</h1>
       
<h2><a name="3PH"></a>3PH<em>&lt;N&gt;=&lt;M&gt; &lt;A&gt;</em> </h2>

<h3>Description</h3>

        <p>Sets the assigned PWMs of an axis to the specified magnitude and phase angle for 
        a brushless 3 phase motor.</p>
        <p>This command is useful for energizing a coil (or effective coil position). 
        This is often required while initial homing or determining the 
        commutation offset for a 3 phase brushless motor. If an effective 
        coil position is energized, the motor rotor will normally align itself 
        to the coil position. This is similar to the manner in which a 
        stepping motor operates. Since the rotor location is then known, 
        the commutation offset may then be determined. Alternately if an 
        index mark is available, the effective coil position may be rotated by 
        changing the phase angle until the index mark is detected.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP)&nbsp;          0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Magnitude of output to apply.</p>
  <p>Valid Range is -230 ... +230 PWM units.</p>
  <p><em><strong>&lt;A&gt;</strong> </em></p>
        <p>Commutation angle to be used.</p>
        <p>Units are in Commutation cycles.</p>
        <p>Only fractional value will be used .</p>

<h3>Example</h3>
<p>3PH0=230 0.5</p>

<hr />
      
<h2><a name="4PH"></a>4PH<em>&lt;N&gt;=&lt;M&gt; &lt;A&gt;</em></h2>

        <p>Sets the assigned PWMs of an axis to the specified magnitude and phase angle for 
        a brushless 4 phase motor.</p>
        <p>This command is useful for energizing a coil (or effective coil position). 
        This is often required while initial homing or determining the 
        commutation offset for a 4 phase brushless motor. If an effective 
        coil position is energized, the motor rotor will normally align itself 
        to the coil position. This is similar to the manner in which a 
        stepping motor operates. Since the rotor location is then known, 
        the commutation offset may then be determined. Alternately if an 
        index mark is available, the effective coil position may be rotated by 
        changing the phase angle until the index mark is detected.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP)&nbsp;          0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Magnitude of output to apply.</p>
<p>Valid Range is -250 ... +250 PWM units.</p>
        
<p><em><strong>&lt;A&gt;</strong> </em></p>
<p>Commutation angle to be used.</p>
<p>Units are in Commutation cycles.</p>
<p>Only fractional value will be used.</p>

<h3>Example</h3>
<p>4PH0=250 0.5</p>
<hr />

<h2><a name="Accel"></a>Accel<em>&lt;N&gt;=&lt;A&gt; or Accel &lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set the max acceleration (for independent moves and jogs)</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP)&nbsp;          0..15 (Kogna).</p>
<p><em><strong>&lt;A&gt;</strong> </em></p>
<p>The max acceleration. Units are in <em>Position units</em> per sec<sup>2</sup>.</p>
        

<h3>Example</h3>
        
<p> Accel0=1000.0</p>
<hr />

<h2><a name="ADC"></a>ADC<em>&lt;N&gt;</em></h2>
<h3>Description</h3>
        <p>Display current ADC (Analog to Digital Converter). Display range -2048 to 2047.</p>
        <p>Kanalog channels 0-7 are ±10V general purpose inputs.</p>
        <p><strong><em>Parameters</em></strong></p>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>ADC channel.</p>
<p>Valid range 0 ... 7 (Kanalog), 8 ... 11 (Kogna).</p>

<h3>Example</h3>
        
  <p>ADC 0</p>
  <hr />
  <h2><a name="Arc"></a>Arc<em>&lt;X<sub>C</sub>&gt; &lt;Y<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Z<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
  <h3>Description</h3>
  <p>Place  circular (also elliptical or helical) interpolated move into the 
    coordinated motion buffer. See also <a href="CoordinatedMotion.htm"> KMotion Coordinated Motion</a>. A path through space is defined 
    where <em>x</em> and <em>y</em> are changing in an elliptical manner and <em>z, a, b, c</em> are changing 
    in a linear manner forming a portion of a helix. A parametric 
    equation is defined which describes which portion of the path as well as 
    how as a function of time the path is to be traversed. This 
    command can consist of up to 6 axis of coordinated motion. X and Y 
    perform an arc while Z, A, B, and C move linearly.</p>
  <p>Although the Arc command may be sent directly, the Arc command is normally 
    generated automatically to perform a planned trajectory by the 
    coordinated motion library or GCode.</p>
  <p><em>(<strong>X<sub>C</sub>,Y<sub>C</sub></strong>)</em> - center of circle</p>
  <p><em>(<strong>R<sub>X</sub>,R<sub>Y</sub></strong>)</em> - <em>x</em> radius and <em>y</em> radius</p>
  <p><strong><em>&#952;<sub>0</sub></em></strong> - initial angle for 
    the beginning of the path</p>
  <p><strong><em>d&#952; </em></strong>- amount of angular change for 
    the path</p>
  <p><em><strong>Z<sub>0</sub></strong></em> - initial <em>Z</em> position of path</p>
  <p><em><strong>A<sub>0</sub></strong></em> - initial <em>A</em> position of path</p>
  <p><em><strong>B<sub>0</sub></strong></em> - initial <em>B</em> position of path</p>
  <p></p>
  <p><em><strong>C<sub>0</sub></strong></em> - initial <em>C</em> position of path</p>
  <p></p>
  <p><em><strong>Z<sub>1</sub></strong></em> - final <em>Z</em> position of path</p>
  <p><em><strong>A<sub>1</sub></strong></em> - final <em>A</em> position of path</p>
  <p><em><strong>B<sub>1</sub></strong></em> - final <em>B</em> position of path</p>
  <p><em><strong>C<sub>1</sub></strong></em> - final <em>C</em> position of path</p>
  <p>3rd order  parametric equation where<br />
    <em>p</em> = <em><strong>a</strong> t</em><strong><sup>3</sup></strong> + <em><strong>b</strong></em> <em>t</em><strong><sup>2</sup></strong> + <em><strong>c</strong></em> <em>t</em> + <em><strong>d</strong></em><br />
    <br />
    <em>p</em> is the position along the path as a function of time. When <em>p</em>=0 
    the (x,y,z) position will be at the beginning of the path <em>(&#952;= &#952;</em><sub>0</sub> and <em>z=z<sub>0</sub>)</em>. When <em>p</em>=1 the <em>(x,y,z) </em> position will be at the end of the path <em>(&#952;= &#952;<sub>0</sub>+d&#952;, </em>and<em> z=z<sub>1</sub>)</em>.</p>
  <p>This motion segment will be performed over a time period of <strong><em>t</em><sub>F</sub></strong>, 
    where <strong><em>t</em></strong> varies from <strong>0</strong> ... <strong><em>t</em><sub>F</sub></strong>. 
    Note that it is not necessary that <em>p</em> vary over the entire range 
    of 0 ... 1. This is often the case when there may be an 
    acceleration, constant velocity, and deceleration phase phase over the 
    path. ie: <em><strong>t</strong></em> might vary from 0.0-&gt;0.1 where p might 
    vary from 0.3-&gt;0.7.</p>
  <h3>Parameters</h3>
  <p><strong> <em>&lt;X<sub>C</sub>&gt; </em></strong>- X center of ellipse, units are position 
    units of x axis </p>
  <p><strong> <em>&lt;Y<sub>C</sub>&gt; </em></strong> - Y center of ellipse, units are position units of y axis </p>
  <p><strong> <em>&lt;R<sub>X</sub>&gt; </em></strong> - X radius of ellipse, units are position units of x axis <strong> <em></em></strong></p>
  <p><strong> <em>&lt;R<sub>Y</sub>&gt; </em></strong> - Y radius of ellipse, units are position units of y axis </p>
  <p> <strong> <em>&lt;&#952;<sub>0</sub>&gt; </em></strong>- initial theta position on ellipse, radians 
    (0 radians points in the +<em>x</em> direction)</p>
  <p><strong> <em>&lt;</em></strong><strong><em>d&#952;</em></strong><strong><em>&gt; </em></strong> - change in theta position on ellipse, radians (+ theta causes CCW 
    motion)</p>
  <p> <strong> <em>&lt;Z<sub>0</sub>&gt; </em></strong>- initial Z position on path, units are 
    position units of z axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;A<sub>0</sub>&gt; </em></strong>- initial A position on path, units are 
    position units of a axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;B<sub>0</sub>&gt; </em></strong>- initial B position on path, units are 
    position units of b axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;C<sub>0</sub>&gt; </em></strong>- initial C position on path, units are 
    position units of c axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;Z<sub>1</sub>&gt; - </em></strong>final Z position on path, units are 
    position units of z axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;A<sub>1</sub>&gt; - </em></strong>final A position on path, units are 
    position units of a axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;B<sub>1</sub>&gt; - </em></strong>final B position on path, units are 
    position units of b axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;C<sub>1</sub>&gt; - </em></strong>final C position on path, units are 
    position units of c axis <strong> <em></em></strong></p>
  <p> <strong> <em>&lt;a&gt; </em></strong>-<em><strong> </strong></em>parametric equation <em>t</em><sup>3</sup> coefficient</p>
  <p><strong> <em>&lt;b&gt; </em></strong> -<em><strong> </strong></em>parametric equation <em>t</em><sup>2</sup> coefficient</p>
  <p><strong> <em>&lt;c&gt;</em></strong> -<em><strong> </strong></em>parametric equation <em>t</em> coefficient</p>
  <p><strong> <em>&lt;d&gt; </em></strong> -<em><strong> </strong></em>parametric equation constant coefficient</p>
  <p> <strong> <em>&lt;t</em><sub>F</sub><em>&gt;</em></strong> - time for segment</p>
  <h3>Example (complete unit circle, centered at 0.5,0.5, no Z, A, B, or C motion, performed in 10 seconds)</h3>
  <p>Arc 0.5 0.5 1.0 1.0 0.0 6.28 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1 0.0 10.0</p>
  <hr />
  
		  
	<h2><a name="ArcEx"></a>ArcEx<em>&lt;X<sub>C</sub>&gt; &lt;Y<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Z<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
  <h3>Description</h3>
  <p>Place  circular (also elliptical or helical) interpolated move into the 
    coordinated motion buffer. Same as Arc command except expands the axes from 6 to 8 to include U V axes.</p> 
  <h3>Example (complete unit circle, centered at 0.5,0.5, no Z, A, B, C, U, V motion, performed in 10 seconds)</h3>
  <p>ArcEx 0.5 0.5 1.0 1.0 0.0 6.28 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1 0.0 10.0</p>
  <hr />

		  
  <h2><a name="ArcP"></a>ArcP<em>&lt;X<sub>C</sub>&gt; &lt;Y<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Z<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; 
    &lt;BP<sub>1</sub>&gt; &lt;CP<sub>1</sub>&gt; 
    &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em> <br>
    (Kogna only)</h2>
  <h3>Description</h3>
  <p>Place  circular (also elliptical or helical) interpolated move into the 
    coordinated motion buffer. Same as ArcEx command except expands the axes from 8 to 16 to include the 8 prime axes XP YP ZP AP BP CP UP VP axes.</p> 
  <h3>Example (complete unit circle, centered at 0.5,0.5, no Z, A, B, C, U, V or Prime axes motion , performed in 10 seconds)</h3>
  <p>ArcP 0.5 0.5 1.0 1.0 0.0 6.28 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1 0.0 10.0</p>
  <hr />
		  
		  
		  
<h2>
        <a name="ArcXZ"></a>ArcZX<em>&lt;Z<sub>C</sub>&gt; &lt;X<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
        &lt;R<sub>Z</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Y<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;Y<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
		&lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;a&gt; 
  &lt;b&gt; &lt;c&gt; &lt;d&gt;&lt;t<sub>F</sub>&gt;</em></h2>
<h3>Description</h3>
        <p>Place 
        circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#Arc">Arc</a> Command 
		except circular motion is performed in the ZX plane rather than the XY 
		plane.</p>
    <hr />
        
<h2>
        <a name="ArcXZEx"></a>ArcXZEx<em>&lt;X<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Y<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;Y<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcEx">ArcEx</a> Command 
		except circular motion is performed in the XZ plane rather than the XY 
		plane.</p>
    <hr />
        
<h2>
        <a name="ArcXZP"></a>ArcXZP<em>&lt;X<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Y<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;Y<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; 
    &lt;BP<sub>1</sub>&gt; &lt;CP<sub>1</sub>&gt; 
    &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em><br>
(Kogna only)</h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcP">ArcP</a> Command 
		except circular motion is performed in the XZ plane rather than the XY 
		plane.</p>
        <hr/>
        
        <h2><a name="ArcYZ"></a>ArcYZ<em>&lt;Y<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>Y</sub>&gt; 
        &lt;R<sub>Z</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;X<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
		&lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;a&gt; 
        &lt;b&gt; &lt;c&gt;&lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#Arc">Arc</a> Command 
		except circular motion is performed in the YZ plane rather than the XY 
		plane.</p>
        <hr/>
        
        <h2><a name="ArcYZEx"></a><em>ArcYZEx&lt;Y<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;X<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcEx">ArcEx</a> Command 
		except circular motion is performed in the YZ plane rather than the XY 
		plane.</p>
        <hr/>
        
        <h2><a name="ArcYZP"></a>ArcYZP<em>&lt;Y<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;X<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; 
    &lt;BP<sub>1</sub>&gt; &lt;CP<sub>1</sub>&gt; 
    &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em><br>
(Kogna only)</h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcP">ArcP</a> Command 
		except circular motion is performed in the YZ plane rather than the XY 
		plane.</p>
        <hr/>
        
        <h2><a name="ArcHex"></a>ArcHex&lt;X<em><sub>C</sub>&gt; &lt;Y<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
        &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Z<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;Z<sub>1</sub>&gt; 
		&lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;a&gt; 
        &lt;b&gt; &lt;c&gt;&lt;d&gt; &lt;t</em><sub>F</sub>&gt;</h2>

		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. This command is exactly the same 
        as the <a href="#Arc">Arc</a> command above, except all 19 parameters are 
        specified as 32-bit hexadecimal values which are the binary images of 
        32-bit floating point values. When generated by a program this is 
        often faster, simpler, and more precise than decimal values. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        <h3>Parameters</h3>
		<p>See above.</p>
		<h3>Example (complete unit circle, centered at 0.5,0.5, no Z A B C motion, performed in 10 seconds)</h3>
        <p>ArcHex 3f000000 3f000000 3f800000 3f800000 0 40c90fdb  0 0 0 0  0 0 0 0 0 0 3dcccccd 0 41200000 </p>
   <hr />        
        <h2><a name="ArcHexEx"></a>ArcHexEx&lt;X<em><sub>C</sub>&gt; &lt;Y<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
        &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Z<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;Z<sub>1</sub>&gt; 
		&lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
        &lt;b&gt; &lt;c&gt;&lt;d&gt; &lt;t</em><sub>F</sub>&gt;</h2>

		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHexEx">ArcHexEx</a> Command 
		except circular motion is performed in the XZ plane rather than the XY 
		plane.</p>
        <h3>Parameters</h3>
		<p>See above.</p>
		<h3>Example (complete unit circle, centered at 0.5,0.5, no Z A B C U V motion, performed in 10 seconds)</h3>
        <p>ArcHex 3f000000 3f000000 3f800000 3f800000 0 40c90fdb  0 0 0 0  0 0 0 0 0 0 0 0 0 0 3dcccccd 0 41200000 </p>
<hr />
		  
        <h2><a name="ArcHexP"></a>ArcHexP&lt;X<em><sub>C</sub>&gt; &lt;Y<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
        &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Z<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;Z<sub>1</sub>&gt; 
		&lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;a&gt; 
        &lt;b&gt; &lt;c&gt;&lt;d&gt; &lt;t</em><sub>F</sub>&gt;<br>
(Kogna only)</h2>

		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. This command is exactly the same 
        as the <a href="#ArcP">ArcP</a> command above, except all 39 parameters are 
        specified as 32-bit hexadecimal values which are the binary images of 
        32-bit floating point values. When generated by a program this is 
        often faster, simpler, and more precise than decimal values. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        <h3>Parameters</h3>
		<p>See above.</p>
		<h3>Example (complete unit circle, centered at 0.5,0.5, no Z A B C motion, performed in 10 seconds)</h3>
        <p>ArcHexP 3f000000 3f000000 3f800000 3f800000 0 40c90fdb 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3dcccccd 0 41200000 </p>
   <hr />
        
  <h2><a name="ArcHexXZ"></a>ArcHexZX<em>&lt;Z<sub>C</sub>&gt; &lt;X<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Y<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;Y<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHex">ArcHex</a> 
		Command except circular motion is performed in the ZX plane rather than 
		the XY plane.</p>
  		<hr />
        
  <h2><a name="ArcHexXZEx"></a>ArcHexZXEx<em>&lt;Z<sub>C</sub>&gt; &lt;X<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
		&lt;R<sub>Z</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Y<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;Y<sub>1</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; 
	  &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
        &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHexEx">ArcHexEx</a> 
		Command except circular motion is performed in the ZX plane rather than 
		the XY plane.</p>
  		<hr />
        
  <h2><a name="ArcHexXZP"></a>ArcHexZXP<em>&lt;Z<sub>C</sub>&gt; &lt;X<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;Y<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;Y<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; 
    &lt;BP<sub>1</sub>&gt; &lt;CP<sub>1</sub>&gt; 
    &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em><br>
    (Kogna only)
  </h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHexP">ArcHexP</a> 
		Command except circular motion is performed in the ZX plane rather than 
		the XY plane.</p>
  		<hr />
        
        <h2><a name="ArcHexYZ"></a>ArcHexYZ<em>&lt;Y<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>Y</sub>&gt; 
        &lt;R<sub>Z</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;X<sub>0</sub>&gt; 
		&lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
		&lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; &lt;a&gt; 
        &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHex">ArcHex</a> 
		Command except circular motion is performed in the YZ plane rather than 
		the XY plane.</p>
        <hr />
        
        <h2><a name="ArcHexYZEx"></a>ArcHexYZEx<em>&lt;Y<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;X<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHexEx">ArcHexEx</a> 
		Command except circular motion is performed in the YZ plane rather than 
		the XY plane.</p>
        <hr />
        
        <h2><a name="ArcHexYZP"></a>ArcHexYZP<em>&lt;Y<sub>C</sub>&gt; &lt;Z<sub>C</sub>&gt; &lt;R<sub>X</sub>&gt; 
    &lt;R<sub>Y</sub>&gt; &lt;&#952;<sub>0</sub>&gt; &lt;d&#952;&gt; &lt;X<sub>0</sub>&gt; 
    &lt;A<sub>0</sub>&gt; &lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; 
    &lt;B<sub>1</sub>&gt; &lt;C<sub>1</sub>&gt; 
    &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; 
    &lt;BP<sub>1</sub>&gt; &lt;CP<sub>1</sub>&gt; 
    &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; 
    &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em><br>
(Kogna only)</h2>
		<h3>Description</h3>
        <p>Place circular (also elliptical or helical) interpolated move into the 
        coordinated motion buffer. Same as <a href="#ArcHexP">ArcHexP</a> 
		Command except circular motion is performed in the YZ plane rather than 
		the XY plane.</p>
        <hr />
        
        <h2><a name="BacklashAmount">BacklashAmount</a><em>&lt;N&gt;=&lt;A&gt;</em> or BacklashAmount<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
		<p>Sets or gets the amount of Backlash Compensation Offset to be applied.</p>
		<p>See also <a href="#BacklashMode">BacklashMode</a> and <a href="#BacklashRate">BacklashRate</a>.</p>
       
        <h3>Parameters</h3>
		<p><em><strong>&lt;N&gt;</strong></em></p>
		<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

  		<p><em><strong>&lt;A&gt;</strong> </em></p>
		<p>Floating point Backlash Compensation Amount in units of Steps or Counts.</p>
        

<h3>Example</h3>
        
  <p>BacklashAmount0=5.5</p>
  
        <hr />
        
       <h2><a name="BacklashMode">BacklashMode</a><em>&lt;N&gt;=&lt;M&gt;</em> or BacklashMode<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
		<p>
Sets or gets the Backlash Compensation mode from either 
BACKLASH_OFF (0) to BACKLASH_LINEAR (1). When the backlash mode is set to 
Linear mode, whenever the commanded destination begins moving in the positive 
direction, a positive offset of the amount, <a href="#BacklashAmount">
BacklashAmount</a>, will be applied. The offset will be ramped upward as a 
linear function of time at the rate specified as the <a href="#BacklashRate">
BacklashRate</a>. Whenever the commanded destination begins moving in the 
negative direction the offset will be removed by ramping downward toward zero at 
the same rate.</p>
		<p>
		  If the the Backlash Compensation mode is set to BACKLASH_OFF 
	    (0), no backlash compensation will be applied.</p>
        <h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p></p>
  <p>
        <em><strong>&lt;M&gt;</strong> </em></p>
<p>Backlash Compensation Mode setting. Currently 0 or 1.</p>
        

<h3>Example</h3>
        
  <p>BacklashMode0=1</p>

        <hr />
        <h2> <a name="BacklashRate">BacklashRate</a><em>&lt;N&gt;=&lt;R&gt;</em> or BacklashRate<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
		<p>Sets or gets the rate at which the amount of Backlash Compensation Offset will be applied.</p>
		<p>See also <a href="#BacklashMode">BacklashMode</a> and <a href="#BacklashAmount">BacklashAmount</a>.</p>
       
        <h3>Parameters</h3>
		<p><em><strong>&lt;N&gt;</strong></em></p>
		<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

 		<p><em><strong>&lt;A&gt;</strong> </em></p>
<p>Floating point Backlash Compensation Rate in units of Steps or Counts per second. </p>   

<h3>Example</h3>
        
<p>BacklashRate=1000.0</p>
 
<hr />
        
<h2><a name="BegRapidBuf">BegRapidBuf</a> </h2>

<h3>Description</h3>

<p>Inserts into coordinated move buffer a command to indicate Rapid is in progress and to use Rapid FRO. </p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>BegRapidBuf</p>
  
  <hr />
  <h2><a name="CheckDone"></a>CheckDone<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Displays:</p>
    
        <p> 1 if axis N has completed its motion</p>
        <p> 0 if axis N has not completed its motion</p>
        <p> -1 if the axis is disabled</p>
      

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<h3>Example</h3>
        
  <p>CheckDone0</p>
        <hr />
  
	<h2><a name="CheckDoneBuf"></a>CheckDoneBuf </h2>

<h3>Description</h3>
        <p>Displays the status of the Coordinated Motion Buffer.
<em><strong>KMotion</strong></em> contains a Coordinated Motion Buffer where move segments 
(linear and arcs) and I/O commands may be downloaded and executed in real time.</p>

        <p>Displays:</p>
      
        <p> 1 if all coordinated move segments have completed</p>
        <p> 0 if all coordinated move segments have not completed</p>
        <p> -1 if any axis in the <a href="#DefineCS">defined coordinate system</a> 
        is disabled</p>

<h3>Parameters</h3>
<p>None</p>

  <h3>Example</h3>
        
  <p>CheckDoneBuf</p>

        <hr />
        
  <h2><a name="CheckDoneGather"></a>CheckDoneGather</h2>

<h3>Description</h3>
        <p>Displays the status of a data gather operation. <em><strong>
KMotion</strong></em> contains a mechanism for capturing data from a variety of 
sources in real time. This mechanism is utilized when capturing data for
<a href="BodeScreen/BodeScreen.htm#Bode_plot">Bode plots</a> and
<a href="StepScreen/StepScreen.htm">Step response</a> 
plots. It is also available for general purpose use. See the
<a href="data_gathering.htm">data gathering example</a>.</p>

  <p>Displays:</p>

        <p> 1  if data gather is completed</p>
        <p> 0 if data gather has not completed</p>
        
  <h3>Parameters</h3>
<p>None</p>

 <h3>Example</h3>
        
  <p>CheckDoneGather</p>
  
        <hr />
        
        <h2><a name="CheckDoneXYZABC">CheckDone<em>XYZABC</em></a></h2>

<h3>Description</h3>
        <p>Displays status of a commanded <a href="#MoveXYZABC">MoveXYZABC</a> command. 
        See also <a href="#DefineCS">DefineCS6</a>.</p>

        <p>Displays:</p>

        <p> 1 if all axes in the defined coordinate system have completed their motion</p>
        <p> 0 if any axis in the defined coordinate system has not completed its motion</p>
        <p> -1 if any axis in the defined coordinate system is disabled</p>
       

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
        
  <p>CheckDoneXYZABC</p>
  
        <hr />
        <h2><a name="CheckThread">CheckThread<em></em></a><em>&lt;N&gt;</em></h2>

<h3>Description</h3>
		<p>Checks whether a User Program Thread is currently executing. 
Returns 1 if executing, 0 if not executing.</p>
    

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Thread number specified as a decimal number. Valid range 1...7.</p>

 <h3>Example</h3>
        
  <p>CheckThread0</p>
  
        <hr />
        
        <h2><a name="ClearBit"></a>ClearBit<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Clears an actual I/O bit or virtual I/O bit. Note that actual I/O bits must be previously defined as an output, see <a href="#SetBitDirection">SetBitDirection</a> </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number specified as a decimal number. Accepted range 0...2047.</p>

<h3>Example</h3>
        
  <p>ClearBit0</p>
  
        <hr />
        
 <h2><a name="ClearBitBuf"></a>ClearBitBuf<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Inserts into the coordinated move buffer a command to clear an I/O bit (actual I/O bits must be defined as an output, see <a href="#SetBitDirection">SetBitDirection</a>).</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit Number to clear. Accepted Range 0...2047.</p>     

<h3>Example</h3>
        
  <p>ClearBitBuf0</p>
  
        <hr />
        
        <h2><a name="ClearFlashImage"></a>ClearFlashImage </h2>

<h3>Description</h3>
        <p>Prepare to download FLASH firmware image. Sets entire RAM flash image to zero.</p>

<h3>Parameters</h3>
<p>None.</p>

<h3>Example</h3>
        
  <p>ClearFlashImage</p>
  
        <hr />
        
 <h2><a name="CommutationOffset"></a>CommutationOffset<em>&lt;N&gt;=&lt;X&gt;</em> or CommutationOffset<em>&lt;N&gt;</em></h2>
 

<h3>Description</h3>
        <p>Get or Set 3 or 4 phase commutation offset. 
        When brushless commutation is performed, the desired Output Magnitude is 
        distributed and applied to the various motor coils as a function of 
        position. The commutation offset shifts the manner in which the 
        Output Magnitude is applied.</p>
     
        <p>For a 3 phase brushless output mode, commutation offset is used in the following manner.</p>
        <p>PhaseA = OutputMagnitude * sin((Position+CommutationOffset)*invDistPerCycle*2&#960;)</p>
        <p>PhaseB = OutputMagnitude * sin((Position+CommutationOffset)*invDistPerCycle*2&#960; + 2&#960;/3)</p>
        <p>PhaseC = OutputMagnitude * sin((Position+CommutationOffset)*invDistPerCycle*2&#960; + 4&#960;/3)</p>

        <p>For a 4 phase brushless output mode, commutation offset is used in the following manner.</p>

        <p>PhaseA = OutputMagnitude * sin((Position+CommutationOffset)*invDistPerCycle*2&#960;)</p>
        <p>PhaseB = OutputMagnitude * cos((Position+CommutationOffset)*invDistPerCycle*2&#960;)</p>

        <p>See also <a href="#InvDistPerCycle">invDistPerCycle</a> and
        <a href="ConfigurationScreen/ConfigurationScreen.htm#Inv_Dist_Per_Cycle">
        Configuration Parameters</a>.</p>
        
        <h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;X&gt;</strong> </em></p>
<p>Offset in units of Position.</p>
        
<h3>Example</h3>
        
  <p>CommutationOffset0=100.0</p>
  
   <hr />
   
   <h2><a name="ConfigSpindle">ConfigSpindle<em></em></a><em>&lt;T&gt; &lt;A&gt; &lt;U&gt; &lt;W&gt; &lt;C&gt;</em></h2>

<h3>Description</h3>
        <p>Enables/Disables and configures the firmware to monitor Spindle Speed 
		and Position to allow reporting of Spindle Speed and to perform 
		Threading operations.</p>
	
		<p>See also: <a href="#TrigThread">TrigThread</a> and <a href="#GetSpindleRPS">GetSpindleRPS</a></p>
	
		<h3>Parameters</h3>
  <p><em><strong>&lt;T&gt;</strong></em></p>
<p>Spindle Sensor Type. 0 - disables spindle measurement, 1 - defines the sensor type as a quadrature encoder . </p>

  <p><em><strong>&lt;A&gt;</strong> </em></p>
<p>Axis - Defines the Axis Channel that will maintain the 
Spindle Position. Note this is not a Encoder input channel. Rather 
it is the Axis Channel that has a Encoder input Channel defined. Valid 
range 0 ...7.</p>
        
  <p><em><strong>&lt;U&gt;</strong> </em></p>
<p>Update Time - delta time for measurement. This is the 
amount of time between Spindle Position samples used to calculate the current 
speed. Speed = Delta Position/Delta Time. A longer time period will 
allow for a more accurate speed measurement, especially at low speeds and if a 
low resolution encoder is used. A shorter Update Time will make the speed 
measurement to be more responsive as it changes. Units of seconds. 
Typical value 0.2 seconds</p>

  <p><em><strong>&lt;W&gt;</strong> </em></p>
<p>Tau - low pass filter time constant for threading. 
Pseudo Time along a time dependent trajectory path is adjusted based on spindle 
position. The Pseudo Time is smoothed using a low pass filter with a time 
constant of Tau to avoid making too abrupt changes of position, velocity or 
acceleration. Units of seconds. Typical value 0.1 seconds</p>
        
  <p><em><strong>&lt;C&gt;</strong> </em></p>
<p>Counts per Revolution. Number of encoder counts 
per full revolution of the Spindle.</p>

<h3>Example</h3>
        
  <p>ConfigureSpindle 1 0 0.2 0.1 4096.0</p>
  
        <hr />
        
        <h2><a name="D"></a>D<em>&lt;N&gt;=&lt;M&gt;</em> or D<em>&lt;N&gt;</em></h2>
        
<h3>Description</h3>
        <p>Get or Set <a href="StepScreen/StepScreen.htm#PID">PID</a> derivative Gain.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

  <p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Derivative Gain value. The units of the derivative gain are in Output Units/Position Units x <em>
<a href="StepScreen/StepScreen.htm#Servo_Sample_Time">Servo Sample Time</a></em>.</p>
        
<h3>Example</h3>
        
<p>D0=10.0</p>
  
<hr />
 
<h2><a name="DAC"></a>DAC<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Set DAC to value. Kanalog DACs (0...7) and Kogna DACs (8...15) have ±10 Volt ranges. See also <a href="AnalogIOScreenKFLOP/AnalogIOScreen.htm#DACs">Analog Status Screen</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>DAC channel to set. Valid Range 0...7 (Kanalog) 8...15 Kogna.</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>DAC value to set in counts. Valid Range -2048...2047.</p>
        
<h3>Example</h3>
        
<p>DAC0=2000</p>

<hr />
<h2><a name="DeadBandGain"></a>DeadBandGain<em>&lt;N&gt;=&lt;M&gt;</em> or DeadBandGain<em>&lt;N&gt;</em></h2>
        

<h3>Description</h3>
        <p>Get or Set gain while error is within the <a href="#DeadBandRange">deadband range</a>. See
        <a href="StepScreen/StepScreen.htm#Dead_Band">DeadBand Description</a>. 
        See <a href="ServoFlowDiagram.htm">Servo Flow Diagram</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Gain to be applied. A value of 1.0 will have normal gain while within the deadband. A value less than 1.0 will have 
reduced gain within the deadband.</p>    

<h3>Example</h3>
        
<p>DeadBandGain0=0.5</p>
 
<hr />
<h2><a name="DeadBandRange"></a>DeadBandRange<em>&lt;N&gt;=&lt;M&gt;</em> or DeadBandRange<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Get or Set 
        range where <a href="#DeadBandGain">deadband gain </a>is to be applied. 
        See <a href="StepScreen/StepScreen.htm#Dead_Band">DeadBand Description</a>. 
        See <a href="ServoFlowDiagram.htm">Servo Flow Diagram</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>±Range in Position units,</p>  

<h3>Example</h3>
        
<p>DeadBandRange0=1.0</p>

<hr />
<h2><a name="DefineCS">DefineCS<em></em></a><em>&lt;X&gt; &lt;Y&gt; &lt;Z&gt; &lt;A&gt; &lt;B&gt; &lt;C&gt;</em> or DefineCS</h2>
 
<h3>Description</h3>
<p>Set or get the defined X Y Z A B C coordinate system axis assignments for up to 6 axes of coordinated motion. Unused axis are assigned an axis channel of -1. </p>
<p>See also <a href="CoordinatedMotion.htm">Coordinated Motion</a>.</p>

 <h3>Parameters</h3>
 <p><em><strong>&lt;X&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>X</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<p><em><strong>&lt;Y&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>Y</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<p><em><strong>&lt;Z&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>Z</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<p><em><strong>&lt;A&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>A</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<p><em><strong>&lt;B&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>B</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<p><em><strong>&lt;C&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>C</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<h3>Example</h3>
        
<p>DefineCS</p>
<p>DefineCS = 0 1 2 3 4 -1</p>

<hr />
<h2><a name="DefineCSEX">DefineCSEX<em></em></a><em>&lt;X&gt; &lt;Y&gt; &lt;Z&gt; 
	  &lt;A&gt; &lt;B&gt; &lt;C&gt; &lt;U&gt; &lt;V&gt;</em> or DefineCSEX</h2>
 
<h3>Description</h3>
        <p>Set or get the defined X Y Z A B C coordinate system axis assignments for up to 8 axes of coordinated 
		motion. Unused axis are assigned an axis channel of -1. </p>
        <p>See also <a href="CoordinatedMotion.htm">Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p><em><strong>&lt;X&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>X</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;Y&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>Y</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;Z&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>Z</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;A&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>A</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;B&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>B</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;C&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>C</em>. Valid range -1 ... 7v (Kogna: 0 ... 15). </p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;U&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>U</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>
<p><em><strong>&lt;V&gt;</strong></em></p>
<p>Assigned Axis channel number for <em>V</em>. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p>Use -1 if axis is not defined.</p>

<h3>Example</h3>
<p>DefineCSEX</p>
<p>DefineCSEX = 0 1 2 3 4 5 6 7</p>

<hr />

<h2><a name="DefineCSP"></a>DefineCSP=<em>&lt;XP&gt;&lt;YP&gt;&lt;ZP&gt;&lt;AP&gt;&lt;BP&gt;&lt;CP&gt;&lt;UP&gt;&lt;VP&gt;</em> (Kogna only) </h2>

<h3>Description</h3>
<p>Define  the 8 Axes that make up the XP YP ZP AP BP CP UP VP Prime Coordinate System.&nbsp; Set unused Axes to -1.<br>
</p>
<h3>Parameters</h3>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<h3>Example</h3>
<p>DefineCSP  = 0 1 -1 -1 -1 -1 -1 -1</p>
 
<hr />		  
		  
<h2><a name="Dest"></a>Dest<em>&lt;N&gt;=&lt;M&gt;</em> or Dest<em>&lt;N&gt;</em> </h2>

<h3>Description</h3>
<p>Set or get the last commanded destination for an axis. The Dest (destination) is normally set (or continuously updated) as the result of a motion command (Move, Jog, or Coordinated motion) , but may also be set with this command if no motion is in progress.</p>

<h3><em><strong>&lt;N&gt;</strong></em></h3>
<h3>Parameters</h3>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Value to set in Position units. Valid range - any.</p>
        
<h3>Example</h3>
<p>Dest0=100</p>
<p>or</p>
<p>Dest0</p>
 
<hr />
<h2><a name="DisableAxis"></a>DisableAxis<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Kill any motion and disable motor. Any associated output PWM channels for the axis will be set to 0R mode.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>


<h3>Example</h3>
       
<p>DisableAxis0</p>

<hr />
<h2><a name="Echo"></a>Echo<em>&lt;S&gt;</em> </h2>

<h3>Description</h3>
<p>Echo character string back to the <a href="ConsoleScreen/ConsoleScreen.htm">Console Screen</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;S&gt;</strong></em></p>
<p>Any character string &lt; 80 characters</p>

<h3>Example</h3>
        
<p>Echo Hello</p>

<hr />
<h2><a name="EnableAxis"></a>EnableAxis<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set an Axis' <em>destination</em> to the Current Measured Position and enable the axis. See also <a href="#EnableAxisDest">EnableAxisDest</a> to explicitly set the desired destination for the axis. Note for a         MicroStepper Axis (which normally has no measured position) this command will leave the Axis' destination unchanged. .</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<h3>Example</h3>
        
<p>Enable0</p>

<hr />
<h2><a name="EnableAxisDest"></a>EnableAxisDest<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Set an Axis' <em>destination</em> to the specified position and enable the axis. See also <a href="#EnableAxis">EnableAxis</a> to set the desired destination to the current measured position.</p>
		  
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Destination for the axis. Position units. Valid range - any.</p>
        
<h3>Example</h3>
        
<p>EnableAxisDest0 1000.0</p>

<hr />
<h2><a name="Enabled"></a>Enabled<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Display whether the specified axis is enabled, 1 - if currently enabled, 0 - if not enabled.</p>
<p>Note: to enable an axis use <a href="#EnableAxis">EnableAxis</a> or <a href="#EnableAxisDest">EnableAxisDest</a>. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<h3>Example</h3>
<p>Enabled0</p>

<hr />
<h2><a name="EndRapidBuf">EndRapidBuf</a> </h2>

<h3>Description</h3>

<p>Inserts into coordinated move buffer a command to indicate Rapid has been completed and to no longer use Rapid 
FRO. </p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
        
<p>EndRapidBuf</p>

<hr />
<h2><a name="EntryPoint"></a>EntryPoint<em>&lt;N&gt; &lt;H&gt;</em></h2>

<h3>Description</h3>
<p>Set execution start address of user thread to specified address. This operation if normally performed automatically when downloading a user program.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>User Thread number to set. Decimal number. Valid range 1...7.</p>

<p><em><strong>&lt;H&gt;</strong> </em></p>
<p>Start address. 32 bit Hex number.</p>   

<h3>Example</h3>     
<p>Entrypoint1 80030000</p>

<hr />
<h2><a name="ExecBuf"></a>ExecBuf</h2>

<h3>Description</h3>
<p>Execute the contents of the coordinated motion buffer. Use <a href="#CheckDoneBuf">CheckDoneBuf</a> to determine when the buffer has been fully executed. See also <a href="CoordinatedMotion.htm">Coordinated Motion</a>.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>ExecBuf</p>

<hr />
<h2><a name="ExecTime"></a>ExecTime</h2>

<h3>Description</h3>
<p>Displays the amount of the Coordinated Motion Buffer that has 
been already executed in terms of <em>Time</em>.
<em><strong>KMotion</strong></em> contains a Coordinated Motion Buffer where move segments 
(linear and arcs) and I/O commands may be downloaded and executed in real time. 
This command is useful for determining how long before the Coordinated Motion 
Buffer will complete. For example, if a number of segments have been 
downloaded where their total execution time is 10 seconds, and they are 
currently in progress of being executed, and the ExecTime command reports that 8 
seconds worth of segments have been executed, then the remaining time before the 
queue completes (or starves for data) would be 2 seconds. This 
command is useful for applications where it is important not to download data 
too far ahead so changes to the Trajectory may be made. The value returned 
is a floating point decimal value in Seconds with 3 decimal places. If the 
Coordinated Motion has already completed the amount of time will be a negative 
value whose magnitude is the total time that was executed. See also <a href="CoordinatedMotion.htm">Coordinated Motion</a>.
</p>

<p>Displays:</p>
<p> Executed time in seconds as a floating point decimal number with 3 decimal places</p>
<p>ie. 10.123</p>
<p>If the buffer has already completed the value will be negative</p>
<p>ie. -10.123</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>ExecTime</p>

<hr />
<h2><a name="Execute"></a>Execute<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Begin execution of thread. Execution begins at the previously specified thread entry point.</p>
<p>See also <a href="ProgramScreen/ProgramScreen.htm">C Program Screen</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Thread number to begin execution. Decimal number. Valid range 1...7.</p>

<h3>Example</h3>      
<p>Execute1</p>

<hr />
<h2><a name="FFAccel"></a>FFAccel<em>&lt;N&gt;=&lt;M&gt;</em> or FFAccel<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set or get Acceleration <em>feed forward</em> for axis.</p>
<p>See also <a href="StepScreen/StepScreen.htm#Feed_Forward">feed forward tuning</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Feed forward value. units are in Output units per Input 
Units per sec<sup>2</sup>. </p>
        
<h3>Example</h3>
<p>FFAccel0=100.0<br /> or
<br />
FFAccel0</p>

<hr />
<h2><a name="FFVel"></a>FFVel<em>&lt;N&gt;=&lt;M&gt;</em> or FFVel<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set or get Velocity <em>feed forward</em> for axis.</p>
<p>See also <a href="StepScreen/StepScreen.htm#Feed_Forward">feed forward tuning</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Feed forward value. units are in Output units per Input 
Units per sec. </p>
  
<h3>Example</h3>
<p>FFVel0=100.0<br />
or<br />
FFVel0</p>

<hr />
<h2><a name="Flash"></a>Flash</h2>

<h3>Description</h3>
<p>Flash current <em>user programs, </em>persistent memory area<em>, </em>all axes 
        configurations, tuning, and filter parameters to non-volatile memory. 
        The entire state of the <em><strong>KMotion</strong></em> is saved to FLASH memory. 
        Any active user programs will be paused during the flash operation</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>Flash</p>

<hr />
<h2><a name="FlushBuf">FlushBuf</a></h2>

<h3>Description</h3>
<p>Informs KFLOP that the Coordinated Motion Buffer has been 
Flushed. This permits KFLOP to execute to the end of the buffer without 
performing protection against buffer starvation which would normally perform 
Feed Rate reduction in an attempt to avoid buffer underflow. </p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>FlushBuf</p>

<hr />
<h2><a name="FPGA">FPGA</a><em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Directly write an 8-bit value to an FPGA register. Should be only used with caution. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>FPGA Register address to write as a decimal number. Valid range 0...1023.</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>8-bit value as a decimal number. Valid range 0...255.</p>

<h3>Example</h3>
<p>FPGA 261 192</p>

<hr />
<h2><a name="FPGAW">FPGAW</a><em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Directly write a 16-bit value to an FPGA register. Should be only used with caution. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>FPGA Register address to write as a decimal number. Valid range 0...1023.</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>16-bit value as a decimal number. Valid range 0...65536.</p>

<h3>Example</h3>
<p>FPGAW 5 263</p>

<hr />
<h2><a name="GatherMove"></a>GatherMove<em>&lt;N&gt; &lt;M&gt; &lt;L&gt;</em></h2>

<h3>Description</h3>
<p>Performs a profiled move on an axis of the specified distance while <a href="data_gathering.htm">gathering</a> the specified number of points of data. This command is used while gathering data for the <a href="StepScreen/StepScreen.htm">Step Response Screen</a> plots.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Distance to move. Units are Position Units. Valid Range - any.</p>
        
<p><em><strong>&lt;L&gt;</strong> </em></p>
<p>Number of servo samples to gather. Valid Range - 1...40000</p>
        
<h3>Example</h3>
<p>GatherMove0 1000.0 2000</p>

<hr />
<h2><a name="GatherStep"></a>GatherStep<em>&lt;N&gt; &lt;M&gt; &lt;L&gt;</em></h2>

<h3>Description</h3>
<p>Performs a step on an axis of the specified distance while <a href="data_gathering.htm">gathering</a> the specified number of points of data. This command is used while gathering data for the <a href="StepScreen/StepScreen.htm">Step Response Screen</a> plots.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Distance to step. Units are Position Units. Valid 
Range - any.</p>
  
<p><em><strong>&lt;L&gt;</strong> </em></p>
<p>Number of servo samples to gather. Valid Range - 1...40000</p>
        
<h3>Example</h3>
<p>GatherStep0 1000.0 2000</p>

<hr />
		  
<h2><a name="GetAllDestHex" id="GetAllDestHex"></a>GetAllDestHex</h2>

<h3>Description</h3>
<p>Get  all 8 Axis Destinations  as 64 bit doubles, each as two 32-bit Hexadecimal Values  (low|high).<br>
</p>

<h3>Example</h3>
<p>Axis 0  Destination of 1000.0 <br>
  GetAllDestHex<br>
  00000000 408F4000 00000000 00000000 00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 </p>
<hr />
		  
<h2><a name="GetAllDestVelHex"></a>GetAllDestVelHex</h2>
<h3>Description</h3>
<p>Get  all 8 Axis Destinations and Velocities as 64 bit doubles, each as two 32-bit Hexadecimal Values  (low|high).<br>
</p>
<h3>Example</h3>
<p>GetAllDestVelHex </p>
<hr />
<h2><a name="GetBitDirection"></a>GetBitDirection<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Displays whether an IO bit N (0...2047) is defined as input (0) or output (1)</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>I/O bit number. Accepted range 0...2047</p>

<h3>Example</h3>
<p>GetBitDirection0</p>

<hr />
<h2><a name="GetGather"></a>GetGather<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Upload N data points from previous <a href="#GatherMove">GatherMove</a> or <a href="#GatherStep">GatherStep</a> command. 
Captured commanded destination, measured position, and output are uploaded as hex values (that represent binary images of 32-bit floating point values). Eight samples (24 values) per line.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Number of points to upload. Valid range 1...40000.</p>

<h3>Example</h3>
<p>GetGather 1000</p>
 
<hr />
<h2> <a name="GetGatherDec"></a>GetGatherDec<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Reads a single word from the <a href="data_gathering.htm">Gather Buffer</a> at the specified offset. A single 32-bit value displayed as a signed decimal integer number will be displayed.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Offset into gather buffer, specified as a decimal offset of 32 bit words. Valid range 0...1999999 </p>

<h3>Example</h3>
<p>GetGatherDec 1000</p>

<hr />
<h2><a name="GetGatherHex"></a>GetGatherHex<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Reads multiple words from the <a href="data_gathering.htm">Gather Buffer</a> beginning at the specified offset. Hexadecimal values will be displayed that will represent binary images of the contents of the gather buffer as 32 bit words.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Offset into gather buffer, specified as a decimal offset of 32 bit words. Valid range 0...1999999 </p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Number of 32 bit words to display. Decimal integer. Valid range 1...2000000</p>
        
<h3>Example</h3>
<p>GetGatherHex 0 100</p>

<hr />
<h2><a name="GetInject"></a>GetInject<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Display results of signalinjection and gathering. Bode Plot measurement involves injecting a signal 
        and measuring the response for each of N_CPLX (2048) samples. This 
        command gets the result from the injection. 3 values per sample 
        are uploaded. Injection value, position response (relative to 
        destination), and servo output. All 3 values are printed as 
        hexadecimal values which represent the image of a 32-bit floating point 
        value. 8 samples (24 hex values) are printed per line.</p>

<h3>Parameters</h3>
<p>None</p>
       
<h3>Example</h3>
<p>GetInject</p>

<hr />
		  
<h2><a name="GetIpAddr"></a>GetIpAddr (Kogna only)</h2>

<h3>Description</h3>
<p>Get board's Ethernet IP Address.
</p>

<h3>Parameters</h3>
<p>None</p>
       
<h3>Example</h3>
<p>GetIpAddr</p>

<hr />		
		  
<h2><a name="GetKognaPWMEne"></a>GetKognaPWMEne<em>&lt;N&gt;</em>=<em>&lt;N&gt;</em> (Kogna only)</h2>

<h3>Description</h3>
<p>Get Kogna PWM. Enable channels 0-7. 1=Enable 0=Disable.
</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM  channel number. Valid range 0...7.
</p>
       
<h3>Example</h3>
<p>GetKognaPWMEn0</p>

<hr />		
		  
<h2><a name="GetKognaPWMLength"></a>GetKognaPWMLength<em>&lt;N&gt;</em>=<em>&lt;N&gt;</em> (Kogna only)</h2>

<h3>Description</h3>
<p>Get Kogna PWM Pulse Length channels 0-7. 0-255 counts.
</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM  channel number. Valid range 0...7.<br>
</p>
       
<h3>Example</h3>
<p>GetKognaPWMLength0</p>

<hr />			  
		  
<h2><a name="GetPersistDec"></a>GetPersistDec<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Read a single word from the <em>Persist Array</em> at the specified offset a single 32-bit value displayed as a <strong>signed decimal number</strong>. The persist array is a general purpose array of N_USER_DATA_VARS (200) 
        32-bit values that is accessible to the host as well as <em><strong>KMotion</strong></em>
        <a href="ProgramScreen/ProgramScreen.htm">C Programs</a>. It may be used to share parameters, commands, or information between programs.</p>
        <p>C Programs  may access this array as the integer array:</p>
        <code>
        <p>persist.UserData[n];</p>
        </code>
        <p>It also resides in the <em><strong>KMotion</strong></em> Persist memory structure so that if 
        memory is flashed, the value will be present at power up.</p>
        <p>See also <a href="#GetPersistHex">GetPersistHex</a>, <a href="#SetPersistDec">
        SetPersistDec</a>, <a href="#SetPersistHex">SetPersistHex</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Offset into the integer array. Valid range 0...199.</p>

<h3>Example</h3>
<p>GetPersistDec 10</p>

<hr />
<h2><a name="GetPersistHex"></a>GetPersistHex<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Read a single word from the <em>Persist Array</em> at the specified offset a single 32-bit value displayed as an <strong>unsigned hexadecimal number</strong>. The persist array is a general purpose array of N_USER_DATA_VARS (200) 32-bit values that is accessible to the host as well as <em><strong>KMotion</strong></em> <a href="ProgramScreen/ProgramScreen.htm">C Programs</a>. It may be used to share parameters, commands, or information between programs.</p>

<p>C Programs may access this array as the integer array:</p>
<p><code>
persist.UserData[n];
</code></p>
<p>It also resides in the <em><strong>KMotion</strong></em> Persist memory structure so that if memory is flashed, the value will be present at power up.</p>
<p>See also <a href="#GetPersistDec">GetPersistDec</a>, <a href="#SetPersistDec">SetPersistDec</a>, <a href="#SetPersistHex">SetPersistHex</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Offset into the integer array. Valid range 0...199.</p>

<h3>Example</h3>
<p>GetPersistHex 10</p>
 
<hr />
<h2><a name="GetSpindleRPS">GetSpindleRPS</a></h2>

<h3>Description</h3>
<p>Reports the current Spindle Speed in revolutions per second.</p>
<p>See also <a href="#ConfigSpindle">ConfigSpindle</a> and <a href="#TrigThread">TrigThread</a></p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>GetSpindleRPS</p>

<hr />
		  
<h2><a name="GetSerialNumber"></a>GetSerialNumber (Kogna only)</h2>

<h3>Description</h3>
 <p>Get  board's Serial Number.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>GetSerialNumber</p>

<hr />		  
<h2><a name="GetStatus"></a>GetStatus</h2>

<h3>Description</h3>
 <p>Upload Main Status record in hex format.
        <em><strong>KMotion</strong></em> provides a means of quickly uploading the most 
        commonly used status. This information is defined in the PC-DSP.h 
        header file as the MAIN_STATUS structure. The entire stucture is 
        uploaded as a binary image represented as 32-bit hexadecimal values.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>GetStatus</p>

<hr />
<h2><a name="GetStopState">GetStopState</a></h2>

<h3>Description</h3>
<p>Reports the state of any feedhold stop in progress. 0 = 
not stopping, 1=stopping a coord motion, 2=stopping an independent motion of one 
or more axes, 3=fully stopped, 4=independent motion of all related axes fully 
stopped. This returns the KFLOP C program variable - CS0_StoppingState. 
A feedhold stop can be initiated from C code or from the Console Command
<a href="#StopImmediate">StopImmediate</a>. </p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>GetStopState</p>

<hr />
<h2> <a name="GetVirtualBits" id="GetVirtualBits">GetVirtualBits<em>&lt;N&gt; &lt;O&gt;</em></a></h2>

<h3>Description</h3>
<p>KFLOP supports an extended range of 1024 virtual I/O bits. These bits reside in KFLOP's memory as a table of 32 32-bit words. The command GetVirtualBits is used to upload KFLOP virtual bit words to the PC in bulk. Any consecutive group of words can be uploaded with a single command. The words are uploaded as hexadecimal values.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Starting word in decimal</p>

<p><strong>&lt;O&gt;</strong></p>
<p>Number of words in decimal</p>

<h3>Example</h3>
<p>If the top 4 bits of virtual bit word #1 (the second word, bits 1084, 1085, 1086, 1087) are set with all other bits zero, then the command shown below to display 3 words starting at word #1 would display:</p>

<p>GetVirtualBits 1 3 <br />
F0000000 0 0</p>


<hr />
		  
<h2> <a name="HRPWM" id="HRPWMSetMode">HRPWMSetMode<em>&lt;N&gt; = &lt;M&gt;</em></a> (Kogna only)</h2>

<h3>Description</h3>
<p>Set HRPWM Pin Mode mux channels 0-3 1=GPIO 0=HRPWM</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>HRPWM  channel number. Valid range 0...3.</p>
<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Mode. Valid range 0...1. 1=GPIO, 0=HRPWM.</p>
<h3>Example</h3>
<p>HRPWMSetMode0=1<br>
</p>


<hr />		  
		  
<h2><a name="I"></a>I<em>&lt;N&gt;=&lt;M&gt;</em> or I<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set <a href="StepScreen/StepScreen.htm#PID">PID</a> Integral Gain.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Integral Gain value. The units of the derivative gain are in Output Units x Position Units x <em>
<a href="StepScreen/StepScreen.htm#Servo_Sample_Time">Servo Sample Time</a></em>.</p>
        
<h3>Example</h3>
<p>I0=10.0</p>

<hr />
<h2><a name="IIR"></a>IIR<em>&lt;N&gt; &lt;M&gt;=&lt;A1&gt; &lt;A2&gt; &lt;B0&gt; &lt;B1&gt; &lt;B2&gt; or IIR&lt;N&gt; &lt;M&gt; </em></h2>

<h3>Description</h3>
<p>Set or get IIR Z domain servo filter.</p>
<p>See also <a href="FilterScreen/FilterScreen.htm">IIR Filter Screen</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Filter number for axis. Valid range 0...2.</p>
 
<p><strong><em>&lt;A1&gt; &lt;A2&gt;</em> <em>&lt;B0&gt; &lt;B1&gt;</em> <em>&lt;B2&gt; </em> </strong></p>
<p>Filter coefficients represented as floating point decimal values.</p>
        
<h3>Example</h3>
<p>IIR0 0=1.5 2.5 -3.5 4.5 5.5</p>

<hr />
<h2><a name="Inject"></a>Inject<em>&lt;N&gt; &lt;F&gt; &lt;A&gt;</em></h2>

<h3>Description</h3>
<p>A Inject random stimulus into an axis with the specified cutoff frequency and amplitude. Useful for generating
        <a href="BodeScreen/BodeScreen.htm#Amplitude">Bode plots</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;F&gt;</strong> </em></p>
<p>Cuttoff Frequency in Hz. Valid range - any.</p>
       
<p><em><strong>&lt;A&gt;</strong> </em></p>
<p>Amplitude in position units. Valid range - any.</p>

<h3>Example</h3>
<p>Inject0 100.0 20.0</p>

<hr />
<h2><a name="InputChan0"></a>InputChan<em>&lt;M&gt; &lt;N&gt;=&lt;C&gt;</em> or InputChan<em>&lt;M&gt; &lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set the first or second <em>Input Channel</em> of an axis. See description of this parameter on the <a href="ConfigurationScreen/ConfigurationScreen.htm#Input_Channels">Configuration Screen.</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Selected input channel. Valid range 0...1.</p>

<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;C&gt;</strong> </em></p>
<p>Channel number to assign. Valid range 0...7.</p>

<h3>Example (set first input channel of axis 3 to 3)</h3>
<p>InputChan0 3=30<br />
or<br />
InputChan0 3</p>

<hr />
<h2><a name="InputGain0"></a>InputGain<em>&lt;M&gt; &lt;N&gt;=&lt;G&gt;</em> or InputGain<em>&lt;M&gt; &lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set or get first or second Input Gain of an axis. See description of this parameter on the <a href="ConfigurationScreen/ConfigurationScreen.htm#Input_Channels">Configuration Screen.</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Selected input channel. Valid range 0...1.</p>

<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;C&gt;</strong> </em></p>
<p>Input Gain. Valid range - any.</p>

<h3>Example</h3>     
<p>InputGain0 3=1.0</p>


<hr />
<h2><a name="InputMode"></a>InputMode<em>&lt;N&gt;=&lt;M&gt;</em> or InputMode<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set or get the position input mode for an axis. See description of this parameter on the <a href="ConfigurationScreen/ConfigurationScreen.htm#Axis_Modes">Configuration Screen.</a></p>

<p>Valid modes are (from PC-DSP.h):</p>

	<pre>
	<code class="language-c">
	#define NO_INPUT_MODE 0
	#define ENCODER_MODE 1
	#define ADC_MODE 2
	#define RESOLVER_MODE 3
	#define USER_INPUT_MODE 4
    </code>
    </pre>
        
<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Mode. Valid range 1...4</p>
        
<h3>Example</h3>
<p>SetInputMode0=1</p>

<hr />
<h2><a name="InputOffset0"></a>InputOffset<em>&lt;M&gt; &lt;N&gt;=&lt;O&gt;</em> or InputOffset<em>&lt;M&gt; &lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set or get first or second Input Offset of an axis. See description of this parameter on the <a href="ConfigurationScreen/ConfigurationScreen.htm#Input_Channels">Configuration Screen.</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Selected input channel. Valid range 0...1.</p>

<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;O&gt;</strong> </em></p>
<p>Input Offset. Valid range - any.</p>

<h3>Example</h3>
<p>InputOffset0 3=0.0</p>

<hr />
<h2><a name="InvDistPerCycle"></a>InvDistPerCycle<em>&lt;N&gt;=&lt;X&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set distance per cycle (specified as an inverse) of an axis. May specify the cycle of either a Stepper of Brushless Motor.</p>
<p>See description of this parameter on the <a href="ConfigurationScreen/ConfigurationScreen.htm#Inv_Dist_Per_Cycle">Configuration Screen.</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;X&gt;</strong></em></p>
<p>Inverse (reciprocal) of distance for a complete cycle. 
Inverse position units. Should be specified exactly or with very high 
precision (double precision accuracy ~ 15 digits). Valid range - any.</p>

<h3>Example</h3>
<p>InvDistPerCycle0=0.05</p>

<hr />
<h2><a name="Jerk"></a>Jerk<em>&lt;N&gt;=&lt;J&gt;</em> or Jerk<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set the max <a href="Glossary.htm#Jerk">jerk</a> (for independent moves and jogs)</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;J&gt;</strong> </em></p>
<p>The max Jerk. Units are in <em>Position units</em> per sec<sup>3</sup></p>
        
<h3>Example</h3>
<p>Jerk0=10000.0</p>

<hr />
<h2><a name="Jog"></a>Jog<em>&lt;N&gt;=&lt;V&gt;</em></h2>

<h3>Description</h3>
<p>Move at constant velocity.

Uses <a href="#Accel">Accel</a> and <a href="#Jerk">Jerk</a> parameters for the axis to accelerate from the current velocity to the specified velocity. Axis should be already enabled.Specify zero velocity to decelerate to a stop.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;V&gt;</strong> </em></p>
<p>New Velocity in position units/second. Valid range - any.</p>
        
<h3>Example</h3>
<p>Jog0=-200.5</p>

<hr />
		  
<h2><a name="JogAtAccel"></a>JogAtAccel<em>&lt;N&gt;=&lt;V&gt;&lt;A&gt;</em></h2>

<h3>Description</h3>
<p>Move axis N at velocity V using specified Acceleration.  Uses Jerk parameter for the axis. Specify zero V to D to stop.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;V&gt;</strong> </em></p>
<p>New Velocity in position units/second. Valid range - any.</p>
<p><em><strong>&lt;A&gt;</strong></em></p>
<p>Desired Acceleration for the Motion. Valid range - any.</p>
        
<h3>Example</h3>
<p>JogAtAccel0=-200.5  5000.0</p>

<hr />
		  
<h2><a name="Kill"></a>Kill<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Stop execution of a user thread.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Thread to halt. Valid range 1..7</p>

<h3>Example</h3>    
<p>Kill0</p>

<hr />
<h2><a name="Lead"></a>Lead<em>&lt;N&gt;=&lt;M&gt;</em> or Lead<em>&lt;N&gt;</em></h2>
 
<h3>Description</h3>
<p>Set or get <a href="ConfigurationScreen/ConfigurationScreen.htm#Lead_Compensation">Lead Compensation</a> for an axis. Lead Compensation is used to compensate for lag caused by motor inductance.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Lead Compensation. Valid range - any.</p>
        
<h3>Example</h3>
<p>Lead0=10.0</p>
 
<hr />
<h2><a name="LED"></a>LED<em>&lt;N&gt;=&lt;B&gt;</em></h2>
 
<h3>Description</h3>
<p>Turn  LED number 0 or 1 on or off.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>0 or 1 for the two LEDs.</p>

<p><em><strong>&lt;B&gt;</strong> </em></p>
<p>1 = on, 0 = off.</p>
        
<h3>Example</h3>
<p>LED=1=1</p>
		  
<hr />
		  
<h2><a name="LimitSwitch"></a>LimitSwitch<em>&lt;N&gt;=&lt;H&gt;</em></h2>

<h3>Description</h3>
<p>Configures Limit Switch Options. Specify Hex value as described below.</p>
<p>See also <a href="ConfigurationScreen/ConfigurationScreen.htm#Limit_Switch_Options">Configuration Screen</a>.</p>


<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;H&gt;</strong> </em></p>
<p>32-bit hexadecimal value:</p>
<p>Bit 0 1=Stop Motor on Neg Limit, 0=Ignore Neg limit</p>
<p>Bit 1 1=Stop Motor on Pos Limit, 0=Ignore Pos limit</p>
<p>Bit 2 Neg Limit Polarity 0=stop on high, 1=stop on low</p>
<p>Bit 3 Pos Limit Polarity 0=stop on high, 1=stop on low</p>
<p>Bits 4-7 Action:<br />
<span class="indent2">0 Kill Motor Drive</span><br />
<span class="indent2">1 Disallow drive in direction of limit</span><br />
<span class="indent2">2 Stop movement</span></p>
<p>Bits 16-23 Neg Limit Bit number</p>
<p>Bits 24-31 Pos Limit Bit number</p> 

<h3>Example</h3>
<p>LimitSwitch2 0C0D0003</p>

<hr />
		  
<h2><a name="LimitSwitchNegBit"></a>LimitSwitchNegBit<em>&lt;N&gt;=&lt;B&gt;</em></h2>

<h3>Description</h3>
<p>Configure  Limit Switch Negative Bit for Axis.&nbsp; Specify  Decimal Value.</p>
<p>See also <a href="ConfigurationScreen/ConfigurationScreen.htm#Limit_Switch_Options">Configuration Screen</a>.</p>


<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p> Axis channel number. Valid range 0...7 (KFLOP)&nbsp;          0..15 (Kogna).</p>

<p><em><strong>&lt;B&gt;</strong> </em></p>
<p>Bit number. Vaild range 0...2047.</p> 

<h3>Example</h3>
<p>LimitSwitchNegBit2 1024</p>

<hr />	
		  
<h2><a name="LimitSwitchPosBit"></a>LimitSwitchPOsBit<em>&lt;N&gt;=&lt;B&gt;</em></h2>

<h3>Description</h3>
<p>Configure  Limit Switch Positive Bit for Axis.&nbsp; Specify  Decimal Value.</p>
<p>See also <a href="ConfigurationScreen/ConfigurationScreen.htm#Limit_Switch_Options">Configuration Screen</a>.</p>


<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p> Axis channel number. Valid range 0...7 (KFLOP)&nbsp;          0..15 (Kogna).</p>

<p><em><strong>&lt;B&gt;</strong> </em></p>
<p>Bit number. Vaild range 0...2047.</p> 

<h3>Example</h3>
<p>LimitSwitchPosBit2 1024</p>

<hr />				  
		  
		  
<h2><a name="Linear"></a>Linear<em>&lt;X<sub>0</sub>&gt; &lt;Y<sub>0</sub>&gt; &lt;Z<sub>0</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>
        
<h3>Description</h3>
<p>Place linear (in 6 dimensions) interpolated move into the coordinated motion buffer. See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>. A path through space is defined where <em>x,</em> <em>y, z, a, b, and c</em> are changing in a linear manner. A parametric equation is defined which describes which portion of the path as well as how as a function of time the path is to be traversed.</p>

<p>Although the Linear command may be sent directly, the Linear command is normally generated automatically to perform a planned trajectory by the coordinated motion library or GCode.</p>

<p><em>(<strong>X<sub>0</sub>,Y</strong><sub><strong>0</strong></sub><strong>,Z</strong><sub><strong>0</strong></sub><strong>,A</strong><sub><strong>0</strong></sub><strong>,B</strong><sub><strong>0</strong></sub><strong>,C</strong><sub><strong>0</strong></sub>)</em> - beginning of path</p>

<p><em>(<strong>X<sub>1</sub>,Y<sub>1</sub>,Z<sub>1</sub>,A<sub>1</sub>,B<sub>1</sub>,C<sub>1</sub></strong>)</em> - end of path</p>

<p>3rd order parametric equation where<br />
        <em>p</em> = <em><strong>a</strong> t</em><strong><sup>3</sup></strong> 
        + <em><strong>b</strong></em> <em>t</em><strong><sup>2</sup></strong> + <em><strong>c</strong></em> <em>t</em> 
        + <em><strong>d</strong></em><br />
        <br />
        <em>p</em> is the position along the path as a function of time. When <em>p</em>=0 
        the (x,y,z,A) position will be at the beginning of the path. When <em>
        p</em>=1 the <em>(x,y,z,A) </em> position will be at the end of the path.</p>

        <p>This motion segment will be performed over a time period of <strong><em>t</em><sub>F</sub></strong>, 
        where <strong><em>t</em></strong> varies from <strong>0</strong> ... <strong><em>t</em><sub>F</sub></strong>. 
        Note that it is not necessary that <em>p</em> vary over the entire range 
        of 0 ... 1. This is often the case when there may be an 
        acceleration, constant velocity, and deceleration phase over the path. 
        ie: <em><strong>t</strong></em> might vary from 0.0-&gt;0.1 where p might vary from 
        0.3-&gt;0.7.</p>

<h3>Parameters</h3>
<p><strong><em>&lt;X<sub>0</sub>&gt; </em></strong> - X begin point</p>
<p><strong><em>&lt;Y<sub>0</sub>&gt; </em> </strong> - Y begin point</p>
<p><strong><em>&lt;Z<sub>0</sub>&gt; </em> </strong> - Z begin point</p>
<p><strong><em>&lt;A<sub>0</sub>&gt; </em> </strong> - A begin point</p>
<p><strong><em>&lt;B<sub>0</sub>&gt; </em> </strong> - B begin point</p>
<p><strong><em>&lt;C<sub>0</sub>&gt; </em> </strong> - C begin point</p>
<p><strong><em>&lt;X<sub>1</sub>&gt; </em></strong> - X end point</p>
<p><strong><em>&lt;Y<sub>1</sub>&gt; </em> </strong> - Y end point</p>
<p><strong><em>&lt;Z<sub>1</sub>&gt; </em> </strong> - Z end point</p>
<p><strong><em>&lt;A<sub>1</sub>&gt; </em> </strong> - A end point</p>
<p><strong><em>&lt;B<sub>1</sub>&gt; </em> </strong> - B end point</p>
<p><strong><em>&lt;C<sub>1</sub>&gt; </em> </strong> - C end point</p>
<p><strong><em>&lt;a&gt; </em></strong>-<em><strong> </strong></em>parametric equation <em>t</em><sup>3</sup> coefficient</p>
<p><strong><em>&lt;b&gt; </em> </strong>  -<em><strong></strong></em>parametric equation <em>t</em><sup>2</sup> coefficient</p>
<p><strong><em>&lt;c&gt;</em> </strong> -<em><strong></strong></em>parametric equation <em>t</em> coefficient</p>
<p><strong><em>&lt;d&gt; </em> </strong> -<em><strong></strong></em>parametric equation constant coefficient</p>
<p><strong><em>&lt;t</em><sub>F</sub><em>&gt;</em></strong> - time for segment</p>

<h3>Example</h3>
<p>Linear 0.0 0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0 1.0 0.0 0.0 1.0 0.0 1.0</p>
 
<hr />
<h2><a name="LinearEx">LinearEx<em></em></a><em>&lt;X<sub>0</sub>&gt; &lt;Y<sub>0</sub>&gt; &lt;Z<sub>0</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>
        
<h3>Description</h3>
        <p>Place linear (in 8 dimensions) interpolated move into the coordinated motion buffer. See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>. A path through space is defined where <em>x, y, z, a, b, c, u and v</em> are changing in a linear manner. A parametric equation is defined which describes which portion of the path as well as how as a function of time the path is to be traversed.</p>

        <p>Although the LinearEx command may be sent directly, the LinearEx command is normally 
        generated automatically to perform a planned trajectory by the 
        coordinated motion library or GCode.</p>

  <p><em>(<strong>X<sub>0</sub>,Y</strong><sub><strong>0</strong></sub><strong>,Z</strong><sub><strong>0</strong></sub><strong>,A</strong><sub><strong>0</strong></sub><strong>,B</strong><sub><strong>0</strong></sub><strong>,C</strong><strong><sub>0,</sub>U</strong><sub><strong>0</strong></sub><strong>,V</strong><sub><strong>0</strong></sub>)</em> 
        - beginning of path</p>
        
  <p><em>(<strong>X<sub>1</sub>,Y<sub>1</sub>,Z<sub>1</sub>,A<sub>1</sub>,B<sub>1</sub>,C<sub>1</sub>,U<sub>1</sub>,V<sub>1</sub></strong>)</em> - end of path</p>
 
        <p>3rd order parametric equation where<br />
        <em>p</em> = <em><strong>a</strong> t</em><strong><sup>3</sup></strong> 
        + <em><strong>b</strong></em> <em>t</em><strong><sup>2</sup></strong> + <em><strong>c</strong></em> <em>t</em> 
        + <em><strong>d</strong></em><br />
        <br />
        <em>p</em> is the position along the path as a function of time. When <em>p</em>=0 
        the (x,y,z,A) position will be at the beginning of the path. When <em>
  p</em>=1 the <em>(x,y,z,A) </em> position will be at the end of the path.</p>

        <p>This motion segment will be performed over a time period of <strong><em>t</em><sub>F</sub></strong>, 
        where <strong><em>t</em></strong> varies from <strong>0</strong> ... <strong><em>t</em><sub>F</sub></strong>. 
        Note that it is not necessary that <em>p</em> vary over the entire range 
        of 0 ... 1. This is often the case when there may be an 
        acceleration, constant velocity, and deceleration phase over the path. 
        ie: <em><strong>t</strong></em> might vary from 0.0-&gt;0.1 where p might vary from 
        0.3-&gt;0.7.</p>

<h3>Parameters</h3>
<p><strong>
        <em>&lt;X<sub>0</sub>&gt; </em></strong>- X begin point</p>
        <p><strong>
        
        <em>&lt;Y<sub>0</sub>&gt; </em> </strong>
        
        - Y begin point</p>
        <p><strong>
        
        <em>&lt;Z<sub>0</sub>&gt; </em> </strong>
        
        - Z begin point</p>
        <p><strong>
        
        <em>&lt;A<sub>0</sub>&gt; </em> </strong>
        
        - A begin point</p>
        <p><strong>
        
        <em>&lt;B<sub>0</sub>&gt; </em> </strong>
        
        - B begin point</p>
        <p><strong>
        
        <em>&lt;C<sub>0</sub>&gt; </em> </strong>
        
        - C begin point</p>
        <p><strong>
        
        <em>&lt;U<sub>0</sub>&gt; </em> </strong>
        
        - U begin point</p>
        <p><strong>
        
        <em>&lt;V<sub>0</sub>&gt; </em> </strong>
        
        - V begin point</p>
        <p>
        
        <strong>
        <em>&lt;X<sub>1</sub>&gt; </em></strong>- X end point</p>
        <p><strong>
        
        <em>&lt;Y<sub>1</sub>&gt; </em> </strong>
        
        - Y end point</p>
        <p><strong>
        
        <em>&lt;Z<sub>1</sub>&gt; </em> </strong>
        
        - Z end point</p>
        <p><strong>
        
        <em>&lt;A<sub>1</sub>&gt; </em> </strong>
        
        - A end point</p>
        <p><strong>
        
        <em>&lt;B<sub>1</sub>&gt; </em> </strong>
        
        - B end point</p>
        <p><strong>
        
        <em>&lt;C<sub>1</sub>&gt; </em> </strong>
        
        - C end point</p>
        <p><strong>
        
        <em>&lt;U<sub>1</sub>&gt; </em> </strong>
        
        - U end point</p>
        <p><strong>
        
        <em>&lt;V<sub>1</sub>&gt; </em> </strong>
        
        - V end point</p>
        <p>
        <strong>
        <em>&lt;a&gt; </em></strong>-<em><strong>
        </strong></em>parametric equation <em>t</em><sup>3</sup> coefficient</p>
        <p><strong>
        
        <em>&lt;b&gt; </em> </strong>
        -<em><strong>
        </strong></em>parametric equation <em>t</em><sup>2</sup> coefficient</p>
        <p><strong>
        
        <em>&lt;c&gt;</em> </strong>
        -<em><strong>
        </strong></em>parametric equation <em>t</em> coefficient</p>
        <p><strong>
        
        <em>&lt;d&gt; </em> </strong>
        -<em><strong>
        </strong></em>parametric equation constant coefficient</p>
        <p>
        <strong>
        <em>&lt;t</em><sub>F</sub><em>&gt;</em></strong> - time for segment</p>
        

<h3>Example</h3>
<p>LinearEx 0.0 0.0 0.0 0.0 0.00.0 0.00.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 0.0 0.0 1.0 0.0 1.0</p>

<hr />

		  
		  
<h2><a name="LinearP">LinearP<em></em></a><em>&lt;X<sub>0</sub>&gt; &lt;Y<sub>0</sub>&gt; &lt;Z<sub>0</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;ZP<sub>0</sub>&gt; &lt;AP<sub>0</sub>&gt; 
		&lt;BP<sub>0</sub>&gt; &lt;CP<sub>0</sub>&gt; &lt;UP<sub>0</sub>&gt; &lt;VP<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; 
        &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; &lt;BP<sub>1</sub>&gt; 
		&lt;CP<sub>1</sub>&gt; &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>
        
<h3>Description</h3>
        <p>Place linear (in 16 dimensions) interpolated move into the coordinated motion buffer. See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>. A path through space is defined where <em>x, y, z, a, b, c, u, v</em> and prime axes <em>xp, yp, zp, ap, bp, cp, up, vp</em> are changing in a linear manner. A parametric equation is defined which describes which portion of the path as well as how as a function of time the path is to be traversed.</p>

        <p>Although the LinearEx command may be sent directly, the LinearEx command is normally 
        generated automatically to perform a planned trajectory by the 
        coordinated motion library or GCode, however currently the GCode 
		Interpreter only supports 8 axes of simultaneous motion.</p>

  <p><em>(<strong>X<sub>0</sub>,Y</strong><sub><strong>0</strong></sub><strong>,Z</strong><sub><strong>0</strong></sub><strong>,A</strong><sub><strong>0</strong></sub><strong>,B</strong><sub><strong>0</strong></sub><strong>,C</strong><strong><sub>0,</sub>U</strong><sub><strong>0</strong></sub><strong>,V</strong><sub><strong>0</strong></sub><strong>,XP<sub>0</sub>,YP</strong><sub><strong>0</strong></sub><strong>,ZP</strong><sub><strong>0</strong></sub><strong>,AP</strong><sub><strong>0</strong></sub><strong>,BP</strong><sub><strong>0</strong></sub><strong>,CP</strong><strong><sub>0,</sub>UP</strong><sub><strong>0</strong></sub><strong>,VP</strong><sub><strong>0</strong></sub>)</em> 
        - beginning of path</p>
        
  <p><em>(<strong>X<sub>1</sub>,Y<sub>1</sub>,Z<sub>1</sub>,A<sub>1</sub>,B<sub>1</sub>,C<sub>1</sub>,U<sub>1</sub>,V<sub>1</sub>,XP<sub>1</sub>,YP<sub>1</sub>,ZP<sub>1</sub>,AP<sub>1</sub>,BP<sub>1</sub>,CP<sub>1</sub>,UP<sub>1</sub>,V<sub>P1</sub></strong>)</em> - end of path</p>
 
        <p>3rd order parametric equation where<br />
        <em>p</em> = <em><strong>a</strong> t</em><strong><sup>3</sup></strong> 
        + <em><strong>b</strong></em> <em>t</em><strong><sup>2</sup></strong> + <em><strong>c</strong></em> <em>t</em> 
        + <em><strong>d</strong></em><br />
        <br />
        <em>p</em> is the position along the path as a function of time. When <em>p</em>=0 
        the (x,y,z,A) position will be at the beginning of the path. When <em>
  p</em>=1 the <em>(x,y,z,A) </em> position will be at the end of the path.</p>

        <p>This motion segment will be performed over a time period of <strong><em>t</em><sub>F</sub></strong>, 
        where <strong><em>t</em></strong> varies from <strong>0</strong> ... <strong><em>t</em><sub>F</sub></strong>. 
        Note that it is not necessary that <em>p</em> vary over the entire range 
        of 0 ... 1. This is often the case when there may be an 
        acceleration, constant velocity, and deceleration phase over the path. 
        ie: <em><strong>t</strong></em> might vary from 0.0-&gt;0.1 where p might vary from 
        0.3-&gt;0.7.</p>

<h3>Parameters</h3>
<p><strong>
        <em>&lt;X<sub>0</sub>&gt; </em></strong>- X begin point</p>
        <p><strong>
        
        <em>&lt;Y<sub>0</sub>&gt; </em> </strong>
        
        - Y begin point</p>
        <p><strong>
        
        <em>&lt;Z<sub>0</sub>&gt; </em> </strong>
        
        - Z begin point</p>
        <p><strong>
        
        <em>&lt;A<sub>0</sub>&gt; </em> </strong>
        
        - A begin point</p>
        <p><strong>
        
        <em>&lt;B<sub>0</sub>&gt; </em> </strong>
        
        - B begin point</p>
        <p><strong>
        
        <em>&lt;C<sub>0</sub>&gt; </em> </strong>
        
        - C begin point</p>
        <p><strong>
        
        <em>&lt;U<sub>0</sub>&gt; </em> </strong>
        
        - U begin point</p>
        <p><strong>
        
        <em>&lt;V<sub>0</sub>&gt; </em> </strong>
        
        - V begin point</p>
        <p><strong>
        <em>&lt;XP<sub>0</sub>&gt; </em></strong>- XP begin point</p>
        <p><strong>
        
        <em>&lt;YP<sub>0</sub>&gt; </em> </strong>
        
        - YP begin point</p>
        <p><strong>
        
        <em>&lt;ZP<sub>0</sub>&gt; </em> </strong>
        
        - ZP begin point</p>
        <p><strong>
        
        <em>&lt;AP<sub>0</sub>&gt; </em> </strong>
        
        - AP begin point</p>
        <p><strong>
        
        <em>&lt;BP<sub>0</sub>&gt; </em> </strong>
        
        - BP begin point</p>
        <p><strong>
        
        <em>&lt;CP<sub>0</sub>&gt; </em> </strong>
        
        - CP begin point</p>
        <p><strong>
        
        <em>&lt;UP<sub>0</sub>&gt; </em> </strong>
        
        - UP begin point</p>
        <p><strong>
        
        <em>&lt;VP<sub>0</sub>&gt; </em> </strong>
        
        - VP begin point</p>
        
		<p><strong>
        <em>&lt;X<sub>1</sub>&gt; </em></strong>- X end point</p>
        <p><strong>
        
        <em>&lt;Y<sub>1</sub>&gt; </em> </strong>
        
        - Y end point</p>
        <p><strong>
        
        <em>&lt;Z<sub>1</sub>&gt; </em> </strong>
        
        - Z end point</p>
        <p><strong>
        
        <em>&lt;A<sub>1</sub>&gt; </em> </strong>
        
        - A end point</p>
        <p><strong>
        
        <em>&lt;B<sub>1</sub>&gt; </em> </strong>
        
        - B end point</p>
        <p><strong>
        
        <em>&lt;C<sub>1</sub>&gt; </em> </strong>
        
        - C end point</p>
        <p><strong>
        
        <em>&lt;U<sub>1</sub>&gt; </em> </strong>
        
        - U end point</p>
        <p><strong>
        
        <em>&lt;V<sub>1</sub>&gt; </em> </strong>
        
        - V end point</p>
		<p><strong>
        <em>&lt;XP<sub>1</sub>&gt; </em></strong>
		- XP end point</p>
        <p><strong>
        
        <em>&lt;YP<sub>1</sub>&gt; </em> </strong>
        
        - YP end point</p>
        <p><strong>
        
        <em>&lt;ZP<sub>1</sub>&gt; </em> </strong>
        
        - ZP end point</p>
        <p><strong>
        
        <em>&lt;AP<sub>1</sub>&gt; </em> </strong>
        
        - AP end point</p>
        <p><strong>
        
        <em>&lt;BP<sub>1</sub>&gt; </em> </strong>
        
        - BP end point</p>
        <p><strong>
        
        <em>&lt;CP<sub>1</sub>&gt; </em> </strong>
        
        - CP end point</p>
        <p><strong>
        
        <em>&lt;UP<sub>1</sub>&gt; </em> </strong>
        
        - UP end point</p>
        <p><strong>
        
        <em>&lt;VP<sub>1</sub>&gt; </em> </strong>
        
        - VP end point</p>
        <p>
        <strong>
        <em>&lt;a&gt; </em></strong>-<em><strong>
        </strong></em>parametric equation <em>t</em><sup>3</sup> coefficient</p>
        <p><strong>
        
        <em>&lt;b&gt; </em> </strong>
        -<em><strong>
        </strong></em>parametric equation <em>t</em><sup>2</sup> coefficient</p>
        <p><strong>
        
        <em>&lt;c&gt;</em> </strong>
        -<em><strong>
        </strong></em>parametric equation <em>t</em> coefficient</p>
        <p><strong>
        
        <em>&lt;d&gt; </em> </strong>
        -<em><strong>
        </strong></em>parametric equation constant coefficient</p>
        <p>
        <strong>
        <em>&lt;t</em><sub>F</sub><em>&gt;</em></strong> - time for segment</p>
        

<h3>Example -Move all 16 axes from 0 to 1 over 1 second</h3>
<p>LinearP 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 0.0 0.0 1.0 0.0 1.0</p>

<hr />
		  
		  
		  
		  
		  
		  
		<h2><a name="LinearHex"></a>LinearHex<em>&lt;X<sub>0</sub>&gt; &lt;Y<sub>0</sub>&gt; &lt;Z<sub>0</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
<p>Place linear (in 6 dimensions) interpolated move into the coordinated motion 
        buffer. This command is exactly the same as the
    <a href="#Linear">Linear</a> command above, except all 17 parameters are 
        specified as 32-bit hexadecimal values which are the binary images of 
        32-bit floating point values. When generated by a program this is 
        often faster, simpler, and more precise than decimal values. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>

<h3>Example -Move all 6 axes from 0 to 1 over 1 second</h3>
<p>LinearHex 0 0 0 0 0 0 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LinearHexEx">LinearHexEx</a><em>&lt;X<sub>0</sub>&gt; &lt;Y<sub>0</sub>&gt; &lt;Z<sub>0</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place linear (in 8 dimensions) interpolated move into the coordinated motion 
        buffer. This command is exactly the same as the
		<a href="#LinearEx">LinearEx</a> command above, except all 21 parameters are 
        specified as 32-bit hexadecimal values which are the binary images of 
        32-bit floating point values. When generated by a program this is 
        often faster, simpler, and more precise than decimal values. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>

<h3>Example -Move all 8 axes from 0 to 1 over 1 second</h3>
<p>LinearHexEx 0 0 0 0 0 0 0 0 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LinearHexP">LinearHexP</a><em>&lt;X<sub>0</sub>&gt; &lt;Y<sub>0</sub>&gt; &lt;Z<sub>0</sub>&gt; &lt;A<sub>0</sub>&gt; 
		&lt;B<sub>0</sub>&gt; &lt;C<sub>0</sub>&gt; &lt;U<sub>0</sub>&gt; &lt;V<sub>0</sub>&gt; &lt;XP<sub>0</sub>&gt; &lt;YP<sub>0</sub>&gt; &lt;ZP<sub>0</sub>&gt; &lt;AP<sub>0</sub>&gt; 
		&lt;BP<sub>0</sub>&gt; &lt;CP<sub>0</sub>&gt; &lt;UP<sub>0</sub>&gt; &lt;VP<sub>0</sub>&gt; &lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; 
        &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; &lt;BP<sub>1</sub>&gt; 
		&lt;CP<sub>1</sub>&gt; &lt;UP<sub>1</sub>&gt; &lt;VP<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place linear (in 16 dimensions) interpolated move into the coordinated motion 
        buffer. This command is exactly the same as the
		<a href="#LinearP">LinearP</a> command above, except all 37 parameters are 
        specified as 32-bit hexadecimal values which are the binary images of 
        32-bit floating point values. When generated by a program this is 
        often faster, simpler, and more precise than decimal values. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>

<h3>Example -Move all 16 axes from 0 to 1 over 1 second</h3>
<p>LinearHexP 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LHex1" id="LHex1">LHex1<em></em></a><em>&lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place 
		linear (in 6 dimensions) interpolated move into the coordinated motion 
		buffer. This command is exactly the same as the
		<a href="#LinearHex">LinearHex</a> command above, except the beginning 
		point is not specified and is assumed to be the endpoint of the previous
		<a href="#LinearHex">LinearHex</a> or <a href="#LinHex1">LinHex1</a> 
		command. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>
        
<h3>Example - Move from previous point to 1 on all 6 axes over 1 second</h3>
<p>LinHex1 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LHexEx1" id="LHexEx1">LHexEx1<em></em></a><em>&lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; 
	  &lt;V<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place 
		linear (in 8 dimensions) interpolated move into the coordinated motion 
		buffer. This command is exactly the same as the
		<a href="#LinearHexEx">LinearHexEx</a> command above, except the beginning 
		point is not specified and is assumed to be the endpoint of the previous
		<a href="#LinearHexEx">LinearHexEx</a> or <a href="#LHexEx1">LHexEx1</a> 
		command. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>
        
<h3>Example - Move from previous point to 1 on all 8 axes over 1 second</h3>
<p>LinHexEx1 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LHexP1" id="LHexP1">LHexP1<em></em></a><em>&lt;X<sub>1</sub>&gt; 
        &lt;Y<sub>1</sub>&gt; &lt;Z<sub>1</sub>&gt; &lt;A<sub>1</sub>&gt; &lt;B<sub>1</sub>&gt; 
		&lt;C<sub>1</sub>&gt; &lt;U<sub>1</sub>&gt; 
	  &lt;V<sub>1</sub>&gt; &lt;XP<sub>1</sub>&gt; 
        &lt;YP<sub>1</sub>&gt; &lt;ZP<sub>1</sub>&gt; &lt;AP<sub>1</sub>&gt; &lt;BP<sub>1</sub>&gt; 
		&lt;CP<sub>1</sub>&gt; &lt;UP<sub>1</sub>&gt; 
	  &lt;VP<sub>1</sub>&gt; &lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; 
        &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place 
		linear (in 16 dimensions) interpolated move into the coordinated motion 
		buffer. This command is exactly the same as the
		<a href="#LinearHexP">LinearHexP</a> command above, except the beginning 
		point is not specified and is assumed to be the endpoint of the previous
		<a href="#LinearHexP">LinearHexP</a> or <a href="#LHexP1">LHexP1</a> 
		command. 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>
        
<h3>Example - Move from previous point to 1 on all 16 axes over 1 second</h3>
<p>LinHexP1 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 3F800000 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LHex2" id="LHex2">LHex2<em></em></a><em>&lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place linear (in 6 or 8 dimensions) interpolated move into the coordinated motion 
        buffer. This command is exactly the same as the
		<a href="#LinearHex">LinearHex</a> or <a href="#LinearHexEx">LinearHexEx</a> command above, except 
		neither the beginning or ending point is specified and is assumed to be 
		the same as the most recent <a href="#LinearHex">LinearHex</a>,
		<a href="#LinearHexEx">LinearHexEx</a>, or<a href="#LHex1"> LHex1</a>. This command can be used when 
		there are more than one phases (ie Jerk, acceleration, constant 
		velocity, etc. that occur along a single linear segment). 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>   

<h3>Example - move from beginning to end over 1 second</h3>
<p>LinHex2 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LHexP2" id="LHexP2">LHexP2<em></em></a><em>&lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;t<sub>F</sub>&gt;</em></h2>

<h3>Description</h3>
        <p>Place linear (in 16 dimensions) interpolated move into the coordinated motion 
        buffer. This command is exactly the same as the
		<a href="#LinearHexP">LinearHexP</a> command above, except 
		neither the beginning or ending point is specified and is assumed to be 
		the same as the most recent <a href="#LinearHexP">LinearHexP</a> or<a href="#LHexP1"> LHexP1</a>. This command can be used when 
		there are more than one phases (ie Jerk, acceleration, constant 
		velocity, etc. that occur along a single linear segment). 
        See also <a href="CoordinatedMotion.htm">KMotion Coordinated Motion</a>.</p>
        
<h3>Parameters</h3>
<p>See above.</p>   

<h3>Example - move from beginning to end over 1 second</h3>
<p>LinHexP2 0 0 3F800000 0 3F800000</p>

<hr />
<h2><a name="LoadData"></a>LoadData<em>&lt;H&gt; &lt;N&gt;</em></h2>
<p><strong><em>&lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; ... </em></strong></p>

<h3>Description</h3>
        <p>Store data bytes into memory beginning at specified address for N bytes. The 
        data must follow with up to N_BYTES_PER_LINE (64) bytes per line. 
        This command is normally only used by the <a href="Glossary.htm#COFF">
        COFF</a> loader. Since this command spans several lines, it may 
        only be used programatically in conjunction with a
        <a href="KMotionDLLDriver/KMotionDLL.htm#KMotionLock">KMotionLock</a> or
        <a href="KMotionDLLDriver/KMotionDLL.htm#WaitToken">WaitToken</a> 
        command so that it is not interrupted. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;H&gt;</strong></em></p>
<p>32-bit hexadecimal address</p>

<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Number of bytes to follow and to be stored</p>
 
<p><strong>&lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; ... </strong></p>
<p>Bytes to store. 2 hexadecimal digits per byte, separated with a space.</p>
        
<h3>Example</h3>
<p>LoadData 80030000 4</p>
<p>FF FF FF FF</p>

<hr />
<h2><a name="LoadFlash"></a>LoadFlash<em>&lt;H&gt; &lt;N&gt;</em></h2>
<p><strong><em>&lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; ... </em></strong></p>

<h3>Description</h3>
        <p>Store data into FLASH image. 
        Only by <em><strong>KMotion</strong></em> for downloading a new firmware version. 
        Store data bytes into memory beginning at specified address for N bytes. 
        The data must follow with up to N_BYTES_PER_LINE (64) bytes per line. 
        This command is normally only used by the <a href="Glossary.htm#COFF">
        COFF</a> loader. Since this command spans several lines, it may 
        only be used programmatically in conjunction with a
        <a href="KMotionDLLDriver/KMotionDLL.htm#KMotionLock">KMotionLock</a> or
        <a href="KMotionDLLDriver/KMotionDLL.htm#WaitToken">WaitToken</a> 
        command so that it is not interrupted. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;H&gt;</strong></em></p>
<p>32-bit hexadecimal address</p>

<p><em><strong>&lt;N&gt;</strong> </em></p>
<p>Number of bytes to follow and to be stored</p>

<p><strong>&lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; &lt;B&gt; ... </strong></p>
<p>Bytes to store. 2 hexadecimal digits per byte, separated with a space.</p>
        
<h3>Example</h3>
<p>LoadFlash FF00 4</p>
<p>FF FF FF FF</p>

<hr />
<h2><a name="MasterAxis">MasterAxis</a><em>&lt;N&gt;=&lt;M&gt;</em> or MasterAxis<em>&lt;N&gt;</em></h2>

 <h3>Description</h3>
<p>
Sets or gets the axis &lt;M&gt; to which the current axis &lt;N&gt; is to 
be slaved. The current axis becomes a slave and will follow the motion of 
the specified Master Axis. More than one axis can be slaved to a single 
master axis if desired. When slaved, changes in the commanded destination 
of the master axis will be mirrored as changes in the slaved axis's destination 
however scaled by the <a href="#SlaveGain">SlaveGain</a> (as specified in the 
Slave Axis). The SlaveGain my be negative if opposing motion is desired.</p>

<p>Setting the Master Axis value to -1 disables the Slave mode.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0 ... 7.</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Master Axis or -1 to disable. Valid range -1 ... 7.</p>
        
<h3>Example (set axis 1 to follow axis 0)</h3>
<p>MasterAxis1=0<br />
 or<br />
 MasterAxis</p>

<hr />
<h2><a name="MaxErr"></a>MaxErr<em>&lt;N&gt;=&lt;M&gt;</em> or MaxErr<em>&lt;N&gt;</em></h2>
 
 <h3>Description</h3>
<p>Set or get <em>Maximum Error</em> for axis (Limits magnitude of error entering PID).</p>
<p>See <a href="ServoFlowDiagram.htm">Servo Flow Diagram</a> and <a href="StepScreen/StepScreen.htm#max_limits">Step Response Screen</a> for more information. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Maximum Error. Valid range - any positive value. 
Set to a <a href="Glossary.htm#Large_Value">large value</a> to disable.</p>
        
<h3>Example</h3>
<p>MaxErr0=100.0<br />
 or<br/>
MaxErr0</p>

       
<hr />
<h2><a name="MaxFollowingError"></a>MaxFollowingError<em>&lt;N&gt;=&lt;M&gt;</em> or MaxFollowingError<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set or get the maximum allowed <a href="Glossary.htm#Following_Error">following error</a> before <a href="#DisableAxis">disabling</a> the axis. </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Maximum Following Error. Valid range - any positive value. Set to a <a href="Glossary.htm#Large_Value">large value</a> to disable.</p>
        
<h3>Example</h3>
<p>MaxFollowingError0=100.0<br />
or<br />
MaxFollowingError0</p>

<hr />
<h2><a name="MaxI"></a>MaxI<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Set or get Maximum Integrator "wind up" for axis. Integrator saturates at the specified value.</p>
<p>See also  <a href="ServoFlowDiagram.htm">Servo Flow Diagram</a> and <a href="StepScreen/StepScreen.htm#max_limits">Step Response Screen</a> for further information.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Maximum Integrator value. Valid range - any positive 
value. Set to a <a href="Glossary.htm#Large_Value">large value</a> to 
disable.</p>
        
<h3>Example</h3>
<p>MaxI0=100.0</p>

<hr />
<h2><a name="MaxOutput"></a>MaxOutput<em>&lt;N&gt;=&lt;M&gt;</em> or MaxOutput<em>&lt;N&gt;</em></h2>
 
<h3>Description</h3>
<p>Set or get Maximum Output for an axis. Limits magnitude of servo output. Output saturates at the specified value.</p>
<p>See also <a href="ServoFlowDiagram.htm">Servo Flow Diagram</a> and <a href="StepScreen/StepScreen.htm#max_limits">Step Response Screen</a> for further information.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Maximum output value. Valid range - any positive value. 
Set to a <a href="Glossary.htm#Large_Value">large value</a> to disable.</p>
        
<h3>Example</h3>
<p>MaxOutput0=100.0</p>

<hr />
<h2><a name="Move"></a>Move<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Move axis to absolute position. Axis should be already enabled.

Uses <a href="#Vel">Vel</a>, <a href="#Accel">Accel</a> and <a href="#Jerk">Jerk</a> parameters for the axis to profile a motion from the current state to the specified position.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>new <em>position</em> in position units. Valid range - any.</p>
        
<h3>Example</h3>
<p>Move0=100.1</p>

<hr /> 
<h2><a name="MoveAtVel"></a>MoveAtVel<em>&lt;N&gt;=&lt;M&gt; &lt;V&gt;</em></h2>
<h3> Description</h3>
<p>Move axis to absolute position at the specified Velocity. Axis should be already enabled. Uses <a href="#Accel">Accel</a> and <a href="#Jerk">Jerk</a> parameters for the axis to profile a motion from the current state to the specified position.</p>

 <h3>Parameters</h3>
 <p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>new <em>position</em> in position units. Valid range - any.</p>
        
<p><em><strong>&lt;V&gt;</strong></em></p>
<p>Desired Velocity for the Motion. Valid range -  any.</p>
        
<p><em><strong>Example</strong></em></p>
<p>MoveAtVel0=100.1 30.0</p>
<hr />
<h2><a name="MoveAtVelAccel" id="MoveAtVelAccel"></a>MoveAtVel<em>Accel&lt;N&gt;=&lt;D&gt; &lt;V&gt;&lt;A&gt;</em></h2>
<h3> Description</h3>
<p>Move axis to absolute position at the specified Velocity.  Axis should be already enabled. Uses <a href="http://www.dynomotion.com/Help/Cmd.htm#Accel">Accel</a> and <a href="http://www.dynomotion.com/Help/Cmd.htm#Jerk">Jerk</a> parameters for the axis to profile  a motion from the current state to the specified position. </p>
<p><strong><em>Parameters</em></strong> </p>
<p><strong><em>&lt;N&gt;</em></strong> <br>
  Selected Axis for command. Valid range 0...7.</p>
<p> <strong><em>&lt;M&gt;</em></strong> <br>
  new <em>position</em> in position units. Valid range - any. </p>
<p><strong><em>&lt;V&gt;</em></strong> <br>
  Desired Velocity for the Motion. Valid range - any. </p>
<p><strong><em>Example</em></strong> <br>
  MoveAtVel0=100.1 30.0</p>
<hr />
<h2><a name="MoveExp"></a>MoveExp<em>&lt;N&gt;=&lt;D&gt; &lt;T&gt;</em></h2>

<h3>Description</h3>
        <p>Moves axis in an exponential manner toward the Destination using Time Constant T. 
        The velocity of motion will be proportional to the distance from the 
		Destination. The distance to the Destination will be reduced by 
		63% (1/e) every Time Constant, T. The Axis 
        should be already enabled. Honors the <a href="#Vel">Vel</a> and <a href="#Accel">Accel</a> axis 
		parameters.</p>
        <p></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;D&gt;</strong> </em></p>
<p>Destination in position units. Valid range - any.</p>
        
<p><em><strong>&lt;T&gt;</strong> </em></p>
<p>Time Constant Tau in seconde. Valid range - any positive number.</p>  

<h3>Example</h3>
<p>MoveExp0=1000 0.1 </p>


<hr />
<h2><a name="MoveRel"></a>MoveRel<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
        <p>Move axis relative to current destination. 
        Same as <a href="#Move">Move</a> command except specified motion is 
  relative to current destination.</p>

        <p>Axis should be already enabled. Uses <a href="#Vel">Vel</a>, <a href="#Accel">Accel</a> and <a href="#Jerk">Jerk</a> parameters for the axis 
        to profile a motion from the current state to the specified position.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Distance to move in position units. Valid range - any.</p>
        

<h3>Example</h3>
<p>MoveRel0=100.1</p>

<hr />
<h2><a name="MoveRelAtVel"></a>MoveRelAtVel<em>&lt;N&gt;=&lt;M&gt; &lt;V&gt;</em></h2>

<h3>Description</h3>
        <p>Move axis relative to current destination 
		at the specified Velocity. Same as <a href="#MoveAtVel">MoveAtVel</a> command except specified 
		motion is relative to current destination. Axis should be already enabled.  Uses <a href="#Accel">Accel</a> and <a href="#Jerk">Jerk</a> parameters for the axis to profile a motion from the current state to the specified position.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>New <em>position</em> in position units. Valid range - any.</p>
        
<p><em><strong>&lt;V&gt;</strong> </em></p>
<p>Desired Velocity for the Motion. Valid range - any.</p>
        
<h3>Example</h3>
<p>MoveRelAtVel0=100.1  30.0</p>

<hr />
<h2><a name="MoveRelAtVelAccel"></a>MoveRelAtVelAcc<em>&lt;N&gt;=&lt;D&gt;&lt;V&gt;&lt;A&gt;</em></h2>

<h3>Description</h3>
        <p>Move axis N relative to current destination D  
		at the specified Velocity and Acceleration.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p><em><strong>&lt;D&gt;</strong></em></p>
<p>Relative amount to move in counts or steps. Valid Range -  any.</p>

<p><em><strong>&lt;V&gt;</strong> </em></p>
<p>Desired Velocity for the Motion. Valid range - any.</p>
<p><em><strong>&lt;A&gt;</strong></em></p>
<p>Desired Acceleration for the Motion. Valid range - any.  In counts or steps/sec<sup>2</sup>.</p>
        
<h3>Example</h3>
<p>MoveRelAtVelAccel0=100.1  30.0 2000.0</p>
<hr />
<h2><a name="MoveRelAtVelAccelSoft" id="MoveRelAtVelAccelSoft"></a>MoveRelAtVelAccSoft<em>&lt;N&gt;=&lt;D&gt;&lt;V&gt;&lt;A&gt;</em></h2>
<h3>Description</h3>
<p>Move axis N  relative to current destination D at the specified Velocity and Acceleration.  Limit to Soft Limit range</p>
<p><strong><em>Parameters</em></strong></p>
<p><strong><em>&lt;N&gt;</em></strong><br>
  Selected  Axis for command.&nbsp; Valid range 0...7.</p>
<p><strong><em>&lt;D&gt;</em></strong><br>
  New <em>destination</em> in position units.&nbsp; Valid range - any.</p>
<p><strong><em>&lt;V&gt;</em></strong><br>
  Desired  Velocity for the Motion.&nbsp; Valid range - any.</p>
<p><strong><em>&lt;A&gt;</em></strong><br>
  Desired  Acceleration for the Motion.&nbsp; Valid range - any.</p>
<p><strong><em>Example</em></strong></p>
<p>MoveRelAtVelAccelSoft0=100.1  30.0 2000.0</p>
<hr />		  
		    
		  
<h2><a name="MoveXYZABC">MoveXYZABC</a><em>&lt;X&gt; &lt;Y&gt; &lt;Z&gt; 
		&lt;A&gt; &lt;B&gt; &lt;C&gt; </em></h2>

<h3>Description</h3>
<p>Move the 6 axes defined to be X, Y, Z, A, B, C (each axis moves independently). The <a href="CoordinatedMotion.htm">
        defined coordinate system</a> determines which axes channels are 
        commanded to move.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;X&gt;</strong></em></p>
<p>Position to move x axis. Valid range - any.</p>

<p><em><strong>&lt;Y&gt;</strong></em></p>
<p>Position to move y axis. Valid range - any.</p>

<p><em><strong>&lt;Z&gt;</strong></em></p>
<p>Position to move z axis. Valid range - any.</p>

<p><em><strong>&lt;A&gt;</strong></em></p>
<p>Position to move a axis. Valid range - any.</p>

<p><em><strong>&lt;B&gt;</strong></em></p>
<p>Position to move b axis. Valid range - any.</p>

<p><em><strong>&lt;C&gt;</strong></em></p>
<p>Position to move c axis. Valid range - any.</p>

<h3>Example</h3>
        
  <p>MoveXYZABC 100.1 200.2 300.3 400.4 500.5 600.6</p>

<hr />
<h2><a name="OpenBuf"></a>OpenBuf </h2>

<h3>Description</h3>
<p>Clear and open the buffer for <a href="CoordinatedMotion.htm">coordinated motion</a>.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>OpenBuf</p>

<hr />
<h2><a name="OutputChan0"></a>OutputChan<em>&lt;M&gt; &lt;N&gt;=&lt;C&gt;</em> or OutputChan<em>&lt;M&gt; &lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Get or Set the first or second <em>Output Channel</em> of an axis. For 
		Step/Dir and CL Step/Dir Output Mode Types the Pin Drive Mode is also 
		encoded in this value. For example adding 8 to the device channel 
		number will drive in TTL mode instead of Open Collector mode. See 
        description of this parameter on the
        <a href="ConfigurationScreen/ConfigurationScreen.htm#Input_Channels">
        Configuration Screen</a> and for Step/Dir and CL Step/Dir Output Mode 
		see <a href="StepAndDirection/StepAndDir.htm">here</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Selected input channel. Valid range 0...1.</p>


<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;C&gt;</strong> </em></p>
<p>Channel number to assign. Valid range depends on Output 
Mode Type. Max Range for all Types 0...63.</p>

<h3>Example (set first output channel of axis 3 to 3)</h3>
<p>OutputChan03=3</p>

<hr />
<h2><a name="OutputGain">OutputGain</a><em>&lt;N&gt;=&lt;G&gt;</em> or OutputGain<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Get or Set 
        the <em>Output Gain</em> of an axis. For Axes of Step/Dir, CL 
		Step Dir, or MicroStep output mode, the output motion can be scaled or 
		reversed. Normally there is no need to use a value other than -1.0 
		or +1.0. For DAC Servo output mode the output signal (DAC) can be 
		scaled or reversed. Again, normally there is no need to use 
		a value other than -1.0 or +1.0. In other output modes the 
		OutputGain value will have no effect.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;G&gt;</strong> </em></p>
<p>Gain value. Valid range any floating point value.</p>

<h3>Example</h3>
<p>OutputGain0=-1.0 or OutputGain0</p>

<hr />
<h2><a name="OutputOffset">OutputOffset</a><em>&lt;N&gt;=&lt;O&gt;</em> or OutputOffset<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Get or Set the <em>Output Offset </em>of an axis. For DAC Servo output mode the 
		output (DAC) signal can be offset. The Output Offset is 
		applied after any <a href="#OutputGain">Output Gain</a> value. The 
		Output Offset can be used to reduce any DAC output offset or Amplifier 
		input offset that may cause motor axis drift occurs when the DAC is 
		commanded to zero (disabled). In other output modes the OutputGain 
		value will have no effect.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;G&gt;</strong> </em></p>
<p>Gain value. Valid range any floating point value.</p>

<h3>Example</h3>
<p>OutputGain0=-1.0 or OutputGain0</p>

<hr />
<h2><a name="OutputMode"></a>OutputMode<em>&lt;N&gt;=&lt;M&gt;</em> or OutputMode<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Set or get the position output mode for an axis. See description of this 
        parameter on the <a href="ConfigurationScreen/ConfigurationScreen.htm#Axis_Modes">
        Configuration Screen.</a></p>
  <p>Valid modes are (from PC_DSP.h): </p>
        
	<pre>
	<code class="language-c">
		#define NO_OUTPUT_MODE 0
		#define MICROSTEP_MODE 1
		#define DC_SERVO_MODE 2
		#define BRUSHLESS_3PH_MODE 3
		#define BRUSHLESS_4PH_MODE 4
		#define DAC_SERVO_MODE 5
		#define STEP_DIR_MODE 6
		#define CL_STEP_DIR_MODE 7
		#define CL_MICROSTEP_MODE 8
	</code>
	</pre>
       
<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>
<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Mode. Valid range 1...4</p>

<h3>Example</h3>
<p>SetOutputMode0=1</p>
 
<hr />
<h2><a name="P"></a>P<em>&lt;N&gt;=&lt;M&gt;</em> or P<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set<a href="StepScreen/StepScreen.htm#PID">PID</a> Proportional Gain.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Proportional Gain value. The units of the derivative gain are in Output Units/Position Units.</p>
        
<h3>Example</h3>
<p>P0=10.0</p>

<hr />
<h2><a name="Pos"></a>Pos<em>&lt;N&gt;=&lt;P&gt;</em> or Pos<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Set or get the measured <a href="Glossary.htm#Position">position</a> of an axis. 
        Note setting the current position may effect the commutation of any 
        motors based on the position (an adjustment in the
        <a href="#CommutationOffset">commutation offset</a> may be required).</p>
 
<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;P&gt;</strong> </em></p>
<p>Value to be stored into the current position. units are position units. Valid range - any. </p>

<h3>Example</h3>
<p>Pos0=100.0</p>
 
<hr />
<h2><a name="ProgFlashImage"></a>ProgFlashImage</h2>

<h3>Description</h3>
<p>Program entire FLASH image, downloaded using <a href="#LoadFlash">LoadFlash</a> commands, to FLASH Memory.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>ProgFlashImage</p>

<hr />
<h2><a name="PWM"></a>PWM<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
        <p>Set PWM channel to <a href="Glossary.htm#locked_anti-phase_mode">locked anti-phase mode</a> and to specified value.</p>
        <p>See <a href="PWM_Description/PWM_Description.htm">PWM Description</a> and
        <a href="AnalogIOScreenKFLOP/AnalogIOScreen.htm#PWMs">Analog Status Screen</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM channel number. Valid range 0...7</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>PWM value. Valid range -255...255.</p>

<h3>Example</h3>
<p>PWM0=-99</p>

<hr />
<h2><a name="PWMC">PWMC</a><em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Set PWM channel to Current Mode and to specified value. PWM Channel will operate in closed loop current mode.</p>
 <p>See <a href="AnalogIOScreenKFLOP/AnalogIOScreen.htm#PWMs">Analog Status Screen</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM channel number. Valid range 0...7</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>PWM value. Valid range -1000...1000. 1 count = 35 Amps/1024 = 34.2ma</p>
        
<h3>Example</h3>
<p>PWM0=-99</p>

<hr />
<h2><a name="PWMR"></a>PWMR<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Set PWM channel to <a href="Glossary.htm#recirculate_mode">recirculate mode</a> and to specified value.</p>
<p>See <a href="PWM_Description/PWM_Description.htm">PWM Description</a> and <a href="AnalogIOScreenKFLOP/AnalogIOScreen.htm#PWMs">Analog Status Screen</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM channel number. Valid range 0...7</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>PWM value. Valid range -511...511.</p>
        
<h3>Example</h3>
<p>PWMR0=-99</p>

<hr />
<h2><a name="ReadBit"></a>ReadBit<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Displays whether an actual hardware I/O bit N or Virtual IO bit is high (1) or low (0) . A bit defined as an output (See <a href="#SetBitDirection">SetBitDirection</a>) may also be read back.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to read. Accepted range - 0...2047</p>

<h3>Example</h3>
<p>ReadBit0</p>

<hr />
		  
<h2><a name="ReadDiskData"></a>ReadDiskData<em>&lt;S&gt;&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Set  Disk Read Data in KFLOP/Kogna (as 8 bit Hex words)/into the ReadDisk Buffer.&nbsp; Used internally in conjunction with  fgets()/for decimal N words.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;S&gt;</strong></em></p>
<p>Status of ReadDisk Buffer. 1=line available, 2=error, 3=en of file.</p>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to read. Accepted range - 0...1024</p>

<h3>Example</h3>
<p>ReadDiskData  1 3 /41 42 43</p>

<hr />		  
<h2><a name="Reboot!"></a>Reboot!</h2>

<h3>Description</h3>
<p>Causes complete power up reset and re-boot from flash memory.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>Reboot!</p>

<hr />
		  
<h2><a name="RS232"></a>RS232 D9600 115200</h2>

<h3>Description</h3>
<p>Commands from RS232 Baud.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>RS232 57600</p>

<hr />
		  
<h2><a name="SetBit"></a>SetBit<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Sets an actual hardware I/O bit N or Virtual I/O bit to high (1) .</p>

<h3>Parameters</h3>
<p>Bit number to set. Accepted range 0...2047</p>

<h3>Example</h3>
<p>SetBit0</p>

<hr />
<h2><a name="SetBitBuf"></a>SetBitBuf<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Inserts into the coordinated move buffer a command to set an I/O bit (actual I/O bits must be defined as an output, see <a href="#SetBitDirection">SetBitDirection</a>).</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to set. Accepted range 0...2047</p>

<h3>Example</h3>
<p>SetBitBuf0</p>
 
<hr />
<h2><a name="SetBitDirection"></a>SetBitDirection<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
        <p>Defines the direction of an I/O bit to be an input or output. See also
        <a href="DigitalIOScreenKFLOP/DigitalIOScreen.htm">Digital I/O Screen</a>. Depending on the type of I/O, it may not be possible to change direction as some I/O bits are strictly inputs, and some are strictly outputs.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to assign. Accepted range 0...2047</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Direction 0 = input, 1 = output</p>

<h3>Example</h3>
<p>SetBitDirection0=1</p>

<hr />
<h2><a name="SetFRO">SetFRO</a><em>&lt;F&gt;</em></h2>

<h3>Description</h3>
<p>Sets Hardware FRO (Feed Rate Override) in KFLOP which is the rate that the 
Coordinated Motion Buffer is executed. A value of 1.0 = Normal Feed Rate = real 
time = an advance of 90us of time every 90us Servo Sample Period.</p>
		<p>A negative FRO value will cause the Coordinated Motion Buffer to execute 
		in reverse up until the beginning or until the point where Coordinated 
		Motion Buffer data has been lost due to buffer wrapping 
		(MAX_SEGMENTS is currently ~35,000 segments). When approaching the point where previous data was lost, the FRO will be automatically reduced to zero in order to avoid an 
		abrupt stop. This will not occur (and should not be necessary) 
		when approaching the actual beginning of the buffer because normal 
		acceleration from a stop should exist. In this case Time will stop abruptly when the beginning of the buffer is reached. </p>
		<p>In order to avoid an instantaneous change in velocity the FRO will be ramped from 
		the current rate to the specified rate. This command uses a 
		default ramp rate that has been determined based on the Max Allowed 
		Velocities, Accelerations, and Jerks of all the currently defined 
		Coordinate Motion System Axes Channels. In order to specify a 
		different rate the <a href="#SetFROwRate">SetFROwRate</a> command may be used.</p>
		<p>This command will not alter the rate of execution if the FeedHold mechanism 
		is currently in effect. See <a href="#StopImmediate">StopImmediate</a>. 
		However the specified speed will be saved so that if FeedHold is 
		eventually released, the rate will resume to this specified speed. 
		To change the FRO while in FeedHold use the <a href="#SetFROTemp">
		SetFROTemp</a> or <a href="#SetFROwRateTemp">SetFROwRateTemp</a> 
		commands instead. Those commands were intended to be used while in 
		Feed Hold and will not alter the rate that will be resumed after Feed Hold is released.</p>

<h3>Parameters</h3>
  <p><em><strong>&lt;F&gt;</strong></em></p>
<p>Desired FRO Value.  1.0 corresponds to normal Real Time, 0.0 corresponds to fully stopped, negative values 
drive time in reverse. Valid range -100...+100</p>

<h3>Example</h3>
<p>SetFRO 1.2</p>

<hr />
<h2><a name="SetFROTemp">SetFROTemp</a><em>&lt;F&gt;</em></h2>

<h3>Description</h3>

<p>Sets Hardware FRO (Feed Rate Override) in KFLOP which is the rate that the 
Coordinated Motion Buffer is executed. A value of 1.0 = Normal Feed Rate = real 
time = an advance of 90us of time every 90us Servo Sample Period. </p>

<p>This command is intended for temporary FRO changes while in Feed Hold.</p>
<p>See <a href="#SetFRO">SetFRO</a> for additional Information.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;F&gt;</strong></em></p>
<p>Desired FRO Value.  1.0 corresponds to normal Real Time, 0.0 corresponds to fully stopped, negative values 
drive time in reverse. Valid range -100...+100</p>

<h3>Example</h3>
<p>SetFROTemp -0.2</p>

<hr />
<h2><a name="SetFROwRate">SetFROwRate</a><em>&lt;F&gt; &lt;R&gt;</em></h2>

<h3>Description</h3>

<p>Sets Hardware FRO (Feed Rate Override) in KFLOP which is the rate that the 
Coordinated Motion Buffer is executed. A value of 1.0 = Normal Feed Rate = real 
time = an advance of 90us of time every 90us Servo Sample Period. This 
command functions the same as the command SetFRO with the exception that the 
rate at which the FRO will be ramped to the new FRO may be controlled. The 
ramp rate (rate-of-change-of-rate-of-time) to be used is determined from a user 
supplied Time Parameter. The Time to ramp from FRO=0. to FRO=1.0. 
See <a href="#SetFRO">SetFRO</a> for more information.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;F&gt;</strong></em></p>

<p>Desired FRO Value. 1.0 corresponds to normal Real Time, 0.0 corresponds to fully stopped, negative values 
		drive time in reverse. Valid range -100...+100</p>
<p><em><strong>&lt;R&gt;</strong></em></p>
<p>Time to ramp from FRO=0.0 to FRO=1.0 Valid range any positive number.</p>

<h3>Example</h3>
<p>SetFROwRate 1.2 0.5</p>

<hr />
<h2><a name="SetFROwRateTemp">SetFROwRateTemp</a><em>&lt;F&gt; &lt;R&gt;</em></h2>

<h3>Description</h3>
		<p>Sets Hardware FRO (Feed Rate Override) in KFLOP which is the rate that 
		the Coordinated Motion Buffer is executed. A value of 1.0 = Normal Feed 
		Rate = real time = an advance of 90us of time every 90us Servo Sample 
		Period. This command functions the same as the command SetFROTemp 
		with the exception that the rate at which the FRO will be ramped to the 
		new FRO may be controlled. The ramp rate 
		(rate-of-change-of-rate-of-time) to be used is determined from a user 
		supplied Time Parameter. The Time to ramp from FRO=0. to FRO=1.0.</p>
		<p>This command is intended for temporary FRO changes while in Feed Hold.</p>
		<p>See <a href="#SetFRO">SetFRO</a> for additional Information.</p>
	
<h3>Parameters</h3>
<p><em><strong>&lt;F&gt;</strong></em></p>
<p>Desired FRO Value.  1.0 corresponds to normal Real Time, 0.0 corresponds to fully stopped, negative values 
drive time in reverse. Valid range -100...+100</p>

<p><em><strong>&lt;R&gt;</strong></em></p>
<p>Time to ramp from FRO=0.0 to FRO=1.0 Valid range any positive number.</p>

<h3>Example</h3>
<p>SetFROwRateTemp -0.2 0.5</p>
 
<hr />
<h2><a name="SetGatherDec"></a>SetGatherDec<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
		<p>Writes a single word to the <a href="data_gathering.htm">Gather Buffer</a> at the specified offset. A single 32-bit value specified as a signed decimal integer number will be stored. </p>
        <p>The corresponding value may be accessed by a <em><strong>KMotion</strong></em> user program 
        using the pointer : <strong>gather_buffer</strong>. This pointer should be 
        cast as an integer pointer in order to reference values as integers and 
        to use the same index.</p>
         <p>See also <a href="#GetGatherDec">GetGatherDec</a>, <a href="#GetGatherHex">GetGatherHex</a>, 
        <a href="#SetGatherHex">SetGatherHex</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Offset into gather buffer, specified as a decimal offset of 32 bit words. Valid range 0...1999999 </p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Value to be stored. Valid range -2147483648...2147483647 </p>

<h3>Example</h3>
<p>SetGatherDec 1000 32767</p>

<hr />
<h2><a name="SetGatherHex"></a>SetGatherHex<em>&lt;N&gt; &lt;M&gt; &lt;H&gt; &lt;H&gt; &lt;H&gt; . . .</em></h2>

<h3>Description</h3>
        <p>Writes a <em>multiple</em> words to the 
        <a href="data_gathering.htm">Gather Buffer</a>
        beginning at the specified offset. 32-bit values specified as a unsigned 
        hexadecimal numbers must follow with 8 words per line separated with spaces. Since this command spans several lines, it may only be used programmatically in conjunction with a
        <a href="KMotionDLLDriver/KMotionDLL.htm#KMotionLock">KMotionLock</a> or
        <a href="KMotionDLLDriver/KMotionDLL.htm#WaitToken">WaitToken</a> 
        command so that it is not interrupted. </p>

        <p>The corresponding values may be accessed by a <em><strong>KMotion</strong></em> user program 
        using the pointer : <strong>gather_buffer</strong>. This pointer should be 
        cast as an integer pointer in order to reference values as integers and 
        to use the same index.</p>

        <p>See also <a href="#GetGatherDec">GetGatherDec</a>, <a href="#GetGatherHex">GetGatherHex</a>, 
        <a href="#SetGatherDec">SetGatherDec</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Offset into gather buffer, specified as a decimal offset of 32 bit words. Valid range 0...1999999 </p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Number of value to be stored, specified as a decimal number. Valid range 0...19999999</p>

<p><strong>&lt;H&gt; &lt;H&gt; &lt;H&gt; . . .</strong></p>
<p>Values to be stored. Specified as unsigned Hexadecimal values. Valid range 0...FFFFFFFF.</p>

<h3>Example</h3>
<p>SetGatherHex 0 3<br />
 FFFFFFFF FFFFFFFF FFFFFFFF</p>

<hr />
		  
<h2><a name="SetIpAddr"></a>SetIpAddr<em>&lt;D&gt; &lt;D&gt; &lt;D&gt; &lt;D&gt;</em> (Kogna only)</h2>

<h3>Description</h3>
        <p>Set  board's Ethernet IP Address.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;D&gt;</strong></em></p>
<p>Each  D is 0..255.
</p>
<h3>Example</h3>
<p>SetSerialNumber  192.168.10.9</p>

<hr />		
		  
<h2><a name="SetKognaPWMEne"></a>SetKognaPWMEne<em>&lt;N&gt;</em>=<em>&lt;N&gt;</em> (Kogna only)</h2>

<h3>Description</h3>
<p>Set Kogna PWM. Enable channels 0-7. 1=Enable 0=Disable. <br>
</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM  channel number. Valid range 0...7.
</p>
       
<h3>Example</h3>
<p>SetKognaPWMEn0=1</p>

<hr />			  
		 		  
<h2><a name="SetKognaPWMLength"></a>SetKognaPWMLength<em>&lt;N&gt;</em>=<em>&lt;N&gt;</em> (Kogna only)</h2>

<h3>Description</h3>
<p>Set Kogna PWM Pulse Length channels 0-7. 0-255 counts.
</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>PWM channel number. Valid range 0...7.
</p>
       
<h3>Example</h3>
<p>SetKognaPWMLength0=128</p>

<hr />			  		  
		  
<h2><a name="SetPersistDec"></a>SetPersistDec<em>&lt;O&gt; &lt;D&gt;</em></h2>

<h3>Description</h3>
        <p>Write a single word into the 
        Persistent <em>UserData</em> Array. Persistent UserData Array 
        is a general purpose array of 200 32-bit words that may be used as 
        commands, parameters, or flags between any host applications or <em><strong>
        KMotion</strong></em> user programs. The array resides in a <em>
        persistent</em> memory area, so that if a value is set as a parameter and 
        the User Programs are <em>flashed</em>, the value will persist 
        permanently.</p>

        <p>The corresponding value may be accessed by a <em><strong>KMotion</strong></em> user program as the 
        integer variable : persist.UserData[offset]<em><strong>.</strong></em></p>
        <p>See also <a href="#GetPersistDec">GetPersistDec</a>, <a href="#GetPersistHex">
        GetPersistHex</a>, <a href="#SetPersistHex">SetPersistHex</a></p>

<h3>Parameters</h3>
<p><em><strong>&lt;O&gt;</strong></em></p>
<p>Offset into the user data array specified as a decimal number. Valid Range 0 ... 199.</p>

<p><em><strong>&lt;D&gt;</strong> </em></p>
<p>Value to be written to the array. Specified a signed decimal number. Valid Range -2147483648 ... 2147483647 </p>
        
<h3>Example</h3>
<p>SetPersistDec 10 32767</p>

<hr />
<h2><a name="SetPersistHex"></a>SetPersistHex<em>&lt;O&gt; &lt;H&gt;</em></h2>

<h3>Description</h3>
        <p>Write a single word into the 
        Persistent <em>UserData</em> Array. Persistent UserData Array 
        is a general purpose array of 200 32-bit words that may be used as 
        commands, parameters, or flags between any host applications or <em><strong>
        KMotion</strong></em> user programs. The array resides in a <em>
        persistent</em> memory area, so that if a value is set as a parameter and 
        the User Programs are <em>flashed</em>, the value will persist 
        permanently.</p>

        <p>The corresponding value may be accessed by a KMotion user program as the 
        integer variable : persist.UserData[offset].</p>
        <p>See also <a href="#GetPersistDec">GetPersistDec</a>, <a href="#GetPersistHex">
        GetPersistHex</a>, <a href="#SetPersistDec">SetPersistDec</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;O&gt;</strong></em></p>
<p>Offset into the user data array specified as a decimal number. Valid range 0 ... 199.</p>

<p><em><strong>&lt;H&gt;</strong> </em></p>
<p>Value to be written to the array. Specified an unsigned hexadecimal number. Valid range 0...FFFFFFFF</p>
        
<h3>Example</h3>
<p>SetPersistHex 10 FFFFFFFF</p>

<hr />
<h2><a name="SetRapidFRO">SetRapidFRO</a><em>&lt;F&gt;</em></h2>

<h3>Description</h3>

<p>Sets Hardware RFRO (Rapid Feed Rate Override) in KFLOP which is the rate that the 
Coordinated Motion Buffer is executed. A value of 1.0 = Normal Feed Rate = real 
time = an advance of 90us of time every 90us Servo Sample Period. </p>

<p>Note: KFLOP Maintain separate Rate 
Overides for Rapid motion vs normal Feed Motion. Commands (<a href="#BegRapidBuf">BegRapidBuf</a> 
and <a href="#EndRapidBuf">EndRapidBuf</a>) inserted into the Coordinated Motion 
Buffer determine what type of motion is currently in progress and which Override 
is to be used.</p>
<p>A negative RFRO value will cause the Coordinated Motion Buffer to execute 
		in reverse up until the beginning or until the point where Coordinated 
		Motion Buffer data has been lost due to buffer wrapping 
		(MAX_SEGMENTS is currently ~35,000 segments). When approaching the point where previous data was 
		lost, the RFRO will be automatically reduced to zero in order to avoid an 
		abrupt stop. This will not occur (and should not be necessary) 
		when approaching the actual beginning of the buffer because normal 
		acceleration from a stop should exist. In this case Time will stop 
		abruptly when the beginning of the buffer is reached. </p>
		<p>In order to avoid an instantaneous change in velocity the RFRO will be ramped from 
		the current rate to the specified rate. This command uses a 
		default ramp rate that has been determined based on the Max Allowed 
		Velocities, Accelerations, and Jerks of all the currently defined 
		Coordinate Motion System Axes Channels. In order to specify a 
		different rate the <a href="#SetRapidFROwRate">SetRapidFROwRate</a> command may be 
		used.</p>
		<p>This command will not alter the rate of execution if the FeedHold mechanism 
		is currently in effect. See <a href="#StopImmediate">StopImmediate</a>. 
		However the specified speed will be saved so that if FeedHold is 
		eventually released, the rate will resume to this specified speed. 
		To change the FRO while in FeedHold use the <a href="#SetFROTemp">
		SetFROTemp</a> or <a href="#SetFROwRateTemp">SetFROwRateTemp</a> 
		commands instead. Those commands were intended to be used while in 
		Feed Hold and will not alter the rate that will be resumed after Feed 
		Hold is released.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;F&gt;</strong></em></p>
<p>Desired RFRO Value.  1.0 corresponds to normal Real Time, 0.0 corresponds to fully stopped, negative values 
drive time in reverse. Valid range -100...+100</p>

<h3>Example</h3>
<p>SetRapidFRO 1.2</p>
 
<hr />
<h2><a name="SetRapidFROwRate">SetRapidFROwRate</a><em>&lt;F&gt;</em></h2>

<h3>Description</h3>

<p>
Sets Hardware RFRO (Rapid Feed Rate Override) in KFLOP which is the rate that the 
Coordinated Motion Buffer is executed. A value of 1.0 = Normal Feed Rate = real 
time = an advance of 90us of time every 90us Servo Sample Period. This 
command functions the same as the command SetRapidFRO with the exception that the 
rate at which the RFRO will be ramped to the new RFRO may be controlled. The 
ramp rate (rate-of-change-of-rate-of-time) to be used is determined from a user 
supplied Time Parameter. The Time to ramp from FRO=0. to FRO=1.0. 
See <a href="#SetRapidFRO">SetRapidFRO</a> for more information.</p>
<p>Note: KFLOP Maintain separate Rate 
Overrides for Rapid motion vs normal Feed Motion. Commands (<a href="#BegRapidBuf">BegRapidBuf</a> 
and <a href="#EndRapidBuf">EndRapidBuf</a>) inserted into the Coordinated Motion 
Buffer determine what type of motion is currently in progress and which Override 
is to be used.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;F&gt;</strong></em></p>
<p>Desired RFRO Value.  1.0 corresponds to normal Real Time, 0.0 corresponds to fully stopped, negative values 
drive time in reverse. Valid range -100...+100</p>

<p><em><strong>&lt;R&gt;</strong></em></p>
<p>Time to ramp from RFRO=0.0 to RFRO=1.0 Valid range any positive number.</p>

<h3>Example</h3>
<p>SetRapidFROwRate 1.2 0.5</p>

<hr />
		  
<h2><a name="SetSerialNumber">SetSerialNumber</a><em>&lt;N&gt;</em> (Kogna only)</h2>

<h3>Description</h3>

<p>Set  board's Serial Number.<br>
</p>
<p><strong><em>Parameters</em></strong></p>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Decimal  number Valid Range 0...4095.</p>
<h3>Example</h3>
<p>SetSerialNumber  123</p>


<hr />
		  
		  
<h2><a name="SetStartupThread"></a>SetStartupThread<em>&lt;N&gt; &lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Defines whether a user thread is to be launched on power up.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected User Thread. Valid range 1...7</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Mode : 1=start on boot, 0=do not start on boot.</p>
        
<h3>Example</h3>
<p>SetStartupThread0 1</p>


<hr />
<h2><a name="SetStateBit"></a>SetStateBit<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Sets the state of an actual hardware I/O bit N or Virtual IO bit to either low (0) or high (1) . Actual I/O bits must be defined as an output, see <a href="#SetBitDirection">SetBitDirection</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to set. Accepted range 0...2047</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>State. Valid range 0...1</p>

<h3>Example</h3>
<p>SetStateBit0=1</p>

<hr />
<h2><a name="SetStateBitBuf"></a>SetStateBitBuf<em>&lt;N&gt;=&lt;M&gt;</em></h2>

<h3>Description</h3>
<p>Inserts into the <a href="CoordinatedMotion.htm">coordinated move buffer</a> a command to set the state of an I/O bit (actual IO bits must be defined as an output, see <a href="#SetBitDirection">SetBitDirection</a>).</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to set. Accepted range 0...2047</p>

<p><em><strong>&lt;M&gt;</strong></em></p>
<p>State. Valid range 0...1</p>

<h3>Example</h3>
<p>SetBitBuf0</p>
<p>SetStateBitBuf0=1</p>

<hr />
<h2><a name="SlaveGain">SlaveGain</a><em>&lt;N&gt;=&lt;S&gt;</em> or SlaveGain<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Sets or gets the Slave Gain for the axis. See also <a href="#MasterAxis">MasterAxis</a> for more information</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP)&nbsp;0..15 (Kogna).</p>

<p><em><strong>&lt;S&gt;</strong> </em></p>
<p>Slave Gain. Any floating point value positive or negative.</p>
        
<h3>Example</h3>
<p>SlaveGain0=-1.0<br />
or<br />
SlaveGain0</p>

<hr />
<h2><a name="SoftLimitNeg">SoftLimitNeg</a><em>&lt;N&gt;=&lt;M&gt;</em> or SoftLimitPos<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Command to set or display the Negative Software Limit of Travel. 
		Soft Limits will prevent motion in the same manner as a Hardware Limit 
		with the Stop Movement Action Selected. This occurs regardless of 
		the Action Type Selected for the Hardware Limit Switches. To 
		disable Soft Limits set them to a huge range which could never occur. 
		Soft Limits prevent motion within KFLOP when Jogging, moving and so 
		forth. They also are are uploaded by Applications such as 
		KMotionCNC and used to prevent motion during Trajectory Planning. 
		The Negative Soft Limit is used to prevent motion beyond a limit in the 
		negative direction. The Negative Soft Limit does not necessarily 
		need to be negative. See also <a href="#SoftLimitPos">SoftLimitPos</a>.</p>


<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Maximum Negative Limit. Valid range - any  value. Set to a <a href="Glossary.htm#Large_Value">large value</a> to 
disable.</p>
        
<h3>Example</h3>
<p>SoftLimitNeg0=-1000000.0<br />
 SoftLimitNeg0</p>

<hr />
<h2><a name="SoftLimitPos">SoftLimitPos</a><em>&lt;N&gt;=&lt;M&gt;</em> or SoftLimitPos<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Command to set or display the Positive Software Limit of Travel. 
		Soft Limits will prevent motion in the same manner as a Hardware Limit 
		with the Stop Movement Action Selected. This occurs regardless of 
		the Action Type Selected for the Hardware Limit Switches. To 
		disable Soft Limits set them to a huge range which could never occur. 
		Soft Limits prevent motion within KFLOP when Jogging, moving and so 
		forth. They also are are uploaded by Applications such as 
		KMotionCNC and used to prevent motion during Trajectory Planning. 
		The Positive Soft Limit is used to prevent motion beyond a limit in the 
		positive direction. The Positive Soft Limit does not necessarily need to 
		be positive. See also <a href="#SoftLimitNeg">SoftLimitNeg</a>.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>Maximum Positive Limit. Valid range - any  value. Set to a <a href="Glossary.htm#Large_Value">large value</a> to 
disable.</p>
        
<h3>Example</h3>
<p>SoftLimitPos0=1000000.0<br />or<br />
 SoftLimitPos0</p>
 
<hr />
		  
<h2><a name="SPISetMode">SPISetMode</a><em>&lt;N&gt;=&lt;M&gt;</em> (Kogna only)</h2>

<h3>Description</h3>
        <p>Set  SPI Pin Mode mux channels 0-5. 1=GPIO 0=HRPWM 2=I2C.<br>
        </p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Specifies the Pin.</p>
<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Specifies the Mode.</p>
<h3>Example</h3>
<p>SPISetMode0=1</p>
 
<hr />		  
		  
<h2><a name="StepperAmplitude"></a>StepperAmplitude<em>&lt;N&gt;=&lt;M&gt;</em> or StepperAmplitude<em>&lt;N&gt;</em></h2>
 
<h3>Description</h3>
<p>Set or get the nominal output magnitude used for axis if in MicroStepping <a href="#OutputMode">Output Mode</a> to
the specified value. This will be the output amplitude when stopped or moving slowly. If <a href="#Lead">Lead Compensation</a> is used, the amplitude while moving may be higher.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;M&gt;</strong> </em></p>
<p>PWM Stepper Amplitude. Valid range 0...255</p>
        
<h3>Example</h3>
<p>StepperAmplitude0=250</p>

<hr />
<h2><a name="StopImmediate">StopImmediate</a><em>&lt;M&gt;</em></h2>

<h3>Description</h3>
        <p>Controls the Feedhold Mechanism for the set of coordinated motion Axes. 
		This command can be used to feedhold (bring to an immediate stop) the 
		set of axes, Resume from a feedhold, or clear the feedhold state. 
		This command can stop the set of axes regardless of whether the current 
		motion in progress is due to coordinated motion (Interpolated Linear or 
		Arc) or independent axes motions (Rapids). The current state can 
		be obtained using the <a href="#GetStopState">GetStopState</a> command.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;M&gt;</strong></em></p>
<p>Mode</p>

<p>0 - Stops the axes motion (equivalent to User C Program function StopCoordinatedMotion)</p>
<p>1 - Resumes the axes motion (equivalent to User C Program function ResumeCoordinatedMotion)</p>
<p>2 - Clears the Feed hold state (equivalent to User C Program function ClearStopImmediately)</p>

<h3>Example</h3>
<p>StopImmediate0</p>

<hr />
<h2><a name="TrigThread">TrigThread</a><em>&lt;S&gt;</em></h2>

<h3>Description</h3>
        <p>Triggers a 
		coordinated motion threading operation. The coordinated motion 
		path in the coordinated motion buffer begins execution synchronized with 
		the Spindle motion. The Speed specified will be used as the 
		baseline speed such that if the actual spindle speed is equal to the 
		base speed, then Pseudo Time will progress the same as real time. 
		Otherwise Pseudo time will be adjusted to match the spindle motion</p>

		<p>See also: <a href="#ConfigSpindle">ConfigSpindle</a> and <a href="#GetSpindleRPS">
		GetSpindleRPS</a></p>
		
<h3>Parameters</h3>
<p><em><strong>&lt;S&gt;</strong></em></p>
<p>Base Spindle Speed in revs per second. Range: Any floating point value.</p>

<h3>Example</h3>
<p>TrigThread 10.0</p>

<hr />
		  
<h2><a name="USB">USB</a> (Kogna only)</h2>

<h3>Description</h3>
        <p>Commands  from USB Mode.<br>
        </p>
		
<h3>Parameters</h3>
<p>None.</p>

<h3>Example</h3>
<p>USB</p>

<hr />		  
		  
<h2><a name="Vel"></a>Vel<em>&lt;N&gt;=&lt;V&gt;</em> or Vel<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Get or Set the max velocity for independent moves.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<p><em><strong>&lt;V&gt;</strong> </em></p>
<p>The max velocity. Units are in <em>Position units</em> per sec</p>
        
<h3>Example</h3>
<p>Vel0=100.0</p>

<hr />
<h2><a name="Version"></a>Version </h2>

<h3>Description</h3>
<p>Display DSP Firmware Version and Build date in the form:</p>
<p>KMotion 2.22 Build 22:26:57 Feb 16 2005 </p>
<p>Note it is  important that when C Programs are compiled and linked, they are linked 
        to a firmware file, DSP_KMotion.out, that matches the firmware in the 
        KMotion where they will execute.</p>

<h3>Parameters</h3>
<p>None</p>

<h3>Example</h3>
<p>Version</p>

<hr />
<h2><a name="WaitBitBuf">WaitBitBuf</a><em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Inserts into the coordinated move buffer a command to wait for an IO bitto be at a high level. This command is useful for synchronizing motion to external events without any PC delays.</p>

<p>This command can be inserted into the Coordinated motion buffer from KMotionCNC GCode using the special comment command format of:</p>

<p>(BUF,WaitBitBuf46)</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to wait to be high. Accepted range 0...2047</p>

<h3>Example</h3>
<p>WaitBitBuf46</p>

<hr />
<h2><a name="WaitNotBitBuf">WaitNotBitBuf</a><em>&lt;N&gt;</em></h2>

<h3>Description</h3>
<p>Inserts into the coordinated move buffer a command to wait for an IO bitto be at a low level. This command is useful for synchronizing motion to external events without any PC delays.</p>

<p>This command can be inserted into the Coordinated motion buffer from KMotionCNC GCode using the special comment command format of:</p>

<p>(BUF,WaitNotBitBuf46)</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Bit number to wait to be low. Accepted range 0...2047</p>

<h3>Example</h3>
<p>WaitNotBitBuf46</p>

<hr />
<h2><a name="Zero"></a>Zero<em>&lt;N&gt;</em></h2>

<h3>Description</h3>
        <p>Clear the measured position of axis. 
        Note for an axis that uses the <em><a href="Glossary.htm#Position">
        Position</a></em> to perform brushless motor commutation, the
        <a href="#CommutationOffset">commutation offset</a> may be required to 
        be adjusted whenever the position measurement is changed.</p>

<h3>Parameters</h3>
<p><em><strong>&lt;N&gt;</strong></em></p>
<p>Selected Axis for command. Valid range 0...7 (KFLOP) 0..15 (Kogna).</p>

<h3>Example</h3>
<p>Zero0</p>

    <p>&nbsp;</p>
    	</div>
       </div>

</body>

</html>