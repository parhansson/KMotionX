<!DOCTYPE html>
<html>
<head>

<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="0"/>

<meta name="keywords" content="ethernet 16-axis controller, cnc control, motion control, cnc boards, 4-axis, 8-axis, stepper, brushless, DC motor, servo, encoder, adc, dac, motion controller, automated motion, manufacturing, Mach3">
<meta name="description" content="Manufacturer of premium motion control products for CNC Manufacturing, Robotics and Automation">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">

<title>Closed Loop Stepper Screen</title>

<link rel="stylesheet" type="text/css" href="../css/style.css">
<link rel="stylesheet" href="../css/prism.css" data-noprefix />
<script src="../js/prism.js"></script>
</head>

<body>

<div id="logo"><a href="../index.htm"></a></div>

<div id="home">
<a href="../index.htm">Table of contents</a> |  
	<script>
		if (navigator.userAgent.indexOf("NT 6.2") == -1){
			document.write('<a href="https://www.dynomotion.com">Dynomotion home page</a>')
		} else {
			document.write('<a href="https://www.dynomotion.com" target="_blank">Dynomotion home page</a>')
		}
	</script>
</div>
	
<div id="searchNav">

	<div class="gcse-search">
					<script>
					  if (document.location.protocol  ==  'https:') {
					  (function() {
					  var cx = '012657033059195044748:9fmjmlufts0';
					  var gcse = document.createElement('script');
					  gcse.type = 'text/javascript';
					  gcse.async = true;
					  gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
					      '//cse.google.com/cse.js?cx=' + cx;
					  var s = document.getElementsByTagName('script')[0];
					  s.parentNode.insertBefore(gcse, s);
					})();
					  }
				      </script> 
				      <gcse:search> </gcse:search>  

	       </div>
</div>	

	


<div id="google_translate_element" style="background: transparent;" align="right"><script type="text/javascript">
if (navigator.userAgent.indexOf("NT 6.2") == -1) {
		function googleTranslateElementInit() {
	  new google.translate.TranslateElement({pageLanguage: 'en', includedLanguages: 'en,de,fr,it,es,pt,ru,uk,ar,zh-CN,zh-TW,ko,iw,hi,ja,tr', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
		}						}
	</script>
	<script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit">
	</script>
</div>		
<div id="main">	

<h1>Configuring Closed Loop Step and Direction Outputs</h1>

<p>The Closed Loop Stepper 
Mode works much the same as open loop Step and Direction Output Mode except 
there is also an error feedback correction term. In fact, if the gains of 
the correction term (PIDs) are set to zero then the mode will behave the same as an 
open loop Step Direction Mode. This mode is much easier to “tune” than a stepper driven as a brushless motor and unlike a brushless motor there are no commutation issues. A good application for this mode is a stepper with linear 
glass scales. The main feature is the position feed forward with fixed gain of 1.0. See 
the flow diagram below. Without any correction it behaves just like a stepper.  As correction gains are added, corrections for drift, friction, load forces, or even a miss step are made. One disadvantage is that the motor can still stall. After the stall and after the motion stops the servo loop could then gradually correct the position which 
could be of value in some applications.</p>

<p><img src="CLStepFlowDiag.PNG" width="1069" height="434" alt="Flow Diagram" /></p>

<p>To Configure an axis a a Closed Loop Servo select &quot;CL Step&quot; 
as the output mode for the axis as shown below. Any input mode may be used 
as position feedback, but the most common is a quadrature encoder either on the 
motor shaft or as a linear glass scale.  </p>

<p>Note that an Input gain of 1.25 is used in this example. 
This was calculated from the ratio of the number of &#956;Steps/rev 
to the number of encoder counts/rev. (A micro stepper amplifier set to 50 
microsteps/full setp and a standard stepper motor with 200 full steps/rev will 
have 10,000 &#956;Steps/rev, a rotary encoder with 2000 
lines/rev will profuce 8000 quadrature counts/rev, 10000/8000 = 1.25). The 
raw axis units will be in &#956;Steps.</p>

<p>Max Following Error may be used to trip an axis disable 
when exceeded.</p>

<p><img src="CLConfiguration.PNG" width="507" height="515" alt="Max Following Error" /></p>

<p>Important PID parameters are shown below circled in red. 
The I (Integrator) gain of 0.01 is probably the most important. Your 
system may require more or less. Too much and the system may over shoot or 
become unstable (oscillate). Too little and corrections will be made 
slowly. Because we are measure the position and also commanding a position 
Integrator control works well. An integrator will ramp the output at a 
rate proportional to the amount of the error. This &quot;slowing as we get 
closer&quot; will result in an exponential curve approaching the target. 
Backlash, friction, delays, and other factors will eventually cause the system 
to overshoot and become unstable with too much gain.</p>

<p>Max limits may also be useful for limiting the correction. 
In this example the limits are set to large values. Limiting the max error 
to a small value will limit the maximum slew rate of the Integrator. Max 
Output and Max Integrator are similar for an Integrator only compensator and 
will limit the maximum amount of correction that can be made.</p>

<p><img src="CLStepWithCorrectionPosCmd.PNG" width="897" height="580" alt="Max Output and Integrator" /></p>

<p>A 2nd order Low Pass Filter is also used in this example to 
make the system more stable by reducing high frequency corrections. Note a 
cutoff frequency of 100Hz with Q 1.4 is used. After specifying the filter 
the Compute Button must be pressed to compute the Z domain IIR Coeffiecients 
that are downloaded and used by KFlop.</p>

<p><img src="CLLowPassFilter.PNG" width="760" height="491" alt="Pass Filter" /></p>

<p>Test Mechanism with Size 34 Stepper with encoder connected to a Dummy Load.</p>

<p><img src="Size34.JPG" width="600" height="257" alt="Test Move" /></p>

<p>Test Move of a Size34 Stepper with 50 usteps/full step forward and backward at 4000sps</p>

<p>With PID gain zero (no correction). Note encoder shows errors of ~100uSteps</p>

<p><img src="CLStepNoCorrection.PNG" width="897" height="580" alt="No Correction" /></p>

<p>Integrator gain now set at 0.01. Also 2<sup>nd</sup> Order 100Hz Low Pass Filter Q=1.4 used</p>

<p>Note error is reduced. Blue plot is position error, green is the Output (correction offset)</p>

<p><img src="CLStepWithCorrection.PNG" width="897" height="580" alt="With Correction" /></p>

<p>A Bode Plot of the Compensator PID + LP Filter response. I=0.010 and 2nd order Low Pass 100Hz @ Q=1.4. Red plot is Magnitude. </p>

<p>Note that errors less than about 20 Hz will be corrected. Correction gain drops below 1 (0db) at higher frequencies.</p>

<p><img src="CLStepComp.PNG" width="857" height="552" alt="Compensator Magnitude" /></p>


	</div>
</body>

</html>
