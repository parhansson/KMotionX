<catel:Window x:Class="ExtendedLoggingKflop.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:sys="clr-namespace:System;assembly=mscorlib"
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
              xmlns:catel="http://catel.codeplex.com"
              xmlns:viewModels="clr-namespace:ExtendedLoggingKflop.ViewModels"
              xmlns:views="clr-namespace:ExtendedLoggingKflop.Views"
              xmlns:orc="http://www.wildgums.net.au/orc"
              xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
              xmlns:myConverters="clr-namespace:ExtendedLoggingKflop.Converters"
              xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
              ResizeMode="CanResize" Title="{Binding SaveConfigPath, StringFormat='Kflop Extended Logging (Experimental): {0}'}" Icon="/ExtendedLoggingKflop;component/Resources/monitor.png" Activated="Window_Activated">

    <DockPanel>
        <DockPanel.Resources>
            <sys:Double x:Key="ToolBarIconWidth">24</sys:Double>
            <myConverters:HighlightingDefinitionConverter x:Key="HighlightingDefinitionConverter"></myConverters:HighlightingDefinitionConverter>
            <myConverters:NullToBoolValueConverter x:Key="NullToBoolValueConverter"/>
            <sys:Boolean x:Key="TrueValue">True</sys:Boolean>
            <sys:Boolean x:Key="FalseValue">False</sys:Boolean>
        </DockPanel.Resources>
        <ToolBarTray DockPanel.Dock="Top"  >
            <ToolBarTray.Resources>
                <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property = "Background" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property = "Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="FlowDirection" Value="RightToLeft" />
                    <Setter Property="Margin" Value="5,0,5,0"></Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentControl FlowDirection="LeftToRight" Content="{Binding}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ToolBarTray.Resources>
            
            <ToolBar x:Name="CommonTools">
                <Button Command="{Binding OpenConfigCommand}" ToolTip="Open configuration..." >
                    <Image Width="{StaticResource ToolBarIconWidth}" Source="../Resources/open-folder.png" />
                </Button>
                <Button Command="{Binding SaveConfigCommand}" ToolTip="Save current configuration..." >
                    <Image Width="{StaticResource ToolBarIconWidth}" Source="../Resources/save-file-button.png" />
                </Button>

                <Button Command="{Binding NewPlotCommand}" ToolTip="New Plot" >
                    <Image Width="{StaticResource ToolBarIconWidth}" Source="../Resources/graph.png" />
                </Button>
                <ToggleButton ToolTip="Sync Plot on X Axis" IsChecked="{Binding SyncPlotsOnX}">
                    <Image Width="{StaticResource ToolBarIconWidth}" Source="../Resources/syncx.png" />
                </ToggleButton>
                <ToggleButton ToolTip="Sync Plot Y Axis" IsChecked="{Binding SyncPlotsOnY}">
                    <Image Width="{StaticResource ToolBarIconWidth}" Source="../Resources/syncy.png" />
                </ToggleButton>
            </ToolBar>
            <ToolBar x:Name="BoardTools">
                <StackPanel Orientation="Horizontal">
                    <RadioButton Content="Status:" IsChecked="{Binding Connected, Mode=OneWay}" IsHitTestVisible="False"  VerticalAlignment="Center" />
                </StackPanel>
            </ToolBar>
            <ToolBar>
                <!--<ToggleButton Command="{Binding StopStartCommand}" CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}, Mode=OneWay}">-->
                <ToggleButton IsChecked="{Binding StartLogging, Mode=TwoWay}" IsHitTestVisible="{Binding Connected}">
                        <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="Pause All Logging" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="Start All Logging" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </ToolBar>
            
            <ToolBar x:Name="ThreadTools">
                <Label Content="Threads:"></Label>
                <StackPanel Orientation="Horizontal" IsHitTestVisible="False">

                    <RadioButton Content="1" GroupName="1" IsChecked="{Binding Thread1Executing, Mode=OneWay}"  VerticalAlignment="Center" />
                    <RadioButton Content="2" GroupName="2" IsChecked="{Binding Thread2Executing, Mode=OneWay}" VerticalAlignment="Center"></RadioButton>
                    <RadioButton Content="3" GroupName="3" IsChecked="{Binding Thread3Executing, Mode=OneWay}" VerticalAlignment="Center"></RadioButton>
                    <RadioButton Content="4" GroupName="4" IsChecked="{Binding Thread4Executing, Mode=OneWay}" VerticalAlignment="Center"></RadioButton>
                    <RadioButton Content="5" GroupName="5" IsChecked="{Binding Thread5Executing, Mode=OneWay}" VerticalAlignment="Center"></RadioButton>
                    <RadioButton Content="6" GroupName="6" IsChecked="{Binding Thread6Executing, Mode=OneWay}" VerticalAlignment="Center"></RadioButton>
                    <RadioButton Content="7" GroupName="7" IsChecked="{Binding Thread7Executing, Mode=OneWay}" VerticalAlignment="Center"></RadioButton>
                </StackPanel>
                <Button Command="{Binding HaultAllCommand}" Content="Halt All!" Background="Red">

                </Button>
            </ToolBar>
            <ToolBar HorizontalAlignment="Right" >
                <Button Command="{Binding AboutCommand}" ToolTip="About..." >
                    <Image Width="{StaticResource ToolBarIconWidth}" Source="../Resources/information.png" />
                </Button>
            </ToolBar>

        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom" BorderThickness="1">
            <StatusBarItem HorizontalAlignment="Right" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock><Run Text="Message Count:"/></TextBlock>
                    <TextBlock x:Name="MessageCount" Text="{Binding MessageCount}"/>
                    <Grid Width="4"/>
                </StackPanel>
            </StatusBarItem>
            <Separator DockPanel.Dock="Right"/>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    
                    
                    <TextBlock><Run Text="Max Data Rate:"/></TextBlock>
                    <TextBlock x:Name="textBlockMDR" Text="{Binding Path=MaxDataRate,StringFormat =' {0} kBytes/sec'}"/>
                    <Grid Width="4"/>

                    <TextBlock><Run Text="Data Rate:"/></TextBlock>
                    <TextBlock x:Name="textBlockDR" Text="{Binding Path=DataRate,StringFormat =' {0} kBytes/sec'}"/>
                    <Grid Width="4"/>

                    <TextBlock><Run Text="Byte Count:"/></TextBlock>
                    <TextBlock x:Name="textBlockBC" Text="{Binding Path=MessageByteCount}"/>
                    <Grid Width="4"/>

                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Grid Name="gridBase">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0"  Name="ThreadEditGrid" Orientation="Vertical">
                <Label Content="C Programs:"/>
                <ListView x:Name="_cprogramsLB"  MinHeight="120" MinWidth="240" SelectedItem="{Binding SelectedCProgram}" ItemsSource="{Binding ThreadCPrograms, Mode=TwoWay}"
                           Margin="5">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <UniformGrid Columns="1">
                                        <TextBlock Text="{Binding FilePath }" />
                                    </UniformGrid>
                                </Setter.Value>
                            </Setter>


                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="File" Width="125" DisplayMemberBinding="{Binding FileName}" />
                            <GridViewColumn Header="Thread" Width="Auto">
                                <GridViewColumn.CellTemplate>

                                    <DataTemplate>
                                        <Grid x:Name="ThreadIdGrid" Tag="{Binding ElementName=_cprogramsLB, Path=DataContext}">
                                            <ContextMenuService.ContextMenu>
                                                <ContextMenu x:Name="_FreeThreadMenu" 
                                                                 DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.Tag, Mode=OneWay}"
                                                                 ItemsSource="{Binding Path=FreeThreads, Mode=OneWay}">
                                                    <ContextMenu.ItemContainerStyle>
                                                        <Style TargetType="MenuItem">
                                                            <Setter Property="Header" Value="{Binding TargetNullValue={x:Static sys:String.Empty}}"/>
                                                            <Setter Property="Command" Value="{Binding DataContext.SetThreadIDCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                            <Setter Property="CommandParameter" Value="{Binding}"/>
                                                        </Style>
                                                    </ContextMenu.ItemContainerStyle>
                                                </ContextMenu>
                                            </ContextMenuService.ContextMenu>
                                            <TextBlock Text="{Binding ThreadID, TargetNullValue={x:Static sys:String.Empty}}" ToolTip="Right click to change."
                                                           
                                                           MinWidth="50">

                                            </TextBlock>
                                        </Grid>

                                        <!--<TextBox Text="{Binding ThreadID, TargetNullValue={x:Static sys:String.Empty}}" ToolTip="This should be a value of 1 to 7." MinWidth="50">
                                                <i:Interaction.Behaviors>
                                                    <catel:NumericTextBox   />
                                                </i:Interaction.Behaviors>
                                            </TextBox>-->
                                        <!--<ComboBox SelectedValue="{Binding ThreadID}" ItemsSource="{Binding DataContext.FreeThreads,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type catel:Window}}}" >
                                                -->
                                        <!--<ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Path=ThreadID, TargetNullValue={x:Static sys:String.Empty}}" ></TextBlock>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>-->
                                        <!--
                                            </ComboBox>-->
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>

                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <!--<ListView.ItemTemplate>
                        <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding FileName}" />
                                    
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>-->

                </ListView>
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding AddCFile}" Name="_addCProgramB" Content="Add" ToolTip="Open C Program" Margin="10,10,0,0"></Button>
                    <Button Command="{Binding RemoveCFile}" Name="_renmoveCProgramB" Content="Remove" ToolTip="Remove C Program" Margin="10,10,0,0"></Button>
                    <Button Command="{Binding SaveCFile}" Name="_saveAndCompileB" Content="Save" ToolTip="Save And Compile" Margin="10,10,0,0"></Button>
                    <Button Command="{Binding Download}" Name="_downLoadCProgramB" Content="Download" ToolTip="Download to KFlop" Margin="10,10,0,0"></Button>
                    <Button Command="{Binding Execute}" Name="_StartThreadB" Content="Start Thread" ToolTip="Execute C Program in KFlop thread" Margin="10,10,0,0"></Button>
                    <Button Command="{Binding Halt}" Name="_HaltThreadB" Content="Kill Thread" ToolTip="Halt C Program in KFlop thread" Margin="10,10,0,0"></Button>
                </StackPanel>
            </StackPanel>

            <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" />

            <Border  Grid.Row="2" BorderBrush="Black" BorderThickness="1" Margin="5">
                <avalonEdit:TextEditor 
                        MinHeight="200"
				Name="textEditor"
				FontFamily="Consolas"
				FontSize="10pt"
                ShowLineNumbers="True"
				SyntaxHighlighting="{Binding SelectedCProgram.Extension, Converter={StaticResource HighlightingDefinitionConverter}}"
                    
                Document="{Binding SelectedCProgram.Document, UpdateSourceTrigger=PropertyChanged}" 
                        IsEnabled="{Binding SelectedCProgram, Converter={StaticResource NullToBoolValueConverter},ConverterParameter={StaticResource TrueValue} }">
                </avalonEdit:TextEditor>
            </Border>

            <GridSplitter Grid.Row="3" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" />

            <orc:LogViewerControl Grid.Row="4"  x:Name="LogViewerControl" MinHeight="150" Margin="5"  EnableThreadId="True"                          
                              ShowDebug="False"
                              ShowInfo="True"
                              ShowWarning="True"
                              ShowError="True"
                              EnableTimestamp="True"
                              EnableTextColoring="True" EnableIcons="True"/>

        </Grid>
        
    </DockPanel>

</catel:Window>
