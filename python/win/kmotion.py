# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_kmotion', [dirname(__file__)])
        except ImportError:
            import _kmotion
            return _kmotion
        if fp is not None:
            try:
                _mod = imp.load_module('_kmotion', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _kmotion = swig_import_helper()
    del swig_import_helper
else:
    import _kmotion
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _kmotion.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _kmotion.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _kmotion.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _kmotion.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _kmotion.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _kmotion.SwigPyIterator_equal(self, x)

    def copy(self):
        return _kmotion.SwigPyIterator_copy(self)

    def next(self):
        return _kmotion.SwigPyIterator_next(self)

    def __next__(self):
        return _kmotion.SwigPyIterator___next__(self)

    def previous(self):
        return _kmotion.SwigPyIterator_previous(self)

    def advance(self, n):
        return _kmotion.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _kmotion.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _kmotion.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _kmotion.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _kmotion.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _kmotion.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _kmotion.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _kmotion.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class BoolVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BoolVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BoolVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _kmotion.BoolVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _kmotion.BoolVector___nonzero__(self)

    def __bool__(self):
        return _kmotion.BoolVector___bool__(self)

    def __len__(self):
        return _kmotion.BoolVector___len__(self)

    def pop(self):
        return _kmotion.BoolVector_pop(self)

    def __getslice__(self, i, j):
        return _kmotion.BoolVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _kmotion.BoolVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _kmotion.BoolVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _kmotion.BoolVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _kmotion.BoolVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _kmotion.BoolVector___setitem__(self, *args)

    def append(self, x):
        return _kmotion.BoolVector_append(self, x)

    def empty(self):
        return _kmotion.BoolVector_empty(self)

    def size(self):
        return _kmotion.BoolVector_size(self)

    def clear(self):
        return _kmotion.BoolVector_clear(self)

    def swap(self, v):
        return _kmotion.BoolVector_swap(self, v)

    def get_allocator(self):
        return _kmotion.BoolVector_get_allocator(self)

    def begin(self):
        return _kmotion.BoolVector_begin(self)

    def end(self):
        return _kmotion.BoolVector_end(self)

    def rbegin(self):
        return _kmotion.BoolVector_rbegin(self)

    def rend(self):
        return _kmotion.BoolVector_rend(self)

    def pop_back(self):
        return _kmotion.BoolVector_pop_back(self)

    def erase(self, *args):
        return _kmotion.BoolVector_erase(self, *args)

    def __init__(self, *args):
        this = _kmotion.new_BoolVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _kmotion.BoolVector_push_back(self, x)

    def front(self):
        return _kmotion.BoolVector_front(self)

    def back(self):
        return _kmotion.BoolVector_back(self)

    def assign(self, n, x):
        return _kmotion.BoolVector_assign(self, n, x)

    def resize(self, *args):
        return _kmotion.BoolVector_resize(self, *args)

    def insert(self, *args):
        return _kmotion.BoolVector_insert(self, *args)

    def reserve(self, n):
        return _kmotion.BoolVector_reserve(self, n)

    def capacity(self):
        return _kmotion.BoolVector_capacity(self)
    __swig_destroy__ = _kmotion.delete_BoolVector
    __del__ = lambda self: None
BoolVector_swigregister = _kmotion.BoolVector_swigregister
BoolVector_swigregister(BoolVector)

class IntVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _kmotion.IntVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _kmotion.IntVector___nonzero__(self)

    def __bool__(self):
        return _kmotion.IntVector___bool__(self)

    def __len__(self):
        return _kmotion.IntVector___len__(self)

    def pop(self):
        return _kmotion.IntVector_pop(self)

    def __getslice__(self, i, j):
        return _kmotion.IntVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _kmotion.IntVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _kmotion.IntVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _kmotion.IntVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _kmotion.IntVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _kmotion.IntVector___setitem__(self, *args)

    def append(self, x):
        return _kmotion.IntVector_append(self, x)

    def empty(self):
        return _kmotion.IntVector_empty(self)

    def size(self):
        return _kmotion.IntVector_size(self)

    def clear(self):
        return _kmotion.IntVector_clear(self)

    def swap(self, v):
        return _kmotion.IntVector_swap(self, v)

    def get_allocator(self):
        return _kmotion.IntVector_get_allocator(self)

    def begin(self):
        return _kmotion.IntVector_begin(self)

    def end(self):
        return _kmotion.IntVector_end(self)

    def rbegin(self):
        return _kmotion.IntVector_rbegin(self)

    def rend(self):
        return _kmotion.IntVector_rend(self)

    def pop_back(self):
        return _kmotion.IntVector_pop_back(self)

    def erase(self, *args):
        return _kmotion.IntVector_erase(self, *args)

    def __init__(self, *args):
        this = _kmotion.new_IntVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _kmotion.IntVector_push_back(self, x)

    def front(self):
        return _kmotion.IntVector_front(self)

    def back(self):
        return _kmotion.IntVector_back(self)

    def assign(self, n, x):
        return _kmotion.IntVector_assign(self, n, x)

    def resize(self, *args):
        return _kmotion.IntVector_resize(self, *args)

    def insert(self, *args):
        return _kmotion.IntVector_insert(self, *args)

    def reserve(self, n):
        return _kmotion.IntVector_reserve(self, n)

    def capacity(self):
        return _kmotion.IntVector_capacity(self)
    __swig_destroy__ = _kmotion.delete_IntVector
    __del__ = lambda self: None
IntVector_swigregister = _kmotion.IntVector_swigregister
IntVector_swigregister(IntVector)

class FloatVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FloatVector, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _kmotion.FloatVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _kmotion.FloatVector___nonzero__(self)

    def __bool__(self):
        return _kmotion.FloatVector___bool__(self)

    def __len__(self):
        return _kmotion.FloatVector___len__(self)

    def pop(self):
        return _kmotion.FloatVector_pop(self)

    def __getslice__(self, i, j):
        return _kmotion.FloatVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _kmotion.FloatVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _kmotion.FloatVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _kmotion.FloatVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _kmotion.FloatVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _kmotion.FloatVector___setitem__(self, *args)

    def append(self, x):
        return _kmotion.FloatVector_append(self, x)

    def empty(self):
        return _kmotion.FloatVector_empty(self)

    def size(self):
        return _kmotion.FloatVector_size(self)

    def clear(self):
        return _kmotion.FloatVector_clear(self)

    def swap(self, v):
        return _kmotion.FloatVector_swap(self, v)

    def get_allocator(self):
        return _kmotion.FloatVector_get_allocator(self)

    def begin(self):
        return _kmotion.FloatVector_begin(self)

    def end(self):
        return _kmotion.FloatVector_end(self)

    def rbegin(self):
        return _kmotion.FloatVector_rbegin(self)

    def rend(self):
        return _kmotion.FloatVector_rend(self)

    def pop_back(self):
        return _kmotion.FloatVector_pop_back(self)

    def erase(self, *args):
        return _kmotion.FloatVector_erase(self, *args)

    def __init__(self, *args):
        this = _kmotion.new_FloatVector(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _kmotion.FloatVector_push_back(self, x)

    def front(self):
        return _kmotion.FloatVector_front(self)

    def back(self):
        return _kmotion.FloatVector_back(self)

    def assign(self, n, x):
        return _kmotion.FloatVector_assign(self, n, x)

    def resize(self, *args):
        return _kmotion.FloatVector_resize(self, *args)

    def insert(self, *args):
        return _kmotion.FloatVector_insert(self, *args)

    def reserve(self, n):
        return _kmotion.FloatVector_reserve(self, n)

    def capacity(self):
        return _kmotion.FloatVector_capacity(self)
    __swig_destroy__ = _kmotion.delete_FloatVector
    __del__ = lambda self: None
FloatVector_swigregister = _kmotion.FloatVector_swigregister
FloatVector_swigregister(FloatVector)


_kmotion.MAX_LINE_swigconstant(_kmotion)
MAX_LINE = _kmotion.MAX_LINE

_kmotion.MAX_BOARDS_swigconstant(_kmotion)
MAX_BOARDS = _kmotion.MAX_BOARDS

_kmotion.OLD_COMPILER_swigconstant(_kmotion)
OLD_COMPILER = _kmotion.OLD_COMPILER

_kmotion.COMPILER_swigconstant(_kmotion)
COMPILER = _kmotion.COMPILER

_kmotion.KMOTION_PORT_swigconstant(_kmotion)
KMOTION_PORT = _kmotion.KMOTION_PORT

_kmotion.KMOTION_OK_swigconstant(_kmotion)
KMOTION_OK = _kmotion.KMOTION_OK

_kmotion.KMOTION_TIMEOUT_swigconstant(_kmotion)
KMOTION_TIMEOUT = _kmotion.KMOTION_TIMEOUT

_kmotion.KMOTION_READY_swigconstant(_kmotion)
KMOTION_READY = _kmotion.KMOTION_READY

_kmotion.KMOTION_ERROR_swigconstant(_kmotion)
KMOTION_ERROR = _kmotion.KMOTION_ERROR

_kmotion.BOARD_TYPE_UNKNOWN_swigconstant(_kmotion)
BOARD_TYPE_UNKNOWN = _kmotion.BOARD_TYPE_UNKNOWN

_kmotion.BOARD_TYPE_KMOTION_swigconstant(_kmotion)
BOARD_TYPE_KMOTION = _kmotion.BOARD_TYPE_KMOTION

_kmotion.BOARD_TYPE_KFLOP_swigconstant(_kmotion)
BOARD_TYPE_KFLOP = _kmotion.BOARD_TYPE_KFLOP

_kmotion.KMOTION_LOCKED_swigconstant(_kmotion)
KMOTION_LOCKED = _kmotion.KMOTION_LOCKED

_kmotion.KMOTION_IN_USE_swigconstant(_kmotion)
KMOTION_IN_USE = _kmotion.KMOTION_IN_USE

_kmotion.KMOTION_NOT_CONNECTED_swigconstant(_kmotion)
KMOTION_NOT_CONNECTED = _kmotion.KMOTION_NOT_CONNECTED

_kmotion.POLL_ADC_swigconstant(_kmotion)
POLL_ADC = _kmotion.POLL_ADC

_kmotion.POLL_DAC_swigconstant(_kmotion)
POLL_DAC = _kmotion.POLL_DAC

_kmotion.POLL_PWM_swigconstant(_kmotion)
POLL_PWM = _kmotion.POLL_PWM

_kmotion.POLL_POS_swigconstant(_kmotion)
POLL_POS = _kmotion.POLL_POS

_kmotion.POLL_DEST_swigconstant(_kmotion)
POLL_DEST = _kmotion.POLL_DEST

_kmotion.POLL_OUTCHAN_swigconstant(_kmotion)
POLL_OUTCHAN = _kmotion.POLL_OUTCHAN

_kmotion.POLL_MODES_swigconstant(_kmotion)
POLL_MODES = _kmotion.POLL_MODES

_kmotion.POLL_ENABLE_swigconstant(_kmotion)
POLL_ENABLE = _kmotion.POLL_ENABLE

_kmotion.POLL_DONE_swigconstant(_kmotion)
POLL_DONE = _kmotion.POLL_DONE

_kmotion.POLL_IO_swigconstant(_kmotion)
POLL_IO = _kmotion.POLL_IO

_kmotion.POLL_THREAD_swigconstant(_kmotion)
POLL_THREAD = _kmotion.POLL_THREAD

_kmotion.POLL_STOP_swigconstant(_kmotion)
POLL_STOP = _kmotion.POLL_STOP

_kmotion.POLL_PCCOMM_swigconstant(_kmotion)
POLL_PCCOMM = _kmotion.POLL_PCCOMM
class CKMotionDLL(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CKMotionDLL, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CKMotionDLL, name)
    __repr__ = _swig_repr

    def __init__(self, boardid):
        this = _kmotion.new_CKMotionDLL(boardid)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_CKMotionDLL
    __del__ = lambda self: None
    __swig_setmethods__["BoardID"] = _kmotion.CKMotionDLL_BoardID_set
    __swig_getmethods__["BoardID"] = _kmotion.CKMotionDLL_BoardID_get
    if _newclass:
        BoardID = _swig_property(_kmotion.CKMotionDLL_BoardID_get, _kmotion.CKMotionDLL_BoardID_set)

    def WriteLineReadLine(self, s):
        return _kmotion.CKMotionDLL_WriteLineReadLine(self, s)

    def WriteLine(self, s):
        return _kmotion.CKMotionDLL_WriteLine(self, s)

    def WriteLineWithEcho(self, s):
        return _kmotion.CKMotionDLL_WriteLineWithEcho(self, s)

    def ReadLineTimeOut(self, TimeOut_ms=100):
        return _kmotion.CKMotionDLL_ReadLineTimeOut(self, TimeOut_ms)

    def _WaitToken(self, display_msg=True, TimeOut_ms=100):
        return _kmotion.CKMotionDLL__WaitToken(self, display_msg, TimeOut_ms)

    def KMotionLock(self):
        return _kmotion.CKMotionDLL_KMotionLock(self)

    def USBLocation(self):
        return _kmotion.CKMotionDLL_USBLocation(self)

    def KMotionLockRecovery(self):
        return _kmotion.CKMotionDLL_KMotionLockRecovery(self)

    def _ReleaseToken(self):
        return _kmotion.CKMotionDLL__ReleaseToken(self)

    def Failed(self):
        return _kmotion.CKMotionDLL_Failed(self)

    def Disconnect(self):
        return _kmotion.CKMotionDLL_Disconnect(self)

    def FirmwareVersion(self):
        return _kmotion.CKMotionDLL_FirmwareVersion(self)

    def CheckForReady(self):
        return _kmotion.CKMotionDLL_CheckForReady(self)

    def LoadCoff(self, Thread, Name, PackToFlash=0):
        return _kmotion.CKMotionDLL_LoadCoff(self, Thread, Name, PackToFlash)

    def CompileAndLoadCoff(self, Name, Thread, Err):
        return _kmotion.CKMotionDLL_CompileAndLoadCoff(self, Name, Thread, Err)

    def Compile(self, Name, OutFile, board_type, Thread, Err):
        return _kmotion.CKMotionDLL_Compile(self, Name, OutFile, board_type, Thread, Err)

    def CheckCoffSize(self, Name):
        return _kmotion.CKMotionDLL_CheckCoffSize(self, Name)

    def GetLoadAddress(self, thread, BoardType):
        return _kmotion.CKMotionDLL_GetLoadAddress(self, thread, BoardType)

    def ConvertToOut(self, thread, InFile, OutFile):
        return _kmotion.CKMotionDLL_ConvertToOut(self, thread, InFile, OutFile)

    def ServiceConsole(self):
        return _kmotion.CKMotionDLL_ServiceConsole(self)

    def CheckKMotionVersion(self, type=None, GetBoardTypeOnly=False):
        return _kmotion.CKMotionDLL_CheckKMotionVersion(self, type, GetBoardTypeOnly)

    def ExtractCoffVersionString(self, InFile):
        return _kmotion.CKMotionDLL_ExtractCoffVersionString(self, InFile)

    def GetLastStatus(self, status):
        return _kmotion.CKMotionDLL_GetLastStatus(self, status)

    def SetHostStatus(self, host_status, poll=True):
        return _kmotion.CKMotionDLL_SetHostStatus(self, host_status, poll)

    def Poll(self):
        return _kmotion.CKMotionDLL_Poll(self)

    def SetPollCallback(self, interest):
        return _kmotion.CKMotionDLL_SetPollCallback(self, interest)

    def ChangedADC(self, ADCVec):
        return _kmotion.CKMotionDLL_ChangedADC(self, ADCVec)

    def ChangedDAC(self, DACVec):
        return _kmotion.CKMotionDLL_ChangedDAC(self, DACVec)

    def ChangedPWM(self, PWMVec):
        return _kmotion.CKMotionDLL_ChangedPWM(self, PWMVec)

    def ChangedPos(self, PositionVec):
        return _kmotion.CKMotionDLL_ChangedPos(self, PositionVec)

    def ChangedDest(self, DestVec):
        return _kmotion.CKMotionDLL_ChangedDest(self, DestVec)

    def ChangedOutChan(self, OutputChanVec):
        return _kmotion.CKMotionDLL_ChangedOutChan(self, OutputChanVec)

    def ChangedMode(self, InputModes, InputModes2, OutputModes, OutputModes2):
        return _kmotion.CKMotionDLL_ChangedMode(self, InputModes, InputModes2, OutputModes, OutputModes2)

    def ChangedEnable(self, Enables):
        return _kmotion.CKMotionDLL_ChangedEnable(self, Enables)

    def ChangedDone(self, AxisDone):
        return _kmotion.CKMotionDLL_ChangedDone(self, AxisDone)

    def ChangedIO(self, OutDirVec, StateVec):
        return _kmotion.CKMotionDLL_ChangedIO(self, OutDirVec, StateVec)

    def ChangedThread(self, ThreadActive):
        return _kmotion.CKMotionDLL_ChangedThread(self, ThreadActive)

    def ChangedStop(self, StopImmediateState):
        return _kmotion.CKMotionDLL_ChangedStop(self, StopImmediateState)

    def ChangedPCComm(self, PC_comm):
        return _kmotion.CKMotionDLL_ChangedPCComm(self, PC_comm)

    def SetDSPKFLOP(self, filename):
        return _kmotion.CKMotionDLL_SetDSPKFLOP(self, filename)

    def GetDSPKFLOP(self):
        return _kmotion.CKMotionDLL_GetDSPKFLOP(self)

    def SetMainPathRoot(self, dir):
        return _kmotion.CKMotionDLL_SetMainPathRoot(self, dir)

    def GetMainPathRoot(self):
        return _kmotion.CKMotionDLL_GetMainPathRoot(self)

    def SetCompilerDir(self, dir):
        return _kmotion.CKMotionDLL_SetCompilerDir(self, dir)

    def GetCompilerDir(self):
        return _kmotion.CKMotionDLL_GetCompilerDir(self)

    def SetServerDir(self, dir):
        return _kmotion.CKMotionDLL_SetServerDir(self, dir)

    def GetServerDir(self):
        return _kmotion.CKMotionDLL_GetServerDir(self)

    def Terminate(self, exit_code):
        return _kmotion.CKMotionDLL_Terminate(self, exit_code)

    def ListLocations(self):
        return _kmotion.CKMotionDLL_ListLocations(self)

    def SetConsoleCallback(self):
        return _kmotion.CKMotionDLL_SetConsoleCallback(self)

    def SetPersistInt(self, pvar, ival):
        return _kmotion.CKMotionDLL_SetPersistInt(self, pvar, ival)

    def SetPersistFloat(self, pvar, fval):
        return _kmotion.CKMotionDLL_SetPersistFloat(self, pvar, fval)

    def SetPersistDouble(self, pvar, dval):
        return _kmotion.CKMotionDLL_SetPersistDouble(self, pvar, dval)
CKMotionDLL_swigregister = _kmotion.CKMotionDLL_swigregister
CKMotionDLL_swigregister(CKMotionDLL)


_kmotion.KMOTION_VER_swigconstant(_kmotion)
KMOTION_VER = _kmotion.KMOTION_VER

_kmotion.ABORT_CHAR_swigconstant(_kmotion)
ABORT_CHAR = _kmotion.ABORT_CHAR

_kmotion.TIMEBASE_swigconstant(_kmotion)
TIMEBASE = _kmotion.TIMEBASE

_kmotion.USER_PROG_ADDRESS_KMOTION_swigconstant(_kmotion)
USER_PROG_ADDRESS_KMOTION = _kmotion.USER_PROG_ADDRESS_KMOTION

_kmotion.MAX_USER_PROG_SIZE_KMOTION_swigconstant(_kmotion)
MAX_USER_PROG_SIZE_KMOTION = _kmotion.MAX_USER_PROG_SIZE_KMOTION

_kmotion.USER_PROG_ADDRESS_KFLOP_swigconstant(_kmotion)
USER_PROG_ADDRESS_KFLOP = _kmotion.USER_PROG_ADDRESS_KFLOP

_kmotion.MAX_USER_PROG_SIZE_KFLOP_swigconstant(_kmotion)
MAX_USER_PROG_SIZE_KFLOP = _kmotion.MAX_USER_PROG_SIZE_KFLOP

_kmotion.N_USER_THREADS_swigconstant(_kmotion)
N_USER_THREADS = _kmotion.N_USER_THREADS

_kmotion.MAX_SEGMENTS_swigconstant(_kmotion)
MAX_SEGMENTS = _kmotion.MAX_SEGMENTS

_kmotion.N_CHANNELS_swigconstant(_kmotion)
N_CHANNELS = _kmotion.N_CHANNELS

_kmotion.N_IIR_FILTERS_swigconstant(_kmotion)
N_IIR_FILTERS = _kmotion.N_IIR_FILTERS

_kmotion.N_BYTES_PER_LINE_swigconstant(_kmotion)
N_BYTES_PER_LINE = _kmotion.N_BYTES_PER_LINE

_kmotion.N_DACS_swigconstant(_kmotion)
N_DACS = _kmotion.N_DACS

_kmotion.N_ADCS_swigconstant(_kmotion)
N_ADCS = _kmotion.N_ADCS

_kmotion.N_PWMS_swigconstant(_kmotion)
N_PWMS = _kmotion.N_PWMS

_kmotion.N_ENCS_swigconstant(_kmotion)
N_ENCS = _kmotion.N_ENCS

_kmotion.N_ADCS_SNAP_swigconstant(_kmotion)
N_ADCS_SNAP = _kmotion.N_ADCS_SNAP

_kmotion.N_PWMS_SNAP_swigconstant(_kmotion)
N_PWMS_SNAP = _kmotion.N_PWMS_SNAP

_kmotion.N_ENCS_SNAP_swigconstant(_kmotion)
N_ENCS_SNAP = _kmotion.N_ENCS_SNAP

_kmotion.N_BITS_swigconstant(_kmotion)
N_BITS = _kmotion.N_BITS

_kmotion.N_BITS_KMOTION_swigconstant(_kmotion)
N_BITS_KMOTION = _kmotion.N_BITS_KMOTION

_kmotion.N_VIRTUAL_BITS_swigconstant(_kmotion)
N_VIRTUAL_BITS = _kmotion.N_VIRTUAL_BITS

_kmotion.N_SNAPAMP_BITS0_swigconstant(_kmotion)
N_SNAPAMP_BITS0 = _kmotion.N_SNAPAMP_BITS0

_kmotion.N_SNAPAMP_BITS1_swigconstant(_kmotion)
N_SNAPAMP_BITS1 = _kmotion.N_SNAPAMP_BITS1

_kmotion.N_KANALOG_INPUTBITS_swigconstant(_kmotion)
N_KANALOG_INPUTBITS = _kmotion.N_KANALOG_INPUTBITS

_kmotion.N_KANALOG_OUTPUTBITS_swigconstant(_kmotion)
N_KANALOG_OUTPUTBITS = _kmotion.N_KANALOG_OUTPUTBITS

_kmotion.KSTEP_OPTO_IN_BITS_swigconstant(_kmotion)
KSTEP_OPTO_IN_BITS = _kmotion.KSTEP_OPTO_IN_BITS

_kmotion.N_KSTEP_INPUTBITS_swigconstant(_kmotion)
N_KSTEP_INPUTBITS = _kmotion.N_KSTEP_INPUTBITS

_kmotion.VIRTUAL_BITS_EX_swigconstant(_kmotion)
VIRTUAL_BITS_EX = _kmotion.VIRTUAL_BITS_EX

_kmotion.N_VIRTUAL_BITS_EX_swigconstant(_kmotion)
N_VIRTUAL_BITS_EX = _kmotion.N_VIRTUAL_BITS_EX

_kmotion.FULL_RANGE_VOLTAGE_KMOTION_swigconstant(_kmotion)
FULL_RANGE_VOLTAGE_KMOTION = _kmotion.FULL_RANGE_VOLTAGE_KMOTION

_kmotion.OFFSET_VOLTAGE_KMOTION_swigconstant(_kmotion)
OFFSET_VOLTAGE_KMOTION = _kmotion.OFFSET_VOLTAGE_KMOTION

_kmotion.FULL_RANGE_CURRENT_KMOTION_swigconstant(_kmotion)
FULL_RANGE_CURRENT_KMOTION = _kmotion.FULL_RANGE_CURRENT_KMOTION

_kmotion.OFFSET_CURRENT_KMOTION_swigconstant(_kmotion)
OFFSET_CURRENT_KMOTION = _kmotion.OFFSET_CURRENT_KMOTION

_kmotion.FULL_RANGE_VOLTAGE_KMOTION_4V_swigconstant(_kmotion)
FULL_RANGE_VOLTAGE_KMOTION_4V = _kmotion.FULL_RANGE_VOLTAGE_KMOTION_4V

_kmotion.FULL_RANGE_CURRENT_SNAP_swigconstant(_kmotion)
FULL_RANGE_CURRENT_SNAP = _kmotion.FULL_RANGE_CURRENT_SNAP

_kmotion.OFFSET_CURRENT_SNAP_swigconstant(_kmotion)
OFFSET_CURRENT_SNAP = _kmotion.OFFSET_CURRENT_SNAP

_kmotion.FULL_RANGE_VOLTAGE_SNAP_swigconstant(_kmotion)
FULL_RANGE_VOLTAGE_SNAP = _kmotion.FULL_RANGE_VOLTAGE_SNAP

_kmotion.OFFSET_VOLTAGE_SNAP_swigconstant(_kmotion)
OFFSET_VOLTAGE_SNAP = _kmotion.OFFSET_VOLTAGE_SNAP

_kmotion.PC_COMM_IDLE_swigconstant(_kmotion)
PC_COMM_IDLE = _kmotion.PC_COMM_IDLE

_kmotion.PC_COMM_ESTOP_swigconstant(_kmotion)
PC_COMM_ESTOP = _kmotion.PC_COMM_ESTOP

_kmotion.PC_COMM_HALT_swigconstant(_kmotion)
PC_COMM_HALT = _kmotion.PC_COMM_HALT

_kmotion.PC_COMM_EXECUTE_swigconstant(_kmotion)
PC_COMM_EXECUTE = _kmotion.PC_COMM_EXECUTE

_kmotion.PC_COMM_SINGLE_STEP_swigconstant(_kmotion)
PC_COMM_SINGLE_STEP = _kmotion.PC_COMM_SINGLE_STEP

_kmotion.PC_COMM_SET_FRO_swigconstant(_kmotion)
PC_COMM_SET_FRO = _kmotion.PC_COMM_SET_FRO

_kmotion.PC_COMM_SET_FRO_INC_swigconstant(_kmotion)
PC_COMM_SET_FRO_INC = _kmotion.PC_COMM_SET_FRO_INC

_kmotion.PC_COMM_SET_X_swigconstant(_kmotion)
PC_COMM_SET_X = _kmotion.PC_COMM_SET_X

_kmotion.PC_COMM_SET_Y_swigconstant(_kmotion)
PC_COMM_SET_Y = _kmotion.PC_COMM_SET_Y

_kmotion.PC_COMM_SET_Z_swigconstant(_kmotion)
PC_COMM_SET_Z = _kmotion.PC_COMM_SET_Z

_kmotion.PC_COMM_SET_A_swigconstant(_kmotion)
PC_COMM_SET_A = _kmotion.PC_COMM_SET_A

_kmotion.PC_COMM_SET_B_swigconstant(_kmotion)
PC_COMM_SET_B = _kmotion.PC_COMM_SET_B

_kmotion.PC_COMM_SET_C_swigconstant(_kmotion)
PC_COMM_SET_C = _kmotion.PC_COMM_SET_C

_kmotion.PC_COMM_USER_BUTTON_swigconstant(_kmotion)
PC_COMM_USER_BUTTON = _kmotion.PC_COMM_USER_BUTTON

_kmotion.PC_COMM_MCODE_swigconstant(_kmotion)
PC_COMM_MCODE = _kmotion.PC_COMM_MCODE

_kmotion.PC_COMM_MSG_swigconstant(_kmotion)
PC_COMM_MSG = _kmotion.PC_COMM_MSG

_kmotion.PC_COMM_GET_VARS_swigconstant(_kmotion)
PC_COMM_GET_VARS = _kmotion.PC_COMM_GET_VARS

_kmotion.PC_COMM_SET_VARS_swigconstant(_kmotion)
PC_COMM_SET_VARS = _kmotion.PC_COMM_SET_VARS

_kmotion.PC_COMM_MDI_swigconstant(_kmotion)
PC_COMM_MDI = _kmotion.PC_COMM_MDI

_kmotion.PC_COMM_GETAXISRES_swigconstant(_kmotion)
PC_COMM_GETAXISRES = _kmotion.PC_COMM_GETAXISRES

_kmotion.PC_COMM_RESTART_swigconstant(_kmotion)
PC_COMM_RESTART = _kmotion.PC_COMM_RESTART

_kmotion.PC_COMM_SET_SSO_swigconstant(_kmotion)
PC_COMM_SET_SSO = _kmotion.PC_COMM_SET_SSO

_kmotion.PC_COMM_SET_SSO_INC_swigconstant(_kmotion)
PC_COMM_SET_SSO_INC = _kmotion.PC_COMM_SET_SSO_INC

_kmotion.PC_COMM_GET_TOOLTABLE_LENGTH_swigconstant(_kmotion)
PC_COMM_GET_TOOLTABLE_LENGTH = _kmotion.PC_COMM_GET_TOOLTABLE_LENGTH

_kmotion.PC_COMM_SET_TOOLTABLE_LENGTH_swigconstant(_kmotion)
PC_COMM_SET_TOOLTABLE_LENGTH = _kmotion.PC_COMM_SET_TOOLTABLE_LENGTH

_kmotion.PC_COMM_GET_MISC_SETTINGS_swigconstant(_kmotion)
PC_COMM_GET_MISC_SETTINGS = _kmotion.PC_COMM_GET_MISC_SETTINGS

_kmotion.PC_COMM_GET_MACHINE_COORDS_swigconstant(_kmotion)
PC_COMM_GET_MACHINE_COORDS = _kmotion.PC_COMM_GET_MACHINE_COORDS

_kmotion.PC_COMM_GET_DROS_swigconstant(_kmotion)
PC_COMM_GET_DROS = _kmotion.PC_COMM_GET_DROS

_kmotion.PC_COMM_UPDATE_FIXTURE_swigconstant(_kmotion)
PC_COMM_UPDATE_FIXTURE = _kmotion.PC_COMM_UPDATE_FIXTURE

_kmotion.PC_COMM_INPUT_swigconstant(_kmotion)
PC_COMM_INPUT = _kmotion.PC_COMM_INPUT

_kmotion.PC_COMM_GET_TOOLTABLE_DIAMETER_swigconstant(_kmotion)
PC_COMM_GET_TOOLTABLE_DIAMETER = _kmotion.PC_COMM_GET_TOOLTABLE_DIAMETER

_kmotion.PC_COMM_SET_TOOLTABLE_DIAMETER_swigconstant(_kmotion)
PC_COMM_SET_TOOLTABLE_DIAMETER = _kmotion.PC_COMM_SET_TOOLTABLE_DIAMETER

_kmotion.PC_COMM_GET_TOOLTABLE_OFFSETX_swigconstant(_kmotion)
PC_COMM_GET_TOOLTABLE_OFFSETX = _kmotion.PC_COMM_GET_TOOLTABLE_OFFSETX

_kmotion.PC_COMM_SET_TOOLTABLE_OFFSETX_swigconstant(_kmotion)
PC_COMM_SET_TOOLTABLE_OFFSETX = _kmotion.PC_COMM_SET_TOOLTABLE_OFFSETX

_kmotion.PC_COMM_GET_TOOLTABLE_OFFSETY_swigconstant(_kmotion)
PC_COMM_GET_TOOLTABLE_OFFSETY = _kmotion.PC_COMM_GET_TOOLTABLE_OFFSETY

_kmotion.PC_COMM_SET_TOOLTABLE_OFFSETY_swigconstant(_kmotion)
PC_COMM_SET_TOOLTABLE_OFFSETY = _kmotion.PC_COMM_SET_TOOLTABLE_OFFSETY

_kmotion.PC_COMM_HALT_NEXT_LINE_swigconstant(_kmotion)
PC_COMM_HALT_NEXT_LINE = _kmotion.PC_COMM_HALT_NEXT_LINE

_kmotion.PC_COMM_ENABLE_JOG_KEYS_swigconstant(_kmotion)
PC_COMM_ENABLE_JOG_KEYS = _kmotion.PC_COMM_ENABLE_JOG_KEYS

_kmotion.PC_COMM_DISABLE_JOG_KEYS_swigconstant(_kmotion)
PC_COMM_DISABLE_JOG_KEYS = _kmotion.PC_COMM_DISABLE_JOG_KEYS

_kmotion.PC_COMM_FIELD_COMMAND_swigconstant(_kmotion)
PC_COMM_FIELD_COMMAND = _kmotion.PC_COMM_FIELD_COMMAND

_kmotion.PC_COMM_SHIFT_COMMAND_swigconstant(_kmotion)
PC_COMM_SHIFT_COMMAND = _kmotion.PC_COMM_SHIFT_COMMAND

_kmotion.PC_COMM_FIELD_THREAD_swigconstant(_kmotion)
PC_COMM_FIELD_THREAD = _kmotion.PC_COMM_FIELD_THREAD

_kmotion.PC_COMM_SHIFT_THREAD_swigconstant(_kmotion)
PC_COMM_SHIFT_THREAD = _kmotion.PC_COMM_SHIFT_THREAD

_kmotion.PC_COMM_FIELD_RESULT_swigconstant(_kmotion)
PC_COMM_FIELD_RESULT = _kmotion.PC_COMM_FIELD_RESULT

_kmotion.PC_COMM_SHIFT_RESULT_swigconstant(_kmotion)
PC_COMM_SHIFT_RESULT = _kmotion.PC_COMM_SHIFT_RESULT

_kmotion.PC_COMM_STATUS_MSG_swigconstant(_kmotion)
PC_COMM_STATUS_MSG = _kmotion.PC_COMM_STATUS_MSG

_kmotion.PC_COMM_SLOT_TO_INDEX_swigconstant(_kmotion)
PC_COMM_SLOT_TO_INDEX = _kmotion.PC_COMM_SLOT_TO_INDEX

_kmotion.PC_COMM_STATUS_CLEAR_swigconstant(_kmotion)
PC_COMM_STATUS_CLEAR = _kmotion.PC_COMM_STATUS_CLEAR

_kmotion.PC_COMM_NB_MSG_swigconstant(_kmotion)
PC_COMM_NB_MSG = _kmotion.PC_COMM_NB_MSG

_kmotion.PC_COMM_NB_MDI_swigconstant(_kmotion)
PC_COMM_NB_MDI = _kmotion.PC_COMM_NB_MDI

_kmotion.PC_COMM_NB_INPUT_swigconstant(_kmotion)
PC_COMM_NB_INPUT = _kmotion.PC_COMM_NB_INPUT

_kmotion.PC_COMM_QUERY_APP_swigconstant(_kmotion)
PC_COMM_QUERY_APP = _kmotion.PC_COMM_QUERY_APP

_kmotion.PC_APP_GENERIC_LINUX_swigconstant(_kmotion)
PC_APP_GENERIC_LINUX = _kmotion.PC_APP_GENERIC_LINUX

_kmotion.PC_APP_GENERIC_WIN_swigconstant(_kmotion)
PC_APP_GENERIC_WIN = _kmotion.PC_APP_GENERIC_WIN

_kmotion.PC_APP_GENERIC_OSX_swigconstant(_kmotion)
PC_APP_GENERIC_OSX = _kmotion.PC_APP_GENERIC_OSX

_kmotion.PC_APP_GENERIC_RPI_swigconstant(_kmotion)
PC_APP_GENERIC_RPI = _kmotion.PC_APP_GENERIC_RPI

_kmotion.PC_APP_MENIGCNC_WIN_swigconstant(_kmotion)
PC_APP_MENIGCNC_WIN = _kmotion.PC_APP_MENIGCNC_WIN

_kmotion.PC_COMM_GET_VARS_G_swigconstant(_kmotion)
PC_COMM_GET_VARS_G = _kmotion.PC_COMM_GET_VARS_G

_kmotion.PC_COMM_SET_VARS_G_swigconstant(_kmotion)
PC_COMM_SET_VARS_G = _kmotion.PC_COMM_SET_VARS_G

_kmotion.PC_COMM_NB_MSG_DISMISS_swigconstant(_kmotion)
PC_COMM_NB_MSG_DISMISS = _kmotion.PC_COMM_NB_MSG_DISMISS

_kmotion.PC_COMM_PERSIST_swigconstant(_kmotion)
PC_COMM_PERSIST = _kmotion.PC_COMM_PERSIST

_kmotion.N_PC_COMM_PERSIST_swigconstant(_kmotion)
N_PC_COMM_PERSIST = _kmotion.N_PC_COMM_PERSIST

_kmotion.PC_COMM_CSS_MODE_swigconstant(_kmotion)
PC_COMM_CSS_MODE = _kmotion.PC_COMM_CSS_MODE

_kmotion.PC_COMM_CSS_X_OFFSET_swigconstant(_kmotion)
PC_COMM_CSS_X_OFFSET = _kmotion.PC_COMM_CSS_X_OFFSET

_kmotion.PC_COMM_CSS_X_FACTOR_swigconstant(_kmotion)
PC_COMM_CSS_X_FACTOR = _kmotion.PC_COMM_CSS_X_FACTOR

_kmotion.PC_COMM_CSS_S_swigconstant(_kmotion)
PC_COMM_CSS_S = _kmotion.PC_COMM_CSS_S

_kmotion.PC_COMM_CSS_MAX_RPM_swigconstant(_kmotion)
PC_COMM_CSS_MAX_RPM = _kmotion.PC_COMM_CSS_MAX_RPM

_kmotion.MACH3_PROBE_STATUS_VAR_swigconstant(_kmotion)
MACH3_PROBE_STATUS_VAR = _kmotion.MACH3_PROBE_STATUS_VAR

_kmotion.MACH3_PROBE_RESULTS_VAR_swigconstant(_kmotion)
MACH3_PROBE_RESULTS_VAR = _kmotion.MACH3_PROBE_RESULTS_VAR

_kmotion.STAT_VERSION_swigconstant(_kmotion)
STAT_VERSION = _kmotion.STAT_VERSION
class KStatus(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, KStatus, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, KStatus, name)
    __repr__ = _swig_repr
    __swig_setmethods__["VersionAndSize"] = _kmotion.KStatus_VersionAndSize_set
    __swig_getmethods__["VersionAndSize"] = _kmotion.KStatus_VersionAndSize_get
    if _newclass:
        VersionAndSize = _swig_property(_kmotion.KStatus_VersionAndSize_get, _kmotion.KStatus_VersionAndSize_set)
    __swig_setmethods__["ADC"] = _kmotion.KStatus_ADC_set
    __swig_getmethods__["ADC"] = _kmotion.KStatus_ADC_get
    if _newclass:
        ADC = _swig_property(_kmotion.KStatus_ADC_get, _kmotion.KStatus_ADC_set)
    __swig_setmethods__["DAC"] = _kmotion.KStatus_DAC_set
    __swig_getmethods__["DAC"] = _kmotion.KStatus_DAC_get
    if _newclass:
        DAC = _swig_property(_kmotion.KStatus_DAC_get, _kmotion.KStatus_DAC_set)
    __swig_setmethods__["PWM"] = _kmotion.KStatus_PWM_set
    __swig_getmethods__["PWM"] = _kmotion.KStatus_PWM_get
    if _newclass:
        PWM = _swig_property(_kmotion.KStatus_PWM_get, _kmotion.KStatus_PWM_set)
    __swig_setmethods__["Position"] = _kmotion.KStatus_Position_set
    __swig_getmethods__["Position"] = _kmotion.KStatus_Position_get
    if _newclass:
        Position = _swig_property(_kmotion.KStatus_Position_get, _kmotion.KStatus_Position_set)
    __swig_setmethods__["Dest"] = _kmotion.KStatus_Dest_set
    __swig_getmethods__["Dest"] = _kmotion.KStatus_Dest_get
    if _newclass:
        Dest = _swig_property(_kmotion.KStatus_Dest_get, _kmotion.KStatus_Dest_set)
    __swig_setmethods__["OutputChan0"] = _kmotion.KStatus_OutputChan0_set
    __swig_getmethods__["OutputChan0"] = _kmotion.KStatus_OutputChan0_get
    if _newclass:
        OutputChan0 = _swig_property(_kmotion.KStatus_OutputChan0_get, _kmotion.KStatus_OutputChan0_set)
    __swig_setmethods__["InputModes"] = _kmotion.KStatus_InputModes_set
    __swig_getmethods__["InputModes"] = _kmotion.KStatus_InputModes_get
    if _newclass:
        InputModes = _swig_property(_kmotion.KStatus_InputModes_get, _kmotion.KStatus_InputModes_set)
    __swig_setmethods__["InputModes2"] = _kmotion.KStatus_InputModes2_set
    __swig_getmethods__["InputModes2"] = _kmotion.KStatus_InputModes2_get
    if _newclass:
        InputModes2 = _swig_property(_kmotion.KStatus_InputModes2_get, _kmotion.KStatus_InputModes2_set)
    __swig_setmethods__["OutputModes"] = _kmotion.KStatus_OutputModes_set
    __swig_getmethods__["OutputModes"] = _kmotion.KStatus_OutputModes_get
    if _newclass:
        OutputModes = _swig_property(_kmotion.KStatus_OutputModes_get, _kmotion.KStatus_OutputModes_set)
    __swig_setmethods__["OutputModes2"] = _kmotion.KStatus_OutputModes2_set
    __swig_getmethods__["OutputModes2"] = _kmotion.KStatus_OutputModes2_get
    if _newclass:
        OutputModes2 = _swig_property(_kmotion.KStatus_OutputModes2_get, _kmotion.KStatus_OutputModes2_set)
    __swig_setmethods__["Enables"] = _kmotion.KStatus_Enables_set
    __swig_getmethods__["Enables"] = _kmotion.KStatus_Enables_get
    if _newclass:
        Enables = _swig_property(_kmotion.KStatus_Enables_get, _kmotion.KStatus_Enables_set)
    __swig_setmethods__["AxisDone"] = _kmotion.KStatus_AxisDone_set
    __swig_getmethods__["AxisDone"] = _kmotion.KStatus_AxisDone_get
    if _newclass:
        AxisDone = _swig_property(_kmotion.KStatus_AxisDone_get, _kmotion.KStatus_AxisDone_set)
    __swig_setmethods__["BitsDirection"] = _kmotion.KStatus_BitsDirection_set
    __swig_getmethods__["BitsDirection"] = _kmotion.KStatus_BitsDirection_get
    if _newclass:
        BitsDirection = _swig_property(_kmotion.KStatus_BitsDirection_get, _kmotion.KStatus_BitsDirection_set)
    __swig_setmethods__["BitsState"] = _kmotion.KStatus_BitsState_set
    __swig_getmethods__["BitsState"] = _kmotion.KStatus_BitsState_get
    if _newclass:
        BitsState = _swig_property(_kmotion.KStatus_BitsState_get, _kmotion.KStatus_BitsState_set)
    __swig_setmethods__["SnapBitsDirection0"] = _kmotion.KStatus_SnapBitsDirection0_set
    __swig_getmethods__["SnapBitsDirection0"] = _kmotion.KStatus_SnapBitsDirection0_get
    if _newclass:
        SnapBitsDirection0 = _swig_property(_kmotion.KStatus_SnapBitsDirection0_get, _kmotion.KStatus_SnapBitsDirection0_set)
    __swig_setmethods__["SnapBitsDirection1"] = _kmotion.KStatus_SnapBitsDirection1_set
    __swig_getmethods__["SnapBitsDirection1"] = _kmotion.KStatus_SnapBitsDirection1_get
    if _newclass:
        SnapBitsDirection1 = _swig_property(_kmotion.KStatus_SnapBitsDirection1_get, _kmotion.KStatus_SnapBitsDirection1_set)
    __swig_setmethods__["SnapBitsState0"] = _kmotion.KStatus_SnapBitsState0_set
    __swig_getmethods__["SnapBitsState0"] = _kmotion.KStatus_SnapBitsState0_get
    if _newclass:
        SnapBitsState0 = _swig_property(_kmotion.KStatus_SnapBitsState0_get, _kmotion.KStatus_SnapBitsState0_set)
    __swig_setmethods__["SnapBitsState1"] = _kmotion.KStatus_SnapBitsState1_set
    __swig_getmethods__["SnapBitsState1"] = _kmotion.KStatus_SnapBitsState1_get
    if _newclass:
        SnapBitsState1 = _swig_property(_kmotion.KStatus_SnapBitsState1_get, _kmotion.KStatus_SnapBitsState1_set)
    __swig_setmethods__["KanalogBitsStateInputs"] = _kmotion.KStatus_KanalogBitsStateInputs_set
    __swig_getmethods__["KanalogBitsStateInputs"] = _kmotion.KStatus_KanalogBitsStateInputs_get
    if _newclass:
        KanalogBitsStateInputs = _swig_property(_kmotion.KStatus_KanalogBitsStateInputs_get, _kmotion.KStatus_KanalogBitsStateInputs_set)
    __swig_setmethods__["KanalogBitsStateOutputs"] = _kmotion.KStatus_KanalogBitsStateOutputs_set
    __swig_getmethods__["KanalogBitsStateOutputs"] = _kmotion.KStatus_KanalogBitsStateOutputs_get
    if _newclass:
        KanalogBitsStateOutputs = _swig_property(_kmotion.KStatus_KanalogBitsStateOutputs_get, _kmotion.KStatus_KanalogBitsStateOutputs_set)
    __swig_setmethods__["RunOnStartUp"] = _kmotion.KStatus_RunOnStartUp_set
    __swig_getmethods__["RunOnStartUp"] = _kmotion.KStatus_RunOnStartUp_get
    if _newclass:
        RunOnStartUp = _swig_property(_kmotion.KStatus_RunOnStartUp_get, _kmotion.KStatus_RunOnStartUp_set)
    __swig_setmethods__["ThreadActive"] = _kmotion.KStatus_ThreadActive_set
    __swig_getmethods__["ThreadActive"] = _kmotion.KStatus_ThreadActive_get
    if _newclass:
        ThreadActive = _swig_property(_kmotion.KStatus_ThreadActive_get, _kmotion.KStatus_ThreadActive_set)
    __swig_setmethods__["StopImmediateState"] = _kmotion.KStatus_StopImmediateState_set
    __swig_getmethods__["StopImmediateState"] = _kmotion.KStatus_StopImmediateState_get
    if _newclass:
        StopImmediateState = _swig_property(_kmotion.KStatus_StopImmediateState_get, _kmotion.KStatus_StopImmediateState_set)
    __swig_setmethods__["TimeStamp"] = _kmotion.KStatus_TimeStamp_set
    __swig_getmethods__["TimeStamp"] = _kmotion.KStatus_TimeStamp_get
    if _newclass:
        TimeStamp = _swig_property(_kmotion.KStatus_TimeStamp_get, _kmotion.KStatus_TimeStamp_set)
    __swig_setmethods__["PC_comm"] = _kmotion.KStatus_PC_comm_set
    __swig_getmethods__["PC_comm"] = _kmotion.KStatus_PC_comm_get
    if _newclass:
        PC_comm = _swig_property(_kmotion.KStatus_PC_comm_get, _kmotion.KStatus_PC_comm_set)
    __swig_setmethods__["VirtualBits"] = _kmotion.KStatus_VirtualBits_set
    __swig_getmethods__["VirtualBits"] = _kmotion.KStatus_VirtualBits_get
    if _newclass:
        VirtualBits = _swig_property(_kmotion.KStatus_VirtualBits_get, _kmotion.KStatus_VirtualBits_set)
    __swig_setmethods__["VirtualBitsEx0"] = _kmotion.KStatus_VirtualBitsEx0_set
    __swig_getmethods__["VirtualBitsEx0"] = _kmotion.KStatus_VirtualBitsEx0_get
    if _newclass:
        VirtualBitsEx0 = _swig_property(_kmotion.KStatus_VirtualBitsEx0_get, _kmotion.KStatus_VirtualBitsEx0_set)

    def __init__(self):
        this = _kmotion.new_KStatus()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_KStatus
    __del__ = lambda self: None
KStatus_swigregister = _kmotion.KStatus_swigregister
KStatus_swigregister(KStatus)


_kmotion.NO_INPUT_MODE_swigconstant(_kmotion)
NO_INPUT_MODE = _kmotion.NO_INPUT_MODE

_kmotion.ENCODER_MODE_swigconstant(_kmotion)
ENCODER_MODE = _kmotion.ENCODER_MODE

_kmotion.ADC_MODE_swigconstant(_kmotion)
ADC_MODE = _kmotion.ADC_MODE

_kmotion.RESOLVER_MODE_swigconstant(_kmotion)
RESOLVER_MODE = _kmotion.RESOLVER_MODE

_kmotion.USER_INPUT_MODE_swigconstant(_kmotion)
USER_INPUT_MODE = _kmotion.USER_INPUT_MODE

_kmotion.NUM_INPUT_MODES_swigconstant(_kmotion)
NUM_INPUT_MODES = _kmotion.NUM_INPUT_MODES

_kmotion.NO_OUTPUT_MODE_swigconstant(_kmotion)
NO_OUTPUT_MODE = _kmotion.NO_OUTPUT_MODE

_kmotion.MICROSTEP_MODE_swigconstant(_kmotion)
MICROSTEP_MODE = _kmotion.MICROSTEP_MODE

_kmotion.DC_SERVO_MODE_swigconstant(_kmotion)
DC_SERVO_MODE = _kmotion.DC_SERVO_MODE

_kmotion.BRUSHLESS_3PH_MODE_swigconstant(_kmotion)
BRUSHLESS_3PH_MODE = _kmotion.BRUSHLESS_3PH_MODE

_kmotion.BRUSHLESS_4PH_MODE_swigconstant(_kmotion)
BRUSHLESS_4PH_MODE = _kmotion.BRUSHLESS_4PH_MODE

_kmotion.DAC_SERVO_MODE_swigconstant(_kmotion)
DAC_SERVO_MODE = _kmotion.DAC_SERVO_MODE

_kmotion.STEP_DIR_MODE_swigconstant(_kmotion)
STEP_DIR_MODE = _kmotion.STEP_DIR_MODE

_kmotion.CL_STEP_DIR_MODE_swigconstant(_kmotion)
CL_STEP_DIR_MODE = _kmotion.CL_STEP_DIR_MODE

_kmotion.CL_MICROSTEP_MODE_swigconstant(_kmotion)
CL_MICROSTEP_MODE = _kmotion.CL_MICROSTEP_MODE

_kmotion.NUM_SERVO_MODES_swigconstant(_kmotion)
NUM_SERVO_MODES = _kmotion.NUM_SERVO_MODES

_kmotion.BACKLASH_OFF_swigconstant(_kmotion)
BACKLASH_OFF = _kmotion.BACKLASH_OFF

_kmotion.BACKLASH_LINEAR_swigconstant(_kmotion)
BACKLASH_LINEAR = _kmotion.BACKLASH_LINEAR

_kmotion.NUM_BACKLASH_MODES_swigconstant(_kmotion)
NUM_BACKLASH_MODES = _kmotion.NUM_BACKLASH_MODES

_kmotion.HOST_JOB_ACTIVE_BIT_swigconstant(_kmotion)
HOST_JOB_ACTIVE_BIT = _kmotion.HOST_JOB_ACTIVE_BIT

_kmotion.SEG_UNDEFINED_swigconstant(_kmotion)
SEG_UNDEFINED = _kmotion.SEG_UNDEFINED

_kmotion.SEG_LINEAR_swigconstant(_kmotion)
SEG_LINEAR = _kmotion.SEG_LINEAR

_kmotion.SEG_ARC_swigconstant(_kmotion)
SEG_ARC = _kmotion.SEG_ARC

_kmotion.SEG_RAPID_swigconstant(_kmotion)
SEG_RAPID = _kmotion.SEG_RAPID

_kmotion.SEG_DWELL_swigconstant(_kmotion)
SEG_DWELL = _kmotion.SEG_DWELL

_kmotion.MAX_TP_SEGMENTS_swigconstant(_kmotion)
MAX_TP_SEGMENTS = _kmotion.MAX_TP_SEGMENTS

_kmotion.DIR_CCW_swigconstant(_kmotion)
DIR_CCW = _kmotion.DIR_CCW

_kmotion.DIR_CW_swigconstant(_kmotion)
DIR_CW = _kmotion.DIR_CW
class MotionParams(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MotionParams, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MotionParams, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BreakAngle"] = _kmotion.MotionParams_BreakAngle_set
    __swig_getmethods__["BreakAngle"] = _kmotion.MotionParams_BreakAngle_get
    if _newclass:
        BreakAngle = _swig_property(_kmotion.MotionParams_BreakAngle_get, _kmotion.MotionParams_BreakAngle_set)
    __swig_setmethods__["CollinearTol"] = _kmotion.MotionParams_CollinearTol_set
    __swig_getmethods__["CollinearTol"] = _kmotion.MotionParams_CollinearTol_get
    if _newclass:
        CollinearTol = _swig_property(_kmotion.MotionParams_CollinearTol_get, _kmotion.MotionParams_CollinearTol_set)
    __swig_setmethods__["CornerTol"] = _kmotion.MotionParams_CornerTol_set
    __swig_getmethods__["CornerTol"] = _kmotion.MotionParams_CornerTol_get
    if _newclass:
        CornerTol = _swig_property(_kmotion.MotionParams_CornerTol_get, _kmotion.MotionParams_CornerTol_set)
    __swig_setmethods__["FacetAngle"] = _kmotion.MotionParams_FacetAngle_set
    __swig_getmethods__["FacetAngle"] = _kmotion.MotionParams_FacetAngle_get
    if _newclass:
        FacetAngle = _swig_property(_kmotion.MotionParams_FacetAngle_get, _kmotion.MotionParams_FacetAngle_set)
    __swig_setmethods__["TPLookahead"] = _kmotion.MotionParams_TPLookahead_set
    __swig_getmethods__["TPLookahead"] = _kmotion.MotionParams_TPLookahead_get
    if _newclass:
        TPLookahead = _swig_property(_kmotion.MotionParams_TPLookahead_get, _kmotion.MotionParams_TPLookahead_set)
    __swig_setmethods__["RadiusA"] = _kmotion.MotionParams_RadiusA_set
    __swig_getmethods__["RadiusA"] = _kmotion.MotionParams_RadiusA_get
    if _newclass:
        RadiusA = _swig_property(_kmotion.MotionParams_RadiusA_get, _kmotion.MotionParams_RadiusA_set)
    __swig_setmethods__["RadiusB"] = _kmotion.MotionParams_RadiusB_set
    __swig_getmethods__["RadiusB"] = _kmotion.MotionParams_RadiusB_get
    if _newclass:
        RadiusB = _swig_property(_kmotion.MotionParams_RadiusB_get, _kmotion.MotionParams_RadiusB_set)
    __swig_setmethods__["RadiusC"] = _kmotion.MotionParams_RadiusC_set
    __swig_getmethods__["RadiusC"] = _kmotion.MotionParams_RadiusC_get
    if _newclass:
        RadiusC = _swig_property(_kmotion.MotionParams_RadiusC_get, _kmotion.MotionParams_RadiusC_set)
    __swig_setmethods__["MaxAccelX"] = _kmotion.MotionParams_MaxAccelX_set
    __swig_getmethods__["MaxAccelX"] = _kmotion.MotionParams_MaxAccelX_get
    if _newclass:
        MaxAccelX = _swig_property(_kmotion.MotionParams_MaxAccelX_get, _kmotion.MotionParams_MaxAccelX_set)
    __swig_setmethods__["MaxAccelY"] = _kmotion.MotionParams_MaxAccelY_set
    __swig_getmethods__["MaxAccelY"] = _kmotion.MotionParams_MaxAccelY_get
    if _newclass:
        MaxAccelY = _swig_property(_kmotion.MotionParams_MaxAccelY_get, _kmotion.MotionParams_MaxAccelY_set)
    __swig_setmethods__["MaxAccelZ"] = _kmotion.MotionParams_MaxAccelZ_set
    __swig_getmethods__["MaxAccelZ"] = _kmotion.MotionParams_MaxAccelZ_get
    if _newclass:
        MaxAccelZ = _swig_property(_kmotion.MotionParams_MaxAccelZ_get, _kmotion.MotionParams_MaxAccelZ_set)
    __swig_setmethods__["MaxAccelA"] = _kmotion.MotionParams_MaxAccelA_set
    __swig_getmethods__["MaxAccelA"] = _kmotion.MotionParams_MaxAccelA_get
    if _newclass:
        MaxAccelA = _swig_property(_kmotion.MotionParams_MaxAccelA_get, _kmotion.MotionParams_MaxAccelA_set)
    __swig_setmethods__["MaxAccelB"] = _kmotion.MotionParams_MaxAccelB_set
    __swig_getmethods__["MaxAccelB"] = _kmotion.MotionParams_MaxAccelB_get
    if _newclass:
        MaxAccelB = _swig_property(_kmotion.MotionParams_MaxAccelB_get, _kmotion.MotionParams_MaxAccelB_set)
    __swig_setmethods__["MaxAccelC"] = _kmotion.MotionParams_MaxAccelC_set
    __swig_getmethods__["MaxAccelC"] = _kmotion.MotionParams_MaxAccelC_get
    if _newclass:
        MaxAccelC = _swig_property(_kmotion.MotionParams_MaxAccelC_get, _kmotion.MotionParams_MaxAccelC_set)
    __swig_setmethods__["MaxVelX"] = _kmotion.MotionParams_MaxVelX_set
    __swig_getmethods__["MaxVelX"] = _kmotion.MotionParams_MaxVelX_get
    if _newclass:
        MaxVelX = _swig_property(_kmotion.MotionParams_MaxVelX_get, _kmotion.MotionParams_MaxVelX_set)
    __swig_setmethods__["MaxVelY"] = _kmotion.MotionParams_MaxVelY_set
    __swig_getmethods__["MaxVelY"] = _kmotion.MotionParams_MaxVelY_get
    if _newclass:
        MaxVelY = _swig_property(_kmotion.MotionParams_MaxVelY_get, _kmotion.MotionParams_MaxVelY_set)
    __swig_setmethods__["MaxVelZ"] = _kmotion.MotionParams_MaxVelZ_set
    __swig_getmethods__["MaxVelZ"] = _kmotion.MotionParams_MaxVelZ_get
    if _newclass:
        MaxVelZ = _swig_property(_kmotion.MotionParams_MaxVelZ_get, _kmotion.MotionParams_MaxVelZ_set)
    __swig_setmethods__["MaxVelA"] = _kmotion.MotionParams_MaxVelA_set
    __swig_getmethods__["MaxVelA"] = _kmotion.MotionParams_MaxVelA_get
    if _newclass:
        MaxVelA = _swig_property(_kmotion.MotionParams_MaxVelA_get, _kmotion.MotionParams_MaxVelA_set)
    __swig_setmethods__["MaxVelB"] = _kmotion.MotionParams_MaxVelB_set
    __swig_getmethods__["MaxVelB"] = _kmotion.MotionParams_MaxVelB_get
    if _newclass:
        MaxVelB = _swig_property(_kmotion.MotionParams_MaxVelB_get, _kmotion.MotionParams_MaxVelB_set)
    __swig_setmethods__["MaxVelC"] = _kmotion.MotionParams_MaxVelC_set
    __swig_getmethods__["MaxVelC"] = _kmotion.MotionParams_MaxVelC_get
    if _newclass:
        MaxVelC = _swig_property(_kmotion.MotionParams_MaxVelC_get, _kmotion.MotionParams_MaxVelC_set)
    __swig_setmethods__["MaxRapidJerkX"] = _kmotion.MotionParams_MaxRapidJerkX_set
    __swig_getmethods__["MaxRapidJerkX"] = _kmotion.MotionParams_MaxRapidJerkX_get
    if _newclass:
        MaxRapidJerkX = _swig_property(_kmotion.MotionParams_MaxRapidJerkX_get, _kmotion.MotionParams_MaxRapidJerkX_set)
    __swig_setmethods__["MaxRapidJerkY"] = _kmotion.MotionParams_MaxRapidJerkY_set
    __swig_getmethods__["MaxRapidJerkY"] = _kmotion.MotionParams_MaxRapidJerkY_get
    if _newclass:
        MaxRapidJerkY = _swig_property(_kmotion.MotionParams_MaxRapidJerkY_get, _kmotion.MotionParams_MaxRapidJerkY_set)
    __swig_setmethods__["MaxRapidJerkZ"] = _kmotion.MotionParams_MaxRapidJerkZ_set
    __swig_getmethods__["MaxRapidJerkZ"] = _kmotion.MotionParams_MaxRapidJerkZ_get
    if _newclass:
        MaxRapidJerkZ = _swig_property(_kmotion.MotionParams_MaxRapidJerkZ_get, _kmotion.MotionParams_MaxRapidJerkZ_set)
    __swig_setmethods__["MaxRapidJerkA"] = _kmotion.MotionParams_MaxRapidJerkA_set
    __swig_getmethods__["MaxRapidJerkA"] = _kmotion.MotionParams_MaxRapidJerkA_get
    if _newclass:
        MaxRapidJerkA = _swig_property(_kmotion.MotionParams_MaxRapidJerkA_get, _kmotion.MotionParams_MaxRapidJerkA_set)
    __swig_setmethods__["MaxRapidJerkB"] = _kmotion.MotionParams_MaxRapidJerkB_set
    __swig_getmethods__["MaxRapidJerkB"] = _kmotion.MotionParams_MaxRapidJerkB_get
    if _newclass:
        MaxRapidJerkB = _swig_property(_kmotion.MotionParams_MaxRapidJerkB_get, _kmotion.MotionParams_MaxRapidJerkB_set)
    __swig_setmethods__["MaxRapidJerkC"] = _kmotion.MotionParams_MaxRapidJerkC_set
    __swig_getmethods__["MaxRapidJerkC"] = _kmotion.MotionParams_MaxRapidJerkC_get
    if _newclass:
        MaxRapidJerkC = _swig_property(_kmotion.MotionParams_MaxRapidJerkC_get, _kmotion.MotionParams_MaxRapidJerkC_set)
    __swig_setmethods__["MaxRapidAccelX"] = _kmotion.MotionParams_MaxRapidAccelX_set
    __swig_getmethods__["MaxRapidAccelX"] = _kmotion.MotionParams_MaxRapidAccelX_get
    if _newclass:
        MaxRapidAccelX = _swig_property(_kmotion.MotionParams_MaxRapidAccelX_get, _kmotion.MotionParams_MaxRapidAccelX_set)
    __swig_setmethods__["MaxRapidAccelY"] = _kmotion.MotionParams_MaxRapidAccelY_set
    __swig_getmethods__["MaxRapidAccelY"] = _kmotion.MotionParams_MaxRapidAccelY_get
    if _newclass:
        MaxRapidAccelY = _swig_property(_kmotion.MotionParams_MaxRapidAccelY_get, _kmotion.MotionParams_MaxRapidAccelY_set)
    __swig_setmethods__["MaxRapidAccelZ"] = _kmotion.MotionParams_MaxRapidAccelZ_set
    __swig_getmethods__["MaxRapidAccelZ"] = _kmotion.MotionParams_MaxRapidAccelZ_get
    if _newclass:
        MaxRapidAccelZ = _swig_property(_kmotion.MotionParams_MaxRapidAccelZ_get, _kmotion.MotionParams_MaxRapidAccelZ_set)
    __swig_setmethods__["MaxRapidAccelA"] = _kmotion.MotionParams_MaxRapidAccelA_set
    __swig_getmethods__["MaxRapidAccelA"] = _kmotion.MotionParams_MaxRapidAccelA_get
    if _newclass:
        MaxRapidAccelA = _swig_property(_kmotion.MotionParams_MaxRapidAccelA_get, _kmotion.MotionParams_MaxRapidAccelA_set)
    __swig_setmethods__["MaxRapidAccelB"] = _kmotion.MotionParams_MaxRapidAccelB_set
    __swig_getmethods__["MaxRapidAccelB"] = _kmotion.MotionParams_MaxRapidAccelB_get
    if _newclass:
        MaxRapidAccelB = _swig_property(_kmotion.MotionParams_MaxRapidAccelB_get, _kmotion.MotionParams_MaxRapidAccelB_set)
    __swig_setmethods__["MaxRapidAccelC"] = _kmotion.MotionParams_MaxRapidAccelC_set
    __swig_getmethods__["MaxRapidAccelC"] = _kmotion.MotionParams_MaxRapidAccelC_get
    if _newclass:
        MaxRapidAccelC = _swig_property(_kmotion.MotionParams_MaxRapidAccelC_get, _kmotion.MotionParams_MaxRapidAccelC_set)
    __swig_setmethods__["MaxRapidVelX"] = _kmotion.MotionParams_MaxRapidVelX_set
    __swig_getmethods__["MaxRapidVelX"] = _kmotion.MotionParams_MaxRapidVelX_get
    if _newclass:
        MaxRapidVelX = _swig_property(_kmotion.MotionParams_MaxRapidVelX_get, _kmotion.MotionParams_MaxRapidVelX_set)
    __swig_setmethods__["MaxRapidVelY"] = _kmotion.MotionParams_MaxRapidVelY_set
    __swig_getmethods__["MaxRapidVelY"] = _kmotion.MotionParams_MaxRapidVelY_get
    if _newclass:
        MaxRapidVelY = _swig_property(_kmotion.MotionParams_MaxRapidVelY_get, _kmotion.MotionParams_MaxRapidVelY_set)
    __swig_setmethods__["MaxRapidVelZ"] = _kmotion.MotionParams_MaxRapidVelZ_set
    __swig_getmethods__["MaxRapidVelZ"] = _kmotion.MotionParams_MaxRapidVelZ_get
    if _newclass:
        MaxRapidVelZ = _swig_property(_kmotion.MotionParams_MaxRapidVelZ_get, _kmotion.MotionParams_MaxRapidVelZ_set)
    __swig_setmethods__["MaxRapidVelA"] = _kmotion.MotionParams_MaxRapidVelA_set
    __swig_getmethods__["MaxRapidVelA"] = _kmotion.MotionParams_MaxRapidVelA_get
    if _newclass:
        MaxRapidVelA = _swig_property(_kmotion.MotionParams_MaxRapidVelA_get, _kmotion.MotionParams_MaxRapidVelA_set)
    __swig_setmethods__["MaxRapidVelB"] = _kmotion.MotionParams_MaxRapidVelB_set
    __swig_getmethods__["MaxRapidVelB"] = _kmotion.MotionParams_MaxRapidVelB_get
    if _newclass:
        MaxRapidVelB = _swig_property(_kmotion.MotionParams_MaxRapidVelB_get, _kmotion.MotionParams_MaxRapidVelB_set)
    __swig_setmethods__["MaxRapidVelC"] = _kmotion.MotionParams_MaxRapidVelC_set
    __swig_getmethods__["MaxRapidVelC"] = _kmotion.MotionParams_MaxRapidVelC_get
    if _newclass:
        MaxRapidVelC = _swig_property(_kmotion.MotionParams_MaxRapidVelC_get, _kmotion.MotionParams_MaxRapidVelC_set)
    __swig_setmethods__["SoftLimitNegX"] = _kmotion.MotionParams_SoftLimitNegX_set
    __swig_getmethods__["SoftLimitNegX"] = _kmotion.MotionParams_SoftLimitNegX_get
    if _newclass:
        SoftLimitNegX = _swig_property(_kmotion.MotionParams_SoftLimitNegX_get, _kmotion.MotionParams_SoftLimitNegX_set)
    __swig_setmethods__["SoftLimitNegY"] = _kmotion.MotionParams_SoftLimitNegY_set
    __swig_getmethods__["SoftLimitNegY"] = _kmotion.MotionParams_SoftLimitNegY_get
    if _newclass:
        SoftLimitNegY = _swig_property(_kmotion.MotionParams_SoftLimitNegY_get, _kmotion.MotionParams_SoftLimitNegY_set)
    __swig_setmethods__["SoftLimitNegZ"] = _kmotion.MotionParams_SoftLimitNegZ_set
    __swig_getmethods__["SoftLimitNegZ"] = _kmotion.MotionParams_SoftLimitNegZ_get
    if _newclass:
        SoftLimitNegZ = _swig_property(_kmotion.MotionParams_SoftLimitNegZ_get, _kmotion.MotionParams_SoftLimitNegZ_set)
    __swig_setmethods__["SoftLimitNegA"] = _kmotion.MotionParams_SoftLimitNegA_set
    __swig_getmethods__["SoftLimitNegA"] = _kmotion.MotionParams_SoftLimitNegA_get
    if _newclass:
        SoftLimitNegA = _swig_property(_kmotion.MotionParams_SoftLimitNegA_get, _kmotion.MotionParams_SoftLimitNegA_set)
    __swig_setmethods__["SoftLimitNegB"] = _kmotion.MotionParams_SoftLimitNegB_set
    __swig_getmethods__["SoftLimitNegB"] = _kmotion.MotionParams_SoftLimitNegB_get
    if _newclass:
        SoftLimitNegB = _swig_property(_kmotion.MotionParams_SoftLimitNegB_get, _kmotion.MotionParams_SoftLimitNegB_set)
    __swig_setmethods__["SoftLimitNegC"] = _kmotion.MotionParams_SoftLimitNegC_set
    __swig_getmethods__["SoftLimitNegC"] = _kmotion.MotionParams_SoftLimitNegC_get
    if _newclass:
        SoftLimitNegC = _swig_property(_kmotion.MotionParams_SoftLimitNegC_get, _kmotion.MotionParams_SoftLimitNegC_set)
    __swig_setmethods__["SoftLimitPosX"] = _kmotion.MotionParams_SoftLimitPosX_set
    __swig_getmethods__["SoftLimitPosX"] = _kmotion.MotionParams_SoftLimitPosX_get
    if _newclass:
        SoftLimitPosX = _swig_property(_kmotion.MotionParams_SoftLimitPosX_get, _kmotion.MotionParams_SoftLimitPosX_set)
    __swig_setmethods__["SoftLimitPosY"] = _kmotion.MotionParams_SoftLimitPosY_set
    __swig_getmethods__["SoftLimitPosY"] = _kmotion.MotionParams_SoftLimitPosY_get
    if _newclass:
        SoftLimitPosY = _swig_property(_kmotion.MotionParams_SoftLimitPosY_get, _kmotion.MotionParams_SoftLimitPosY_set)
    __swig_setmethods__["SoftLimitPosZ"] = _kmotion.MotionParams_SoftLimitPosZ_set
    __swig_getmethods__["SoftLimitPosZ"] = _kmotion.MotionParams_SoftLimitPosZ_get
    if _newclass:
        SoftLimitPosZ = _swig_property(_kmotion.MotionParams_SoftLimitPosZ_get, _kmotion.MotionParams_SoftLimitPosZ_set)
    __swig_setmethods__["SoftLimitPosA"] = _kmotion.MotionParams_SoftLimitPosA_set
    __swig_getmethods__["SoftLimitPosA"] = _kmotion.MotionParams_SoftLimitPosA_get
    if _newclass:
        SoftLimitPosA = _swig_property(_kmotion.MotionParams_SoftLimitPosA_get, _kmotion.MotionParams_SoftLimitPosA_set)
    __swig_setmethods__["SoftLimitPosB"] = _kmotion.MotionParams_SoftLimitPosB_set
    __swig_getmethods__["SoftLimitPosB"] = _kmotion.MotionParams_SoftLimitPosB_get
    if _newclass:
        SoftLimitPosB = _swig_property(_kmotion.MotionParams_SoftLimitPosB_get, _kmotion.MotionParams_SoftLimitPosB_set)
    __swig_setmethods__["SoftLimitPosC"] = _kmotion.MotionParams_SoftLimitPosC_set
    __swig_getmethods__["SoftLimitPosC"] = _kmotion.MotionParams_SoftLimitPosC_get
    if _newclass:
        SoftLimitPosC = _swig_property(_kmotion.MotionParams_SoftLimitPosC_get, _kmotion.MotionParams_SoftLimitPosC_set)
    __swig_setmethods__["CountsPerInchX"] = _kmotion.MotionParams_CountsPerInchX_set
    __swig_getmethods__["CountsPerInchX"] = _kmotion.MotionParams_CountsPerInchX_get
    if _newclass:
        CountsPerInchX = _swig_property(_kmotion.MotionParams_CountsPerInchX_get, _kmotion.MotionParams_CountsPerInchX_set)
    __swig_setmethods__["CountsPerInchY"] = _kmotion.MotionParams_CountsPerInchY_set
    __swig_getmethods__["CountsPerInchY"] = _kmotion.MotionParams_CountsPerInchY_get
    if _newclass:
        CountsPerInchY = _swig_property(_kmotion.MotionParams_CountsPerInchY_get, _kmotion.MotionParams_CountsPerInchY_set)
    __swig_setmethods__["CountsPerInchZ"] = _kmotion.MotionParams_CountsPerInchZ_set
    __swig_getmethods__["CountsPerInchZ"] = _kmotion.MotionParams_CountsPerInchZ_get
    if _newclass:
        CountsPerInchZ = _swig_property(_kmotion.MotionParams_CountsPerInchZ_get, _kmotion.MotionParams_CountsPerInchZ_set)
    __swig_setmethods__["CountsPerInchA"] = _kmotion.MotionParams_CountsPerInchA_set
    __swig_getmethods__["CountsPerInchA"] = _kmotion.MotionParams_CountsPerInchA_get
    if _newclass:
        CountsPerInchA = _swig_property(_kmotion.MotionParams_CountsPerInchA_get, _kmotion.MotionParams_CountsPerInchA_set)
    __swig_setmethods__["CountsPerInchB"] = _kmotion.MotionParams_CountsPerInchB_set
    __swig_getmethods__["CountsPerInchB"] = _kmotion.MotionParams_CountsPerInchB_get
    if _newclass:
        CountsPerInchB = _swig_property(_kmotion.MotionParams_CountsPerInchB_get, _kmotion.MotionParams_CountsPerInchB_set)
    __swig_setmethods__["CountsPerInchC"] = _kmotion.MotionParams_CountsPerInchC_set
    __swig_getmethods__["CountsPerInchC"] = _kmotion.MotionParams_CountsPerInchC_get
    if _newclass:
        CountsPerInchC = _swig_property(_kmotion.MotionParams_CountsPerInchC_get, _kmotion.MotionParams_CountsPerInchC_set)
    __swig_setmethods__["MaxLinearLength"] = _kmotion.MotionParams_MaxLinearLength_set
    __swig_getmethods__["MaxLinearLength"] = _kmotion.MotionParams_MaxLinearLength_get
    if _newclass:
        MaxLinearLength = _swig_property(_kmotion.MotionParams_MaxLinearLength_get, _kmotion.MotionParams_MaxLinearLength_set)
    __swig_setmethods__["ArcsToSegs"] = _kmotion.MotionParams_ArcsToSegs_set
    __swig_getmethods__["ArcsToSegs"] = _kmotion.MotionParams_ArcsToSegs_get
    if _newclass:
        ArcsToSegs = _swig_property(_kmotion.MotionParams_ArcsToSegs_get, _kmotion.MotionParams_ArcsToSegs_set)
    __swig_setmethods__["DegreesA"] = _kmotion.MotionParams_DegreesA_set
    __swig_getmethods__["DegreesA"] = _kmotion.MotionParams_DegreesA_get
    if _newclass:
        DegreesA = _swig_property(_kmotion.MotionParams_DegreesA_get, _kmotion.MotionParams_DegreesA_set)
    __swig_setmethods__["DegreesB"] = _kmotion.MotionParams_DegreesB_set
    __swig_getmethods__["DegreesB"] = _kmotion.MotionParams_DegreesB_get
    if _newclass:
        DegreesB = _swig_property(_kmotion.MotionParams_DegreesB_get, _kmotion.MotionParams_DegreesB_set)
    __swig_setmethods__["DegreesC"] = _kmotion.MotionParams_DegreesC_set
    __swig_getmethods__["DegreesC"] = _kmotion.MotionParams_DegreesC_get
    if _newclass:
        DegreesC = _swig_property(_kmotion.MotionParams_DegreesC_get, _kmotion.MotionParams_DegreesC_set)
    __swig_setmethods__["UseOnlyLinearSegments"] = _kmotion.MotionParams_UseOnlyLinearSegments_set
    __swig_getmethods__["UseOnlyLinearSegments"] = _kmotion.MotionParams_UseOnlyLinearSegments_get
    if _newclass:
        UseOnlyLinearSegments = _swig_property(_kmotion.MotionParams_UseOnlyLinearSegments_get, _kmotion.MotionParams_UseOnlyLinearSegments_set)
    __swig_setmethods__["DoRapidsAsFeeds"] = _kmotion.MotionParams_DoRapidsAsFeeds_set
    __swig_getmethods__["DoRapidsAsFeeds"] = _kmotion.MotionParams_DoRapidsAsFeeds_get
    if _newclass:
        DoRapidsAsFeeds = _swig_property(_kmotion.MotionParams_DoRapidsAsFeeds_get, _kmotion.MotionParams_DoRapidsAsFeeds_set)
    __swig_setmethods__["MaxRapidFRO"] = _kmotion.MotionParams_MaxRapidFRO_set
    __swig_getmethods__["MaxRapidFRO"] = _kmotion.MotionParams_MaxRapidFRO_get
    if _newclass:
        MaxRapidFRO = _swig_property(_kmotion.MotionParams_MaxRapidFRO_get, _kmotion.MotionParams_MaxRapidFRO_set)

    def __init__(self):
        this = _kmotion.new_MotionParams()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_MotionParams
    __del__ = lambda self: None
MotionParams_swigregister = _kmotion.MotionParams_swigregister
MotionParams_swigregister(MotionParams)


_kmotion.MAX_SPECIAL_CMDS_swigconstant(_kmotion)
MAX_SPECIAL_CMDS = _kmotion.MAX_SPECIAL_CMDS

_kmotion.MAX_ACTUATORS_swigconstant(_kmotion)
MAX_ACTUATORS = _kmotion.MAX_ACTUATORS
class Kinematics(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Kinematics, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Kinematics, name)
    __repr__ = _swig_repr

    def Solve(self, A, N):
        return _kmotion.Kinematics_Solve(self, A, N)

    def MaxAccelInDirection(self, dx, dy, dz, da, db, dc, accel):
        return _kmotion.Kinematics_MaxAccelInDirection(self, dx, dy, dz, da, db, dc, accel)

    def MaxRateInDirection(self, dx, dy, dz, da, db, dc, rate):
        return _kmotion.Kinematics_MaxRateInDirection(self, dx, dy, dz, da, db, dc, rate)

    def MaxRapidRateInDirection(self, dx, dy, dz, da, db, dc, rate):
        return _kmotion.Kinematics_MaxRapidRateInDirection(self, dx, dy, dz, da, db, dc, rate)

    def MaxRapidJerkInDirection(self, dx, dy, dz, da, db, dc, jerk):
        return _kmotion.Kinematics_MaxRapidJerkInDirection(self, dx, dy, dz, da, db, dc, jerk)

    def MaxRapidAccelInDirection(self, dx, dy, dz, da, db, dc, accel):
        return _kmotion.Kinematics_MaxRapidAccelInDirection(self, dx, dy, dz, da, db, dc, accel)

    def TransformCADtoActuators(self, x, y, z, a, b, c, Acts):
        return _kmotion.Kinematics_TransformCADtoActuators(self, x, y, z, a, b, c, Acts)

    def TransformActuatorstoCAD(self, Acts, x, y, z, a, b, c):
        return _kmotion.Kinematics_TransformActuatorstoCAD(self, Acts, x, y, z, a, b, c)

    def InvertTransformCADtoActuators(self, Acts, xr, yr, zr, ar, br, cr):
        return _kmotion.Kinematics_InvertTransformCADtoActuators(self, Acts, xr, yr, zr, ar, br, cr)

    def IntersectionTwoCircles(self, c0, r0, c1, r1, q):
        return _kmotion.Kinematics_IntersectionTwoCircles(self, c0, r0, c1, r1, q)

    def ReadGeoTable(self, name):
        return _kmotion.Kinematics_ReadGeoTable(self, name)

    def GeoCorrect(self, x, y, z, cx, cy, cz):
        return _kmotion.Kinematics_GeoCorrect(self, x, y, z, cx, cy, cz)

    def __init__(self):
        this = _kmotion.new_Kinematics()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_Kinematics
    __del__ = lambda self: None
    __swig_setmethods__["m_MotionParams"] = _kmotion.Kinematics_m_MotionParams_set
    __swig_getmethods__["m_MotionParams"] = _kmotion.Kinematics_m_MotionParams_get
    if _newclass:
        m_MotionParams = _swig_property(_kmotion.Kinematics_m_MotionParams_get, _kmotion.Kinematics_m_MotionParams_set)
    __swig_setmethods__["GeoTableValid"] = _kmotion.Kinematics_GeoTableValid_set
    __swig_getmethods__["GeoTableValid"] = _kmotion.Kinematics_GeoTableValid_get
    if _newclass:
        GeoTableValid = _swig_property(_kmotion.Kinematics_GeoTableValid_get, _kmotion.Kinematics_GeoTableValid_set)
    __swig_setmethods__["GeoTable"] = _kmotion.Kinematics_GeoTable_set
    __swig_getmethods__["GeoTable"] = _kmotion.Kinematics_GeoTable_get
    if _newclass:
        GeoTable = _swig_property(_kmotion.Kinematics_GeoTable_get, _kmotion.Kinematics_GeoTable_set)
    __swig_setmethods__["NRows"] = _kmotion.Kinematics_NRows_set
    __swig_getmethods__["NRows"] = _kmotion.Kinematics_NRows_get
    if _newclass:
        NRows = _swig_property(_kmotion.Kinematics_NRows_get, _kmotion.Kinematics_NRows_set)
    __swig_setmethods__["NCols"] = _kmotion.Kinematics_NCols_set
    __swig_getmethods__["NCols"] = _kmotion.Kinematics_NCols_get
    if _newclass:
        NCols = _swig_property(_kmotion.Kinematics_NCols_get, _kmotion.Kinematics_NCols_set)
    __swig_setmethods__["GeoSpacingX"] = _kmotion.Kinematics_GeoSpacingX_set
    __swig_getmethods__["GeoSpacingX"] = _kmotion.Kinematics_GeoSpacingX_get
    if _newclass:
        GeoSpacingX = _swig_property(_kmotion.Kinematics_GeoSpacingX_get, _kmotion.Kinematics_GeoSpacingX_set)
    __swig_setmethods__["GeoSpacingY"] = _kmotion.Kinematics_GeoSpacingY_set
    __swig_getmethods__["GeoSpacingY"] = _kmotion.Kinematics_GeoSpacingY_get
    if _newclass:
        GeoSpacingY = _swig_property(_kmotion.Kinematics_GeoSpacingY_get, _kmotion.Kinematics_GeoSpacingY_set)
    __swig_setmethods__["GeoOffsetX"] = _kmotion.Kinematics_GeoOffsetX_set
    __swig_getmethods__["GeoOffsetX"] = _kmotion.Kinematics_GeoOffsetX_get
    if _newclass:
        GeoOffsetX = _swig_property(_kmotion.Kinematics_GeoOffsetX_get, _kmotion.Kinematics_GeoOffsetX_set)
    __swig_setmethods__["GeoOffsetY"] = _kmotion.Kinematics_GeoOffsetY_set
    __swig_getmethods__["GeoOffsetY"] = _kmotion.Kinematics_GeoOffsetY_get
    if _newclass:
        GeoOffsetY = _swig_property(_kmotion.Kinematics_GeoOffsetY_get, _kmotion.Kinematics_GeoOffsetY_set)
Kinematics_swigregister = _kmotion.Kinematics_swigregister
Kinematics_swigregister(Kinematics)


_kmotion.STOPPED_NONE_swigconstant(_kmotion)
STOPPED_NONE = _kmotion.STOPPED_NONE

_kmotion.STOPPED_INDEP_swigconstant(_kmotion)
STOPPED_INDEP = _kmotion.STOPPED_INDEP

_kmotion.STOPPED_COORD_swigconstant(_kmotion)
STOPPED_COORD = _kmotion.STOPPED_COORD

_kmotion.STOPPED_COORD_FINISHED_swigconstant(_kmotion)
STOPPED_COORD_FINISHED = _kmotion.STOPPED_COORD_FINISHED
class CoordMotion(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CoordMotion, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CoordMotion, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Kinematics"] = _kmotion.CoordMotion_Kinematics_set
    __swig_getmethods__["Kinematics"] = _kmotion.CoordMotion_Kinematics_get
    if _newclass:
        Kinematics = _swig_property(_kmotion.CoordMotion_Kinematics_get, _kmotion.CoordMotion_Kinematics_set)

    def DownloadInit(self):
        return _kmotion.CoordMotion_DownloadInit(self)

    def CheckMotionHalt(self, Coord):
        return _kmotion.CoordMotion_CheckMotionHalt(self, Coord)

    def ExecutionStop(self):
        return _kmotion.CoordMotion_ExecutionStop(self)

    def GetFeedRateOverride(self):
        return _kmotion.CoordMotion_GetFeedRateOverride(self)

    def GetFeedRateRapidOverride(self):
        return _kmotion.CoordMotion_GetFeedRateRapidOverride(self)

    def GetSpindleRateOverride(self):
        return _kmotion.CoordMotion_GetSpindleRateOverride(self)

    def SetFeedRateOverride(self, v):
        return _kmotion.CoordMotion_SetFeedRateOverride(self, v)

    def SetFeedRateRapidOverride(self, v):
        return _kmotion.CoordMotion_SetFeedRateRapidOverride(self, v)

    def SetHardwareFRORange(self, v):
        return _kmotion.CoordMotion_SetHardwareFRORange(self, v)

    def GetHardwareFRORange(self):
        return _kmotion.CoordMotion_GetHardwareFRORange(self)

    def SetSpindleRateOverride(self, v):
        return _kmotion.CoordMotion_SetSpindleRateOverride(self, v)

    def GetDestination(self, axis, d):
        return _kmotion.CoordMotion_GetDestination(self, axis, d)

    def GetPosition(self, axis, d):
        return _kmotion.CoordMotion_GetPosition(self, axis, d)

    def GetAxisDone(self, axis, r):
        return _kmotion.CoordMotion_GetAxisDone(self, axis, r)

    def __init__(self, KMotionDLL):
        this = _kmotion.new_CoordMotion(KMotionDLL)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_CoordMotion
    __del__ = lambda self: None

    def SetAbort(self):
        return _kmotion.CoordMotion_SetAbort(self)

    def ClearAbort(self):
        return _kmotion.CoordMotion_ClearAbort(self)

    def GetAbort(self):
        return _kmotion.CoordMotion_GetAbort(self)

    def SetHalt(self):
        return _kmotion.CoordMotion_SetHalt(self)

    def ClearHalt(self):
        return _kmotion.CoordMotion_ClearHalt(self)

    def GetHalt(self):
        return _kmotion.CoordMotion_GetHalt(self)

    def FlushSegments(self):
        return _kmotion.CoordMotion_FlushSegments(self)

    def WaitForSegmentsFinished(self, NoErrorOnDisable=False):
        return _kmotion.CoordMotion_WaitForSegmentsFinished(self, NoErrorOnDisable)

    def WaitForMoveXYZABCFinished(self):
        return _kmotion.CoordMotion_WaitForMoveXYZABCFinished(self)

    def DoKMotionCmd(self, s, FlushBeforeUnbufferedOperation):
        return _kmotion.CoordMotion_DoKMotionCmd(self, s, FlushBeforeUnbufferedOperation)

    def DoKMotionBufCmd(self, s, sequence_number=-1):
        return _kmotion.CoordMotion_DoKMotionBufCmd(self, s, sequence_number)

    def GetMotionParams(self):
        return _kmotion.CoordMotion_GetMotionParams(self)

    def MeasurePointAppendToFile(self, name):
        return _kmotion.CoordMotion_MeasurePointAppendToFile(self, name)

    def StraightTraverse(self, x, y, z, a, b, c, NoCallback=False, sequence_number=-1, ID=0):
        return _kmotion.CoordMotion_StraightTraverse(self, x, y, z, a, b, c, NoCallback, sequence_number, ID)

    def ArcFeed(self, DesiredFeedRate_in_per_sec, plane, first_end, second_end, first_axis, second_axis, rotation, axis_end_point, a, b, c, sequence_number, ID):
        return _kmotion.CoordMotion_ArcFeed(self, DesiredFeedRate_in_per_sec, plane, first_end, second_end, first_axis, second_axis, rotation, axis_end_point, a, b, c, sequence_number, ID)

    def ArcFeedAccel(self, DesiredFeedRate_in_per_sec, DesiredAccel, plane, first_end, second_end, first_axis, second_axis, rotation, axis_end_point, a, b, c, sequence_number, ID):
        return _kmotion.CoordMotion_ArcFeedAccel(self, DesiredFeedRate_in_per_sec, DesiredAccel, plane, first_end, second_end, first_axis, second_axis, rotation, axis_end_point, a, b, c, sequence_number, ID)

    def StraightFeed(self, DesiredFeedRate_in_per_sec, x, y, z, a, b, c, sequence_number, ID):
        return _kmotion.CoordMotion_StraightFeed(self, DesiredFeedRate_in_per_sec, x, y, z, a, b, c, sequence_number, ID)

    def StraightFeedAccel(self, DesiredFeedRate_in_per_sec, DesiredAccel, x, y, z, a, b, c, sequence_number, ID):
        return _kmotion.CoordMotion_StraightFeedAccel(self, DesiredFeedRate_in_per_sec, DesiredAccel, x, y, z, a, b, c, sequence_number, ID)

    def StraightFeedAccelRapid(self, DesiredFeedRate_in_per_sec, DesiredAccel, RapidMode, NoCallback, x, y, z, a, b, c, sequence_number, ID):
        return _kmotion.CoordMotion_StraightFeedAccelRapid(self, DesiredFeedRate_in_per_sec, DesiredAccel, RapidMode, NoCallback, x, y, z, a, b, c, sequence_number, ID)

    def Dwell(self, seconds, sequence_number=0):
        return _kmotion.CoordMotion_Dwell(self, seconds, sequence_number)

    def ReadCurAbsPosition(self, x, y, z, a, b, c, snap=False):
        return _kmotion.CoordMotion_ReadCurAbsPosition(self, x, y, z, a, b, c, snap)

    def SetStraightTraverseCallback(self, *args):
        return _kmotion.CoordMotion_SetStraightTraverseCallback(self, *args)

    def SetStraightFeedCallback(self, *args):
        return _kmotion.CoordMotion_SetStraightFeedCallback(self, *args)

    def SetArcFeedCallback(self, *args):
        return _kmotion.CoordMotion_SetArcFeedCallback(self, *args)

    def DownloadDoneSegments(self):
        return _kmotion.CoordMotion_DownloadDoneSegments(self)

    def OutputSegment(self, iseg):
        return _kmotion.CoordMotion_OutputSegment(self, iseg)

    def DoSpecialCommand(self, iseg):
        return _kmotion.CoordMotion_DoSpecialCommand(self, iseg)

    def DoSpecialInitialCommands(self):
        return _kmotion.CoordMotion_DoSpecialInitialCommands(self)

    def DoSegmentCallbacks(self, i0, n):
        return _kmotion.CoordMotion_DoSegmentCallbacks(self, i0, n)

    def DoSegmentCallbacksRapid(self, i0, i1):
        return _kmotion.CoordMotion_DoSegmentCallbacksRapid(self, i0, i1)

    def DoRateAdjustments(self, i0, i1):
        return _kmotion.CoordMotion_DoRateAdjustments(self, i0, i1)

    def DoRateAdjustmentsArc(self, i, radius, theta0, dtheta, dcircle):
        return _kmotion.CoordMotion_DoRateAdjustmentsArc(self, i, radius, theta0, dtheta, dcircle)

    def CheckSoftLimits(self, x, y, z, a, b, c, errmsg):
        return _kmotion.CoordMotion_CheckSoftLimits(self, x, y, z, a, b, c, errmsg)

    def CheckSoftLimitsArc(self, XC, YC, Z1, SoftLimitPosX, SoftLimitNegX, SoftLimitPosY, SoftLimitNegY, SoftLimitPosZ, SoftLimitNegZ, a, b, c, DirIsCCW, radius, theta0, dtheta, x_axis, y_axis, z_axis, XSTR, YSTR, ZSTR, errmsg):
        return _kmotion.CoordMotion_CheckSoftLimitsArc(self, XC, YC, Z1, SoftLimitPosX, SoftLimitNegX, SoftLimitPosY, SoftLimitNegY, SoftLimitPosZ, SoftLimitNegZ, a, b, c, DirIsCCW, radius, theta0, dtheta, x_axis, y_axis, z_axis, XSTR, YSTR, ZSTR, errmsg)
    __swig_setmethods__["KMotionDLL"] = _kmotion.CoordMotion_KMotionDLL_set
    __swig_getmethods__["KMotionDLL"] = _kmotion.CoordMotion_KMotionDLL_get
    if _newclass:
        KMotionDLL = _swig_property(_kmotion.CoordMotion_KMotionDLL_get, _kmotion.CoordMotion_KMotionDLL_set)
    __swig_setmethods__["m_TotalDownloadedTime"] = _kmotion.CoordMotion_m_TotalDownloadedTime_set
    __swig_getmethods__["m_TotalDownloadedTime"] = _kmotion.CoordMotion_m_TotalDownloadedTime_get
    if _newclass:
        m_TotalDownloadedTime = _swig_property(_kmotion.CoordMotion_m_TotalDownloadedTime_get, _kmotion.CoordMotion_m_TotalDownloadedTime_set)
    __swig_setmethods__["m_nsegs_downloaded"] = _kmotion.CoordMotion_m_nsegs_downloaded_set
    __swig_getmethods__["m_nsegs_downloaded"] = _kmotion.CoordMotion_m_nsegs_downloaded_get
    if _newclass:
        m_nsegs_downloaded = _swig_property(_kmotion.CoordMotion_m_nsegs_downloaded_get, _kmotion.CoordMotion_m_nsegs_downloaded_set)
    __swig_setmethods__["m_TimeAlreadyExecuted"] = _kmotion.CoordMotion_m_TimeAlreadyExecuted_set
    __swig_getmethods__["m_TimeAlreadyExecuted"] = _kmotion.CoordMotion_m_TimeAlreadyExecuted_get
    if _newclass:
        m_TimeAlreadyExecuted = _swig_property(_kmotion.CoordMotion_m_TimeAlreadyExecuted_get, _kmotion.CoordMotion_m_TimeAlreadyExecuted_set)
    __swig_setmethods__["m_realtime_Sequence_number"] = _kmotion.CoordMotion_m_realtime_Sequence_number_set
    __swig_getmethods__["m_realtime_Sequence_number"] = _kmotion.CoordMotion_m_realtime_Sequence_number_get
    if _newclass:
        m_realtime_Sequence_number = _swig_property(_kmotion.CoordMotion_m_realtime_Sequence_number_get, _kmotion.CoordMotion_m_realtime_Sequence_number_set)
    __swig_setmethods__["m_realtime_Sequence_number_valid"] = _kmotion.CoordMotion_m_realtime_Sequence_number_valid_set
    __swig_getmethods__["m_realtime_Sequence_number_valid"] = _kmotion.CoordMotion_m_realtime_Sequence_number_valid_get
    if _newclass:
        m_realtime_Sequence_number_valid = _swig_property(_kmotion.CoordMotion_m_realtime_Sequence_number_valid_get, _kmotion.CoordMotion_m_realtime_Sequence_number_valid_set)
    __swig_setmethods__["MainPath"] = _kmotion.CoordMotion_MainPath_set
    __swig_getmethods__["MainPath"] = _kmotion.CoordMotion_MainPath_get
    if _newclass:
        MainPath = _swig_property(_kmotion.CoordMotion_MainPath_get, _kmotion.CoordMotion_MainPath_set)
    __swig_setmethods__["MainPathRoot"] = _kmotion.CoordMotion_MainPathRoot_set
    __swig_getmethods__["MainPathRoot"] = _kmotion.CoordMotion_MainPathRoot_get
    if _newclass:
        MainPathRoot = _swig_property(_kmotion.CoordMotion_MainPathRoot_get, _kmotion.CoordMotion_MainPathRoot_set)
    __swig_setmethods__["m_board_type"] = _kmotion.CoordMotion_m_board_type_set
    __swig_getmethods__["m_board_type"] = _kmotion.CoordMotion_m_board_type_get
    if _newclass:
        m_board_type = _swig_property(_kmotion.CoordMotion_m_board_type_get, _kmotion.CoordMotion_m_board_type_set)
    __swig_setmethods__["m_Simulate"] = _kmotion.CoordMotion_m_Simulate_set
    __swig_getmethods__["m_Simulate"] = _kmotion.CoordMotion_m_Simulate_get
    if _newclass:
        m_Simulate = _swig_property(_kmotion.CoordMotion_m_Simulate_get, _kmotion.CoordMotion_m_Simulate_set)
    __swig_setmethods__["m_ThreadingMode"] = _kmotion.CoordMotion_m_ThreadingMode_set
    __swig_getmethods__["m_ThreadingMode"] = _kmotion.CoordMotion_m_ThreadingMode_get
    if _newclass:
        m_ThreadingMode = _swig_property(_kmotion.CoordMotion_m_ThreadingMode_get, _kmotion.CoordMotion_m_ThreadingMode_set)
    __swig_setmethods__["m_ThreadingBaseSpeedRPS"] = _kmotion.CoordMotion_m_ThreadingBaseSpeedRPS_set
    __swig_getmethods__["m_ThreadingBaseSpeedRPS"] = _kmotion.CoordMotion_m_ThreadingBaseSpeedRPS_get
    if _newclass:
        m_ThreadingBaseSpeedRPS = _swig_property(_kmotion.CoordMotion_m_ThreadingBaseSpeedRPS_get, _kmotion.CoordMotion_m_ThreadingBaseSpeedRPS_set)
    __swig_setmethods__["m_DisableSoftLimits"] = _kmotion.CoordMotion_m_DisableSoftLimits_set
    __swig_getmethods__["m_DisableSoftLimits"] = _kmotion.CoordMotion_m_DisableSoftLimits_get
    if _newclass:
        m_DisableSoftLimits = _swig_property(_kmotion.CoordMotion_m_DisableSoftLimits_get, _kmotion.CoordMotion_m_DisableSoftLimits_set)
    __swig_setmethods__["m_AxisDisabled"] = _kmotion.CoordMotion_m_AxisDisabled_set
    __swig_getmethods__["m_AxisDisabled"] = _kmotion.CoordMotion_m_AxisDisabled_get
    if _newclass:
        m_AxisDisabled = _swig_property(_kmotion.CoordMotion_m_AxisDisabled_get, _kmotion.CoordMotion_m_AxisDisabled_set)
    __swig_setmethods__["m_Stopping"] = _kmotion.CoordMotion_m_Stopping_set
    __swig_getmethods__["m_Stopping"] = _kmotion.CoordMotion_m_Stopping_get
    if _newclass:
        m_Stopping = _swig_property(_kmotion.CoordMotion_m_Stopping_get, _kmotion.CoordMotion_m_Stopping_set)
    __swig_setmethods__["m_PreviouslyStopped"] = _kmotion.CoordMotion_m_PreviouslyStopped_set
    __swig_getmethods__["m_PreviouslyStopped"] = _kmotion.CoordMotion_m_PreviouslyStopped_get
    if _newclass:
        m_PreviouslyStopped = _swig_property(_kmotion.CoordMotion_m_PreviouslyStopped_get, _kmotion.CoordMotion_m_PreviouslyStopped_set)
    __swig_setmethods__["m_PreviouslyStoppedType"] = _kmotion.CoordMotion_m_PreviouslyStoppedType_set
    __swig_getmethods__["m_PreviouslyStoppedType"] = _kmotion.CoordMotion_m_PreviouslyStoppedType_get
    if _newclass:
        m_PreviouslyStoppedType = _swig_property(_kmotion.CoordMotion_m_PreviouslyStoppedType_get, _kmotion.CoordMotion_m_PreviouslyStoppedType_set)
    __swig_setmethods__["m_PreviouslyStoppedID"] = _kmotion.CoordMotion_m_PreviouslyStoppedID_set
    __swig_getmethods__["m_PreviouslyStoppedID"] = _kmotion.CoordMotion_m_PreviouslyStoppedID_get
    if _newclass:
        m_PreviouslyStoppedID = _swig_property(_kmotion.CoordMotion_m_PreviouslyStoppedID_get, _kmotion.CoordMotion_m_PreviouslyStoppedID_set)
    __swig_setmethods__["m_PreviouslyStoppedSeqNo"] = _kmotion.CoordMotion_m_PreviouslyStoppedSeqNo_set
    __swig_getmethods__["m_PreviouslyStoppedSeqNo"] = _kmotion.CoordMotion_m_PreviouslyStoppedSeqNo_get
    if _newclass:
        m_PreviouslyStoppedSeqNo = _swig_property(_kmotion.CoordMotion_m_PreviouslyStoppedSeqNo_get, _kmotion.CoordMotion_m_PreviouslyStoppedSeqNo_set)
    __swig_setmethods__["m_Stoppedx"] = _kmotion.CoordMotion_m_Stoppedx_set
    __swig_getmethods__["m_Stoppedx"] = _kmotion.CoordMotion_m_Stoppedx_get
    if _newclass:
        m_Stoppedx = _swig_property(_kmotion.CoordMotion_m_Stoppedx_get, _kmotion.CoordMotion_m_Stoppedx_set)
    __swig_setmethods__["m_Stoppedy"] = _kmotion.CoordMotion_m_Stoppedy_set
    __swig_getmethods__["m_Stoppedy"] = _kmotion.CoordMotion_m_Stoppedy_get
    if _newclass:
        m_Stoppedy = _swig_property(_kmotion.CoordMotion_m_Stoppedy_get, _kmotion.CoordMotion_m_Stoppedy_set)
    __swig_setmethods__["m_Stoppedz"] = _kmotion.CoordMotion_m_Stoppedz_set
    __swig_getmethods__["m_Stoppedz"] = _kmotion.CoordMotion_m_Stoppedz_get
    if _newclass:
        m_Stoppedz = _swig_property(_kmotion.CoordMotion_m_Stoppedz_get, _kmotion.CoordMotion_m_Stoppedz_set)
    __swig_setmethods__["m_Stoppeda"] = _kmotion.CoordMotion_m_Stoppeda_set
    __swig_getmethods__["m_Stoppeda"] = _kmotion.CoordMotion_m_Stoppeda_get
    if _newclass:
        m_Stoppeda = _swig_property(_kmotion.CoordMotion_m_Stoppeda_get, _kmotion.CoordMotion_m_Stoppeda_set)
    __swig_setmethods__["m_Stoppedb"] = _kmotion.CoordMotion_m_Stoppedb_set
    __swig_getmethods__["m_Stoppedb"] = _kmotion.CoordMotion_m_Stoppedb_get
    if _newclass:
        m_Stoppedb = _swig_property(_kmotion.CoordMotion_m_Stoppedb_get, _kmotion.CoordMotion_m_Stoppedb_set)
    __swig_setmethods__["m_Stoppedc"] = _kmotion.CoordMotion_m_Stoppedc_set
    __swig_getmethods__["m_Stoppedc"] = _kmotion.CoordMotion_m_Stoppedc_get
    if _newclass:
        m_Stoppedc = _swig_property(_kmotion.CoordMotion_m_Stoppedc_get, _kmotion.CoordMotion_m_Stoppedc_set)
    __swig_setmethods__["m_StoppedMidx"] = _kmotion.CoordMotion_m_StoppedMidx_set
    __swig_getmethods__["m_StoppedMidx"] = _kmotion.CoordMotion_m_StoppedMidx_get
    if _newclass:
        m_StoppedMidx = _swig_property(_kmotion.CoordMotion_m_StoppedMidx_get, _kmotion.CoordMotion_m_StoppedMidx_set)
    __swig_setmethods__["m_StoppedMidy"] = _kmotion.CoordMotion_m_StoppedMidy_set
    __swig_getmethods__["m_StoppedMidy"] = _kmotion.CoordMotion_m_StoppedMidy_get
    if _newclass:
        m_StoppedMidy = _swig_property(_kmotion.CoordMotion_m_StoppedMidy_get, _kmotion.CoordMotion_m_StoppedMidy_set)
    __swig_setmethods__["m_StoppedMidz"] = _kmotion.CoordMotion_m_StoppedMidz_set
    __swig_getmethods__["m_StoppedMidz"] = _kmotion.CoordMotion_m_StoppedMidz_get
    if _newclass:
        m_StoppedMidz = _swig_property(_kmotion.CoordMotion_m_StoppedMidz_get, _kmotion.CoordMotion_m_StoppedMidz_set)
    __swig_setmethods__["m_StoppedMida"] = _kmotion.CoordMotion_m_StoppedMida_set
    __swig_getmethods__["m_StoppedMida"] = _kmotion.CoordMotion_m_StoppedMida_get
    if _newclass:
        m_StoppedMida = _swig_property(_kmotion.CoordMotion_m_StoppedMida_get, _kmotion.CoordMotion_m_StoppedMida_set)
    __swig_setmethods__["m_StoppedMidb"] = _kmotion.CoordMotion_m_StoppedMidb_set
    __swig_getmethods__["m_StoppedMidb"] = _kmotion.CoordMotion_m_StoppedMidb_get
    if _newclass:
        m_StoppedMidb = _swig_property(_kmotion.CoordMotion_m_StoppedMidb_get, _kmotion.CoordMotion_m_StoppedMidb_set)
    __swig_setmethods__["m_StoppedMidc"] = _kmotion.CoordMotion_m_StoppedMidc_set
    __swig_getmethods__["m_StoppedMidc"] = _kmotion.CoordMotion_m_StoppedMidc_get
    if _newclass:
        m_StoppedMidc = _swig_property(_kmotion.CoordMotion_m_StoppedMidc_get, _kmotion.CoordMotion_m_StoppedMidc_set)
    __swig_setmethods__["m_StoppedMachinex"] = _kmotion.CoordMotion_m_StoppedMachinex_set
    __swig_getmethods__["m_StoppedMachinex"] = _kmotion.CoordMotion_m_StoppedMachinex_get
    if _newclass:
        m_StoppedMachinex = _swig_property(_kmotion.CoordMotion_m_StoppedMachinex_get, _kmotion.CoordMotion_m_StoppedMachinex_set)
    __swig_setmethods__["m_StoppedMachiney"] = _kmotion.CoordMotion_m_StoppedMachiney_set
    __swig_getmethods__["m_StoppedMachiney"] = _kmotion.CoordMotion_m_StoppedMachiney_get
    if _newclass:
        m_StoppedMachiney = _swig_property(_kmotion.CoordMotion_m_StoppedMachiney_get, _kmotion.CoordMotion_m_StoppedMachiney_set)
    __swig_setmethods__["m_StoppedMachinez"] = _kmotion.CoordMotion_m_StoppedMachinez_set
    __swig_getmethods__["m_StoppedMachinez"] = _kmotion.CoordMotion_m_StoppedMachinez_get
    if _newclass:
        m_StoppedMachinez = _swig_property(_kmotion.CoordMotion_m_StoppedMachinez_get, _kmotion.CoordMotion_m_StoppedMachinez_set)
    __swig_setmethods__["m_StoppedMachinea"] = _kmotion.CoordMotion_m_StoppedMachinea_set
    __swig_getmethods__["m_StoppedMachinea"] = _kmotion.CoordMotion_m_StoppedMachinea_get
    if _newclass:
        m_StoppedMachinea = _swig_property(_kmotion.CoordMotion_m_StoppedMachinea_get, _kmotion.CoordMotion_m_StoppedMachinea_set)
    __swig_setmethods__["m_StoppedMachineb"] = _kmotion.CoordMotion_m_StoppedMachineb_set
    __swig_getmethods__["m_StoppedMachineb"] = _kmotion.CoordMotion_m_StoppedMachineb_get
    if _newclass:
        m_StoppedMachineb = _swig_property(_kmotion.CoordMotion_m_StoppedMachineb_get, _kmotion.CoordMotion_m_StoppedMachineb_set)
    __swig_setmethods__["m_StoppedMachinec"] = _kmotion.CoordMotion_m_StoppedMachinec_set
    __swig_getmethods__["m_StoppedMachinec"] = _kmotion.CoordMotion_m_StoppedMachinec_get
    if _newclass:
        m_StoppedMachinec = _swig_property(_kmotion.CoordMotion_m_StoppedMachinec_get, _kmotion.CoordMotion_m_StoppedMachinec_set)

    def SetAxisDefinitions(self, x, y, z, a, b, c):
        return _kmotion.CoordMotion_SetAxisDefinitions(self, x, y, z, a, b, c)

    def GetAxisDefinitions(self, x, y, z, a, b, c):
        return _kmotion.CoordMotion_GetAxisDefinitions(self, x, y, z, a, b, c)
    __swig_setmethods__["m_DefineCS_valid"] = _kmotion.CoordMotion_m_DefineCS_valid_set
    __swig_getmethods__["m_DefineCS_valid"] = _kmotion.CoordMotion_m_DefineCS_valid_get
    if _newclass:
        m_DefineCS_valid = _swig_property(_kmotion.CoordMotion_m_DefineCS_valid_get, _kmotion.CoordMotion_m_DefineCS_valid_set)
    __swig_setmethods__["x_axis"] = _kmotion.CoordMotion_x_axis_set
    __swig_getmethods__["x_axis"] = _kmotion.CoordMotion_x_axis_get
    if _newclass:
        x_axis = _swig_property(_kmotion.CoordMotion_x_axis_get, _kmotion.CoordMotion_x_axis_set)
    __swig_setmethods__["y_axis"] = _kmotion.CoordMotion_y_axis_set
    __swig_getmethods__["y_axis"] = _kmotion.CoordMotion_y_axis_get
    if _newclass:
        y_axis = _swig_property(_kmotion.CoordMotion_y_axis_get, _kmotion.CoordMotion_y_axis_set)
    __swig_setmethods__["z_axis"] = _kmotion.CoordMotion_z_axis_set
    __swig_getmethods__["z_axis"] = _kmotion.CoordMotion_z_axis_get
    if _newclass:
        z_axis = _swig_property(_kmotion.CoordMotion_z_axis_get, _kmotion.CoordMotion_z_axis_set)
    __swig_setmethods__["a_axis"] = _kmotion.CoordMotion_a_axis_set
    __swig_getmethods__["a_axis"] = _kmotion.CoordMotion_a_axis_get
    if _newclass:
        a_axis = _swig_property(_kmotion.CoordMotion_a_axis_get, _kmotion.CoordMotion_a_axis_set)
    __swig_setmethods__["b_axis"] = _kmotion.CoordMotion_b_axis_set
    __swig_getmethods__["b_axis"] = _kmotion.CoordMotion_b_axis_get
    if _newclass:
        b_axis = _swig_property(_kmotion.CoordMotion_b_axis_get, _kmotion.CoordMotion_b_axis_set)
    __swig_setmethods__["c_axis"] = _kmotion.CoordMotion_c_axis_set
    __swig_getmethods__["c_axis"] = _kmotion.CoordMotion_c_axis_get
    if _newclass:
        c_axis = _swig_property(_kmotion.CoordMotion_c_axis_get, _kmotion.CoordMotion_c_axis_set)
    __swig_setmethods__["current_x"] = _kmotion.CoordMotion_current_x_set
    __swig_getmethods__["current_x"] = _kmotion.CoordMotion_current_x_get
    if _newclass:
        current_x = _swig_property(_kmotion.CoordMotion_current_x_get, _kmotion.CoordMotion_current_x_set)
    __swig_setmethods__["current_y"] = _kmotion.CoordMotion_current_y_set
    __swig_getmethods__["current_y"] = _kmotion.CoordMotion_current_y_get
    if _newclass:
        current_y = _swig_property(_kmotion.CoordMotion_current_y_get, _kmotion.CoordMotion_current_y_set)
    __swig_setmethods__["current_z"] = _kmotion.CoordMotion_current_z_set
    __swig_getmethods__["current_z"] = _kmotion.CoordMotion_current_z_get
    if _newclass:
        current_z = _swig_property(_kmotion.CoordMotion_current_z_get, _kmotion.CoordMotion_current_z_set)
    __swig_setmethods__["current_a"] = _kmotion.CoordMotion_current_a_set
    __swig_getmethods__["current_a"] = _kmotion.CoordMotion_current_a_get
    if _newclass:
        current_a = _swig_property(_kmotion.CoordMotion_current_a_get, _kmotion.CoordMotion_current_a_set)
    __swig_setmethods__["current_b"] = _kmotion.CoordMotion_current_b_set
    __swig_getmethods__["current_b"] = _kmotion.CoordMotion_current_b_get
    if _newclass:
        current_b = _swig_property(_kmotion.CoordMotion_current_b_get, _kmotion.CoordMotion_current_b_set)
    __swig_setmethods__["current_c"] = _kmotion.CoordMotion_current_c_set
    __swig_getmethods__["current_c"] = _kmotion.CoordMotion_current_c_get
    if _newclass:
        current_c = _swig_property(_kmotion.CoordMotion_current_c_get, _kmotion.CoordMotion_current_c_set)
    __swig_setmethods__["m_StraightTraverseCallback"] = _kmotion.CoordMotion_m_StraightTraverseCallback_set
    __swig_getmethods__["m_StraightTraverseCallback"] = _kmotion.CoordMotion_m_StraightTraverseCallback_get
    if _newclass:
        m_StraightTraverseCallback = _swig_property(_kmotion.CoordMotion_m_StraightTraverseCallback_get, _kmotion.CoordMotion_m_StraightTraverseCallback_set)
    __swig_setmethods__["m_StraightTraverseSixAxisCallback"] = _kmotion.CoordMotion_m_StraightTraverseSixAxisCallback_set
    __swig_getmethods__["m_StraightTraverseSixAxisCallback"] = _kmotion.CoordMotion_m_StraightTraverseSixAxisCallback_get
    if _newclass:
        m_StraightTraverseSixAxisCallback = _swig_property(_kmotion.CoordMotion_m_StraightTraverseSixAxisCallback_get, _kmotion.CoordMotion_m_StraightTraverseSixAxisCallback_set)
    __swig_setmethods__["m_StraightFeedCallback"] = _kmotion.CoordMotion_m_StraightFeedCallback_set
    __swig_getmethods__["m_StraightFeedCallback"] = _kmotion.CoordMotion_m_StraightFeedCallback_get
    if _newclass:
        m_StraightFeedCallback = _swig_property(_kmotion.CoordMotion_m_StraightFeedCallback_get, _kmotion.CoordMotion_m_StraightFeedCallback_set)
    __swig_setmethods__["m_StraightFeedSixAxisCallback"] = _kmotion.CoordMotion_m_StraightFeedSixAxisCallback_set
    __swig_getmethods__["m_StraightFeedSixAxisCallback"] = _kmotion.CoordMotion_m_StraightFeedSixAxisCallback_get
    if _newclass:
        m_StraightFeedSixAxisCallback = _swig_property(_kmotion.CoordMotion_m_StraightFeedSixAxisCallback_get, _kmotion.CoordMotion_m_StraightFeedSixAxisCallback_set)

    def SetTPParams(self):
        return _kmotion.CoordMotion_SetTPParams(self)

    def GetRapidSettings(self):
        return _kmotion.CoordMotion_GetRapidSettings(self)

    def GetRapidSettingsAxis(self, axis, Vel, Accel, Jerk, SoftLimitPos, SoftLimitNeg, CountsPerInch):
        return _kmotion.CoordMotion_GetRapidSettingsAxis(self, axis, Vel, Accel, Jerk, SoftLimitPos, SoftLimitNeg, CountsPerInch)
    __swig_setmethods__["RapidParamsDirty"] = _kmotion.CoordMotion_RapidParamsDirty_set
    __swig_getmethods__["RapidParamsDirty"] = _kmotion.CoordMotion_RapidParamsDirty_get
    if _newclass:
        RapidParamsDirty = _swig_property(_kmotion.CoordMotion_RapidParamsDirty_get, _kmotion.CoordMotion_RapidParamsDirty_set)

    def SetPreviouslyStoppedAtSeg(self, segs_to_check, i):
        return _kmotion.CoordMotion_SetPreviouslyStoppedAtSeg(self, segs_to_check, i)

    def FeedRateDistance(self, dx, dy, dz, da, db, dc, PureAngle):
        return _kmotion.CoordMotion_FeedRateDistance(self, dx, dy, dz, da, db, dc, PureAngle)

    def ConfigSpindle(self, type, axis, UpdateTime, Tau, CountsPerRev):
        return _kmotion.CoordMotion_ConfigSpindle(self, type, axis, UpdateTime, Tau, CountsPerRev)

    def GetSpindleRPS(self, speed):
        return _kmotion.CoordMotion_GetSpindleRPS(self, speed)
CoordMotion_swigregister = _kmotion.CoordMotion_swigregister
CoordMotion_swigregister(CoordMotion)


_kmotion.THETA_SIGMA_swigconstant(_kmotion)
THETA_SIGMA = _kmotion.THETA_SIGMA

_kmotion.M_Action_None_swigconstant(_kmotion)
M_Action_None = _kmotion.M_Action_None

_kmotion.M_Action_Setbit_swigconstant(_kmotion)
M_Action_Setbit = _kmotion.M_Action_Setbit

_kmotion.M_Action_SetTwoBits_swigconstant(_kmotion)
M_Action_SetTwoBits = _kmotion.M_Action_SetTwoBits

_kmotion.M_Action_DAC_swigconstant(_kmotion)
M_Action_DAC = _kmotion.M_Action_DAC

_kmotion.M_Action_Program_swigconstant(_kmotion)
M_Action_Program = _kmotion.M_Action_Program

_kmotion.M_Action_Program_wait_swigconstant(_kmotion)
M_Action_Program_wait = _kmotion.M_Action_Program_wait

_kmotion.M_Action_Program_wait_sync_swigconstant(_kmotion)
M_Action_Program_wait_sync = _kmotion.M_Action_Program_wait_sync

_kmotion.M_Action_Program_PC_swigconstant(_kmotion)
M_Action_Program_PC = _kmotion.M_Action_Program_PC

_kmotion.M_Action_Callback_swigconstant(_kmotion)
M_Action_Callback = _kmotion.M_Action_Callback

_kmotion.M_Action_Waitbit_swigconstant(_kmotion)
M_Action_Waitbit = _kmotion.M_Action_Waitbit

_kmotion.MAX_MCODE_ACTIONS_M1_swigconstant(_kmotion)
MAX_MCODE_ACTIONS_M1 = _kmotion.MAX_MCODE_ACTIONS_M1

_kmotion.MAX_MCODE_ACTIONS_BUTTONS_swigconstant(_kmotion)
MAX_MCODE_ACTIONS_BUTTONS = _kmotion.MAX_MCODE_ACTIONS_BUTTONS

_kmotion.MAX_MCODE_ACTIONS_M100_swigconstant(_kmotion)
MAX_MCODE_ACTIONS_M100 = _kmotion.MAX_MCODE_ACTIONS_M100

_kmotion.MAX_MCODE_ACTIONS_SPECIAL_swigconstant(_kmotion)
MAX_MCODE_ACTIONS_SPECIAL = _kmotion.MAX_MCODE_ACTIONS_SPECIAL

_kmotion.MAX_MCODE_ACTIONS_swigconstant(_kmotion)
MAX_MCODE_ACTIONS = _kmotion.MAX_MCODE_ACTIONS

_kmotion.MAX_MCODE_DOUBLE_PARAMS_swigconstant(_kmotion)
MAX_MCODE_DOUBLE_PARAMS = _kmotion.MAX_MCODE_DOUBLE_PARAMS

_kmotion.MCODE_ACTIONS_M100_OFFSET_swigconstant(_kmotion)
MCODE_ACTIONS_M100_OFFSET = _kmotion.MCODE_ACTIONS_M100_OFFSET

_kmotion.MCODE_ACTIONS_SPECIAL_OFFSET_swigconstant(_kmotion)
MCODE_ACTIONS_SPECIAL_OFFSET = _kmotion.MCODE_ACTIONS_SPECIAL_OFFSET
class MCODE_ACTION(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MCODE_ACTION, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MCODE_ACTION, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Action"] = _kmotion.MCODE_ACTION_Action_set
    __swig_getmethods__["Action"] = _kmotion.MCODE_ACTION_Action_get
    if _newclass:
        Action = _swig_property(_kmotion.MCODE_ACTION_Action_get, _kmotion.MCODE_ACTION_Action_set)
    __swig_setmethods__["dParams"] = _kmotion.MCODE_ACTION_dParams_set
    __swig_getmethods__["dParams"] = _kmotion.MCODE_ACTION_dParams_get
    if _newclass:
        dParams = _swig_property(_kmotion.MCODE_ACTION_dParams_get, _kmotion.MCODE_ACTION_dParams_set)
    __swig_setmethods__["String"] = _kmotion.MCODE_ACTION_String_set
    __swig_getmethods__["String"] = _kmotion.MCODE_ACTION_String_get
    if _newclass:
        String = _swig_property(_kmotion.MCODE_ACTION_String_get, _kmotion.MCODE_ACTION_String_set)

    def __init__(self):
        this = _kmotion.new_MCODE_ACTION()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_MCODE_ACTION
    __del__ = lambda self: None
MCODE_ACTION_swigregister = _kmotion.MCODE_ACTION_swigregister
MCODE_ACTION_swigregister(MCODE_ACTION)

class CGCodeInterpreter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CGCodeInterpreter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CGCodeInterpreter, name)
    __repr__ = _swig_repr

    def ChangeFixtureNumber(self, fixture):
        return _kmotion.CGCodeInterpreter_ChangeFixtureNumber(self, fixture)

    def InchesToUserUnits(self, inches):
        return _kmotion.CGCodeInterpreter_InchesToUserUnits(self, inches)

    def InchesToUserUnitsX(self, inches):
        return _kmotion.CGCodeInterpreter_InchesToUserUnitsX(self, inches)

    def InchesOrDegToUserUnitsA(self, inches):
        return _kmotion.CGCodeInterpreter_InchesOrDegToUserUnitsA(self, inches)

    def InchesOrDegToUserUnitsB(self, inches):
        return _kmotion.CGCodeInterpreter_InchesOrDegToUserUnitsB(self, inches)

    def InchesOrDegToUserUnitsC(self, inches):
        return _kmotion.CGCodeInterpreter_InchesOrDegToUserUnitsC(self, inches)

    def UserUnitsToInches(self, inches):
        return _kmotion.CGCodeInterpreter_UserUnitsToInches(self, inches)

    def UserUnitsToInchesX(self, inches):
        return _kmotion.CGCodeInterpreter_UserUnitsToInchesX(self, inches)

    def UserUnitsToInchesOrDegA(self, inches):
        return _kmotion.CGCodeInterpreter_UserUnitsToInchesOrDegA(self, inches)

    def UserUnitsToInchesOrDegB(self, inches):
        return _kmotion.CGCodeInterpreter_UserUnitsToInchesOrDegB(self, inches)

    def UserUnitsToInchesOrDegC(self, inches):
        return _kmotion.CGCodeInterpreter_UserUnitsToInchesOrDegC(self, inches)

    def ConvertAbsToUserUnitsX(self, x):
        return _kmotion.CGCodeInterpreter_ConvertAbsToUserUnitsX(self, x)

    def ConvertAbsToUserUnitsY(self, y):
        return _kmotion.CGCodeInterpreter_ConvertAbsToUserUnitsY(self, y)

    def ConvertAbsToUserUnitsZ(self, z):
        return _kmotion.CGCodeInterpreter_ConvertAbsToUserUnitsZ(self, z)

    def ConvertAbsToUserUnitsA(self, a):
        return _kmotion.CGCodeInterpreter_ConvertAbsToUserUnitsA(self, a)

    def ConvertAbsToUserUnitsB(self, b):
        return _kmotion.CGCodeInterpreter_ConvertAbsToUserUnitsB(self, b)

    def ConvertAbsToUserUnitsC(self, c):
        return _kmotion.CGCodeInterpreter_ConvertAbsToUserUnitsC(self, c)

    def ConvertAbsoluteToInterpreterCoord(self, x, y, z, a, b, c, gx, gy, gz, ga, gb, gc, psetup=0):
        return _kmotion.CGCodeInterpreter_ConvertAbsoluteToInterpreterCoord(self, x, y, z, a, b, c, gx, gy, gz, ga, gb, gc, psetup)

    def SetFeedRate(self, arg2):
        return _kmotion.CGCodeInterpreter_SetFeedRate(self, arg2)

    def InvokeAction(self, i, FlushBeforeUnbufferedOperation=True):
        return _kmotion.CGCodeInterpreter_InvokeAction(self, i, FlushBeforeUnbufferedOperation)

    def rs274ngc_save_parameters(self):
        return _kmotion.CGCodeInterpreter_rs274ngc_save_parameters(self)

    def DoReverseSearch(self, InFile, CurrentLine):
        return _kmotion.CGCodeInterpreter_DoReverseSearch(self, InFile, CurrentLine)

    def __init__(self, CM):
        this = _kmotion.new_CGCodeInterpreter(CM)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_CGCodeInterpreter
    __del__ = lambda self: None

    def ExecutePC(self, Name):
        return _kmotion.CGCodeInterpreter_ExecutePC(self, Name)

    def GetMotionParams(self):
        return _kmotion.CGCodeInterpreter_GetMotionParams(self)
    __swig_setmethods__["ToolFile"] = _kmotion.CGCodeInterpreter_ToolFile_set
    __swig_getmethods__["ToolFile"] = _kmotion.CGCodeInterpreter_ToolFile_get
    if _newclass:
        ToolFile = _swig_property(_kmotion.CGCodeInterpreter_ToolFile_get, _kmotion.CGCodeInterpreter_ToolFile_set)
    __swig_setmethods__["SetupFile"] = _kmotion.CGCodeInterpreter_SetupFile_set
    __swig_getmethods__["SetupFile"] = _kmotion.CGCodeInterpreter_SetupFile_get
    if _newclass:
        SetupFile = _swig_property(_kmotion.CGCodeInterpreter_SetupFile_get, _kmotion.CGCodeInterpreter_SetupFile_set)
    __swig_setmethods__["GeoFile"] = _kmotion.CGCodeInterpreter_GeoFile_set
    __swig_getmethods__["GeoFile"] = _kmotion.CGCodeInterpreter_GeoFile_get
    if _newclass:
        GeoFile = _swig_property(_kmotion.CGCodeInterpreter_GeoFile_get, _kmotion.CGCodeInterpreter_GeoFile_set)
    __swig_setmethods__["VarsFile"] = _kmotion.CGCodeInterpreter_VarsFile_set
    __swig_getmethods__["VarsFile"] = _kmotion.CGCodeInterpreter_VarsFile_get
    if _newclass:
        VarsFile = _swig_property(_kmotion.CGCodeInterpreter_VarsFile_get, _kmotion.CGCodeInterpreter_VarsFile_set)
    __swig_setmethods__["CoordMotion"] = _kmotion.CGCodeInterpreter_CoordMotion_set
    __swig_getmethods__["CoordMotion"] = _kmotion.CGCodeInterpreter_CoordMotion_get
    if _newclass:
        CoordMotion = _swig_property(_kmotion.CGCodeInterpreter_CoordMotion_get, _kmotion.CGCodeInterpreter_CoordMotion_set)
    __swig_setmethods__["m_Halt"] = _kmotion.CGCodeInterpreter_m_Halt_set
    __swig_getmethods__["m_Halt"] = _kmotion.CGCodeInterpreter_m_Halt_get
    if _newclass:
        m_Halt = _swig_property(_kmotion.CGCodeInterpreter_m_Halt_get, _kmotion.CGCodeInterpreter_m_Halt_set)
    __swig_setmethods__["m_HaltNextLine"] = _kmotion.CGCodeInterpreter_m_HaltNextLine_set
    __swig_getmethods__["m_HaltNextLine"] = _kmotion.CGCodeInterpreter_m_HaltNextLine_get
    if _newclass:
        m_HaltNextLine = _swig_property(_kmotion.CGCodeInterpreter_m_HaltNextLine_get, _kmotion.CGCodeInterpreter_m_HaltNextLine_set)
    __swig_setmethods__["m_CurrentLine"] = _kmotion.CGCodeInterpreter_m_CurrentLine_set
    __swig_getmethods__["m_CurrentLine"] = _kmotion.CGCodeInterpreter_m_CurrentLine_get
    if _newclass:
        m_CurrentLine = _swig_property(_kmotion.CGCodeInterpreter_m_CurrentLine_get, _kmotion.CGCodeInterpreter_m_CurrentLine_set)
    __swig_setmethods__["m_GCodeReads"] = _kmotion.CGCodeInterpreter_m_GCodeReads_set
    __swig_getmethods__["m_GCodeReads"] = _kmotion.CGCodeInterpreter_m_GCodeReads_get
    if _newclass:
        m_GCodeReads = _swig_property(_kmotion.CGCodeInterpreter_m_GCodeReads_get, _kmotion.CGCodeInterpreter_m_GCodeReads_set)
    __swig_setmethods__["m_InFile"] = _kmotion.CGCodeInterpreter_m_InFile_set
    __swig_getmethods__["m_InFile"] = _kmotion.CGCodeInterpreter_m_InFile_get
    if _newclass:
        m_InFile = _swig_property(_kmotion.CGCodeInterpreter_m_InFile_get, _kmotion.CGCodeInterpreter_m_InFile_set)
    __swig_setmethods__["m_exitcode"] = _kmotion.CGCodeInterpreter_m_exitcode_set
    __swig_getmethods__["m_exitcode"] = _kmotion.CGCodeInterpreter_m_exitcode_get
    if _newclass:
        m_exitcode = _swig_property(_kmotion.CGCodeInterpreter_m_exitcode_get, _kmotion.CGCodeInterpreter_m_exitcode_set)

    def DoExecute(self):
        return _kmotion.CGCodeInterpreter_DoExecute(self)

    def DoExecuteComplete(self):
        return _kmotion.CGCodeInterpreter_DoExecuteComplete(self)

    def SetToolFile(self, f):
        return _kmotion.CGCodeInterpreter_SetToolFile(self, f)

    def SetSetupFile(self, f):
        return _kmotion.CGCodeInterpreter_SetSetupFile(self, f)

    def SetVarsFile(self, f):
        return _kmotion.CGCodeInterpreter_SetVarsFile(self, f)

    def SetCSS(self, mode):
        return _kmotion.CGCodeInterpreter_SetCSS(self, mode)

    def ReadSetupFile(self):
        return _kmotion.CGCodeInterpreter_ReadSetupFile(self)

    def Halt(self):
        return _kmotion.CGCodeInterpreter_Halt(self)

    def GetHalt(self):
        return _kmotion.CGCodeInterpreter_GetHalt(self)

    def HaltNextLine(self):
        return _kmotion.CGCodeInterpreter_HaltNextLine(self)

    def GetHaltNextLine(self):
        return _kmotion.CGCodeInterpreter_GetHaltNextLine(self)

    def Abort(self):
        return _kmotion.CGCodeInterpreter_Abort(self)

    def GetAbort(self):
        return _kmotion.CGCodeInterpreter_GetAbort(self)
    __swig_setmethods__["p_setup"] = _kmotion.CGCodeInterpreter_p_setup_set
    __swig_getmethods__["p_setup"] = _kmotion.CGCodeInterpreter_p_setup_get
    if _newclass:
        p_setup = _swig_property(_kmotion.CGCodeInterpreter_p_setup_get, _kmotion.CGCodeInterpreter_p_setup_set)
    __swig_setmethods__["m_InitializeOnExecute"] = _kmotion.CGCodeInterpreter_m_InitializeOnExecute_set
    __swig_getmethods__["m_InitializeOnExecute"] = _kmotion.CGCodeInterpreter_m_InitializeOnExecute_get
    if _newclass:
        m_InitializeOnExecute = _swig_property(_kmotion.CGCodeInterpreter_m_InitializeOnExecute_get, _kmotion.CGCodeInterpreter_m_InitializeOnExecute_set)
    __swig_setmethods__["m_ReadToolFile"] = _kmotion.CGCodeInterpreter_m_ReadToolFile_set
    __swig_getmethods__["m_ReadToolFile"] = _kmotion.CGCodeInterpreter_m_ReadToolFile_get
    if _newclass:
        m_ReadToolFile = _swig_property(_kmotion.CGCodeInterpreter_m_ReadToolFile_get, _kmotion.CGCodeInterpreter_m_ReadToolFile_set)
    __swig_setmethods__["m_start"] = _kmotion.CGCodeInterpreter_m_start_set
    __swig_getmethods__["m_start"] = _kmotion.CGCodeInterpreter_m_start_get
    if _newclass:
        m_start = _swig_property(_kmotion.CGCodeInterpreter_m_start_get, _kmotion.CGCodeInterpreter_m_start_set)
    __swig_setmethods__["m_end"] = _kmotion.CGCodeInterpreter_m_end_set
    __swig_getmethods__["m_end"] = _kmotion.CGCodeInterpreter_m_end_get
    if _newclass:
        m_end = _swig_property(_kmotion.CGCodeInterpreter_m_end_get, _kmotion.CGCodeInterpreter_m_end_set)
    __swig_setmethods__["m_Resume"] = _kmotion.CGCodeInterpreter_m_Resume_set
    __swig_getmethods__["m_Resume"] = _kmotion.CGCodeInterpreter_m_Resume_get
    if _newclass:
        m_Resume = _swig_property(_kmotion.CGCodeInterpreter_m_Resume_get, _kmotion.CGCodeInterpreter_m_Resume_set)
    __swig_setmethods__["m_ResumeSafeZ"] = _kmotion.CGCodeInterpreter_m_ResumeSafeZ_set
    __swig_getmethods__["m_ResumeSafeZ"] = _kmotion.CGCodeInterpreter_m_ResumeSafeZ_get
    if _newclass:
        m_ResumeSafeZ = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeSafeZ_get, _kmotion.CGCodeInterpreter_m_ResumeSafeZ_set)
    __swig_setmethods__["m_ResumeSafeRelAbs"] = _kmotion.CGCodeInterpreter_m_ResumeSafeRelAbs_set
    __swig_getmethods__["m_ResumeSafeRelAbs"] = _kmotion.CGCodeInterpreter_m_ResumeSafeRelAbs_get
    if _newclass:
        m_ResumeSafeRelAbs = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeSafeRelAbs_get, _kmotion.CGCodeInterpreter_m_ResumeSafeRelAbs_set)
    __swig_setmethods__["m_ResumeMoveToSafeZ"] = _kmotion.CGCodeInterpreter_m_ResumeMoveToSafeZ_set
    __swig_getmethods__["m_ResumeMoveToSafeZ"] = _kmotion.CGCodeInterpreter_m_ResumeMoveToSafeZ_get
    if _newclass:
        m_ResumeMoveToSafeZ = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeMoveToSafeZ_get, _kmotion.CGCodeInterpreter_m_ResumeMoveToSafeZ_set)
    __swig_setmethods__["m_ResumeTraverseXY"] = _kmotion.CGCodeInterpreter_m_ResumeTraverseXY_set
    __swig_getmethods__["m_ResumeTraverseXY"] = _kmotion.CGCodeInterpreter_m_ResumeTraverseXY_get
    if _newclass:
        m_ResumeTraverseXY = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeTraverseXY_get, _kmotion.CGCodeInterpreter_m_ResumeTraverseXY_set)
    __swig_setmethods__["m_ResumeTraverseSafeX"] = _kmotion.CGCodeInterpreter_m_ResumeTraverseSafeX_set
    __swig_getmethods__["m_ResumeTraverseSafeX"] = _kmotion.CGCodeInterpreter_m_ResumeTraverseSafeX_get
    if _newclass:
        m_ResumeTraverseSafeX = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeTraverseSafeX_get, _kmotion.CGCodeInterpreter_m_ResumeTraverseSafeX_set)
    __swig_setmethods__["m_ResumeTraverseSafeY"] = _kmotion.CGCodeInterpreter_m_ResumeTraverseSafeY_set
    __swig_getmethods__["m_ResumeTraverseSafeY"] = _kmotion.CGCodeInterpreter_m_ResumeTraverseSafeY_get
    if _newclass:
        m_ResumeTraverseSafeY = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeTraverseSafeY_get, _kmotion.CGCodeInterpreter_m_ResumeTraverseSafeY_set)
    __swig_setmethods__["m_ResumeSafeStartSpindle"] = _kmotion.CGCodeInterpreter_m_ResumeSafeStartSpindle_set
    __swig_getmethods__["m_ResumeSafeStartSpindle"] = _kmotion.CGCodeInterpreter_m_ResumeSafeStartSpindle_get
    if _newclass:
        m_ResumeSafeStartSpindle = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeSafeStartSpindle_get, _kmotion.CGCodeInterpreter_m_ResumeSafeStartSpindle_set)
    __swig_setmethods__["m_ResumeSafeSpindleCWCCW"] = _kmotion.CGCodeInterpreter_m_ResumeSafeSpindleCWCCW_set
    __swig_getmethods__["m_ResumeSafeSpindleCWCCW"] = _kmotion.CGCodeInterpreter_m_ResumeSafeSpindleCWCCW_get
    if _newclass:
        m_ResumeSafeSpindleCWCCW = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeSafeSpindleCWCCW_get, _kmotion.CGCodeInterpreter_m_ResumeSafeSpindleCWCCW_set)
    __swig_setmethods__["m_ResumeDoSafeFeedZ"] = _kmotion.CGCodeInterpreter_m_ResumeDoSafeFeedZ_set
    __swig_getmethods__["m_ResumeDoSafeFeedZ"] = _kmotion.CGCodeInterpreter_m_ResumeDoSafeFeedZ_get
    if _newclass:
        m_ResumeDoSafeFeedZ = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeDoSafeFeedZ_get, _kmotion.CGCodeInterpreter_m_ResumeDoSafeFeedZ_set)
    __swig_setmethods__["m_ResumeFeedSafeZ"] = _kmotion.CGCodeInterpreter_m_ResumeFeedSafeZ_set
    __swig_getmethods__["m_ResumeFeedSafeZ"] = _kmotion.CGCodeInterpreter_m_ResumeFeedSafeZ_get
    if _newclass:
        m_ResumeFeedSafeZ = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeFeedSafeZ_get, _kmotion.CGCodeInterpreter_m_ResumeFeedSafeZ_set)
    __swig_setmethods__["m_ResumeResumeFeedRate"] = _kmotion.CGCodeInterpreter_m_ResumeResumeFeedRate_set
    __swig_getmethods__["m_ResumeResumeFeedRate"] = _kmotion.CGCodeInterpreter_m_ResumeResumeFeedRate_get
    if _newclass:
        m_ResumeResumeFeedRate = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeResumeFeedRate_get, _kmotion.CGCodeInterpreter_m_ResumeResumeFeedRate_set)
    __swig_setmethods__["m_ResumeZFeedRate"] = _kmotion.CGCodeInterpreter_m_ResumeZFeedRate_set
    __swig_getmethods__["m_ResumeZFeedRate"] = _kmotion.CGCodeInterpreter_m_ResumeZFeedRate_get
    if _newclass:
        m_ResumeZFeedRate = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeZFeedRate_get, _kmotion.CGCodeInterpreter_m_ResumeZFeedRate_set)
    __swig_setmethods__["m_ResumeRestoreFeedRate"] = _kmotion.CGCodeInterpreter_m_ResumeRestoreFeedRate_set
    __swig_getmethods__["m_ResumeRestoreFeedRate"] = _kmotion.CGCodeInterpreter_m_ResumeRestoreFeedRate_get
    if _newclass:
        m_ResumeRestoreFeedRate = _swig_property(_kmotion.CGCodeInterpreter_m_ResumeRestoreFeedRate_get, _kmotion.CGCodeInterpreter_m_ResumeRestoreFeedRate_set)

    def GetRealTimeState(self):
        return _kmotion.CGCodeInterpreter_GetRealTimeState(self)
    __swig_setmethods__["StateSaved"] = _kmotion.CGCodeInterpreter_StateSaved_set
    __swig_getmethods__["StateSaved"] = _kmotion.CGCodeInterpreter_StateSaved_get
    if _newclass:
        StateSaved = _swig_property(_kmotion.CGCodeInterpreter_StateSaved_get, _kmotion.CGCodeInterpreter_StateSaved_set)

    def SaveStateOnceOnly(self):
        return _kmotion.CGCodeInterpreter_SaveStateOnceOnly(self)
    __swig_setmethods__["m_StoppedInterpState"] = _kmotion.CGCodeInterpreter_m_StoppedInterpState_set
    __swig_getmethods__["m_StoppedInterpState"] = _kmotion.CGCodeInterpreter_m_StoppedInterpState_get
    if _newclass:
        m_StoppedInterpState = _swig_property(_kmotion.CGCodeInterpreter_m_StoppedInterpState_get, _kmotion.CGCodeInterpreter_m_StoppedInterpState_set)

    def InitializeInterp(self):
        return _kmotion.CGCodeInterpreter_InitializeInterp(self)

    def ReadToolFile(self):
        return _kmotion.CGCodeInterpreter_ReadToolFile(self)
CGCodeInterpreter_swigregister = _kmotion.CGCodeInterpreter_swigregister
CGCodeInterpreter_swigregister(CGCodeInterpreter)


_kmotion.CHG_POS_swigconstant(_kmotion)
CHG_POS = _kmotion.CHG_POS

_kmotion._LAST_CHG_POS_swigconstant(_kmotion)
_LAST_CHG_POS = _kmotion._LAST_CHG_POS

_kmotion.CHG_DEST_swigconstant(_kmotion)
CHG_DEST = _kmotion.CHG_DEST

_kmotion._LAST_CHG_DEST_swigconstant(_kmotion)
_LAST_CHG_DEST = _kmotion._LAST_CHG_DEST

_kmotion.CHG_ADC_swigconstant(_kmotion)
CHG_ADC = _kmotion.CHG_ADC

_kmotion._LAST_CHG_ADC_swigconstant(_kmotion)
_LAST_CHG_ADC = _kmotion._LAST_CHG_ADC

_kmotion.CHG_DAC_swigconstant(_kmotion)
CHG_DAC = _kmotion.CHG_DAC

_kmotion._LAST_CHG_DAC_swigconstant(_kmotion)
_LAST_CHG_DAC = _kmotion._LAST_CHG_DAC

_kmotion.CHG_PWM_swigconstant(_kmotion)
CHG_PWM = _kmotion.CHG_PWM

_kmotion._LAST_CHG_PWM_swigconstant(_kmotion)
_LAST_CHG_PWM = _kmotion._LAST_CHG_PWM

_kmotion.CHG_OUT_CHAN_swigconstant(_kmotion)
CHG_OUT_CHAN = _kmotion.CHG_OUT_CHAN

_kmotion._LAST_CHG_OUT_CHAN_swigconstant(_kmotion)
_LAST_CHG_OUT_CHAN = _kmotion._LAST_CHG_OUT_CHAN

_kmotion.CHG_IN_MODE_swigconstant(_kmotion)
CHG_IN_MODE = _kmotion.CHG_IN_MODE

_kmotion._LAST_CHG_IN_MODE_swigconstant(_kmotion)
_LAST_CHG_IN_MODE = _kmotion._LAST_CHG_IN_MODE

_kmotion.CHG_OUT_MODE_swigconstant(_kmotion)
CHG_OUT_MODE = _kmotion.CHG_OUT_MODE

_kmotion._LAST_CHG_OUT_MODE_swigconstant(_kmotion)
_LAST_CHG_OUT_MODE = _kmotion._LAST_CHG_OUT_MODE

_kmotion.CHG_ENABLE_swigconstant(_kmotion)
CHG_ENABLE = _kmotion.CHG_ENABLE

_kmotion._LAST_CHG_ENABLE_swigconstant(_kmotion)
_LAST_CHG_ENABLE = _kmotion._LAST_CHG_ENABLE

_kmotion.CHG_DONE_swigconstant(_kmotion)
CHG_DONE = _kmotion.CHG_DONE

_kmotion._LAST_CHG_DONE_swigconstant(_kmotion)
_LAST_CHG_DONE = _kmotion._LAST_CHG_DONE

_kmotion.CHG_IO_DIR_swigconstant(_kmotion)
CHG_IO_DIR = _kmotion.CHG_IO_DIR

_kmotion._LAST_CHG_IO_DIR_swigconstant(_kmotion)
_LAST_CHG_IO_DIR = _kmotion._LAST_CHG_IO_DIR

_kmotion.CHG_IO_STATE_swigconstant(_kmotion)
CHG_IO_STATE = _kmotion.CHG_IO_STATE

_kmotion._LAST_CHG_IO_STATE_swigconstant(_kmotion)
_LAST_CHG_IO_STATE = _kmotion._LAST_CHG_IO_STATE

_kmotion.CHG_THREAD_swigconstant(_kmotion)
CHG_THREAD = _kmotion.CHG_THREAD

_kmotion._LAST_CHG_THREAD_swigconstant(_kmotion)
_LAST_CHG_THREAD = _kmotion._LAST_CHG_THREAD

_kmotion.CHG_STOP_swigconstant(_kmotion)
CHG_STOP = _kmotion.CHG_STOP

_kmotion.CHG_PCCOMM_swigconstant(_kmotion)
CHG_PCCOMM = _kmotion.CHG_PCCOMM

_kmotion._LAST_CHG_PCCOMM_swigconstant(_kmotion)
_LAST_CHG_PCCOMM = _kmotion._LAST_CHG_PCCOMM

_kmotion.CHG_PCCOMMSFB_swigconstant(_kmotion)
CHG_PCCOMMSFB = _kmotion.CHG_PCCOMMSFB

_kmotion._LAST_CHG_PCCOMMSFB_swigconstant(_kmotion)
_LAST_CHG_PCCOMMSFB = _kmotion._LAST_CHG_PCCOMMSFB

_kmotion.CHG_PCCOMMIO_swigconstant(_kmotion)
CHG_PCCOMMIO = _kmotion.CHG_PCCOMMIO

_kmotion._LAST_CHG_PCCOMMIO_swigconstant(_kmotion)
_LAST_CHG_PCCOMMIO = _kmotion._LAST_CHG_PCCOMMIO

_kmotion.CHG_PCCOMMST_swigconstant(_kmotion)
CHG_PCCOMMST = _kmotion.CHG_PCCOMMST

_kmotion._LAST_CHG_PCCOMMST_swigconstant(_kmotion)
_LAST_CHG_PCCOMMST = _kmotion._LAST_CHG_PCCOMMST

_kmotion.CHG_ACTIVE_G_swigconstant(_kmotion)
CHG_ACTIVE_G = _kmotion.CHG_ACTIVE_G

_kmotion._LAST_CHG_ACTIVE_G_swigconstant(_kmotion)
_LAST_CHG_ACTIVE_G = _kmotion._LAST_CHG_ACTIVE_G

_kmotion.CHG_ACTIVE_M_swigconstant(_kmotion)
CHG_ACTIVE_M = _kmotion.CHG_ACTIVE_M

_kmotion._LAST_CHG_ACTIVE_M_swigconstant(_kmotion)
_LAST_CHG_ACTIVE_M = _kmotion._LAST_CHG_ACTIVE_M

_kmotion.CHG_G92_OFFSET_swigconstant(_kmotion)
CHG_G92_OFFSET = _kmotion.CHG_G92_OFFSET

_kmotion._LAST_CHG_G92_OFFSET_swigconstant(_kmotion)
_LAST_CHG_G92_OFFSET = _kmotion._LAST_CHG_G92_OFFSET

_kmotion.CHG_ORIGIN_OFFSET_swigconstant(_kmotion)
CHG_ORIGIN_OFFSET = _kmotion.CHG_ORIGIN_OFFSET

_kmotion._LAST_CHG_ORIGIN_OFFSET_swigconstant(_kmotion)
_LAST_CHG_ORIGIN_OFFSET = _kmotion._LAST_CHG_ORIGIN_OFFSET

_kmotion.CHG_CURRENT_swigconstant(_kmotion)
CHG_CURRENT = _kmotion.CHG_CURRENT

_kmotion._LAST_CHG_CURRENT_swigconstant(_kmotion)
_LAST_CHG_CURRENT = _kmotion._LAST_CHG_CURRENT

_kmotion.CHG_CONTROL_MODE_swigconstant(_kmotion)
CHG_CONTROL_MODE = _kmotion.CHG_CONTROL_MODE

_kmotion.CHG_SPINDLE_MODE_swigconstant(_kmotion)
CHG_SPINDLE_MODE = _kmotion.CHG_SPINDLE_MODE

_kmotion.CHG_CURRENT_SLOT_swigconstant(_kmotion)
CHG_CURRENT_SLOT = _kmotion.CHG_CURRENT_SLOT

_kmotion.CHG_CUTTER_COMP_RADIUS_swigconstant(_kmotion)
CHG_CUTTER_COMP_RADIUS = _kmotion.CHG_CUTTER_COMP_RADIUS

_kmotion.CHG_CUTTER_COMP_SIDE_swigconstant(_kmotion)
CHG_CUTTER_COMP_SIDE = _kmotion.CHG_CUTTER_COMP_SIDE

_kmotion.CHG_CANNED_CYCLE_VALUE_swigconstant(_kmotion)
CHG_CANNED_CYCLE_VALUE = _kmotion.CHG_CANNED_CYCLE_VALUE

_kmotion.CHG_CANNED_CYCLE_I_swigconstant(_kmotion)
CHG_CANNED_CYCLE_I = _kmotion.CHG_CANNED_CYCLE_I

_kmotion.CHG_CANNED_CYCLE_J_swigconstant(_kmotion)
CHG_CANNED_CYCLE_J = _kmotion.CHG_CANNED_CYCLE_J

_kmotion.CHG_CANNED_CYCLE_K_swigconstant(_kmotion)
CHG_CANNED_CYCLE_K = _kmotion.CHG_CANNED_CYCLE_K

_kmotion.CHG_CANNED_CYCLE_L_swigconstant(_kmotion)
CHG_CANNED_CYCLE_L = _kmotion.CHG_CANNED_CYCLE_L

_kmotion.CHG_CANNED_CYCLE_P_swigconstant(_kmotion)
CHG_CANNED_CYCLE_P = _kmotion.CHG_CANNED_CYCLE_P

_kmotion.CHG_CANNED_CYCLE_Q_swigconstant(_kmotion)
CHG_CANNED_CYCLE_Q = _kmotion.CHG_CANNED_CYCLE_Q

_kmotion.CHG_CANNED_CYCLE_R_swigconstant(_kmotion)
CHG_CANNED_CYCLE_R = _kmotion.CHG_CANNED_CYCLE_R

_kmotion.CHG_DISTANCE_MODE_swigconstant(_kmotion)
CHG_DISTANCE_MODE = _kmotion.CHG_DISTANCE_MODE

_kmotion.CHG_FEED_MODE_swigconstant(_kmotion)
CHG_FEED_MODE = _kmotion.CHG_FEED_MODE

_kmotion.CHG_FEED_OVERRIDE_swigconstant(_kmotion)
CHG_FEED_OVERRIDE = _kmotion.CHG_FEED_OVERRIDE

_kmotion.CHG_FEED_RATE_swigconstant(_kmotion)
CHG_FEED_RATE = _kmotion.CHG_FEED_RATE

_kmotion.CHG_FLOOD_swigconstant(_kmotion)
CHG_FLOOD = _kmotion.CHG_FLOOD

_kmotion.CHG_MIST_swigconstant(_kmotion)
CHG_MIST = _kmotion.CHG_MIST

_kmotion.CHG_LENGTH_OFFSET_INDEX_swigconstant(_kmotion)
CHG_LENGTH_OFFSET_INDEX = _kmotion.CHG_LENGTH_OFFSET_INDEX

_kmotion.CHG_LENGTH_UNITS_swigconstant(_kmotion)
CHG_LENGTH_UNITS = _kmotion.CHG_LENGTH_UNITS

_kmotion.CHG_MOTION_MODE_swigconstant(_kmotion)
CHG_MOTION_MODE = _kmotion.CHG_MOTION_MODE

_kmotion.CHG_ORIGIN_INDEX_swigconstant(_kmotion)
CHG_ORIGIN_INDEX = _kmotion.CHG_ORIGIN_INDEX

_kmotion.CHG_ACTIVE_PLANE_swigconstant(_kmotion)
CHG_ACTIVE_PLANE = _kmotion.CHG_ACTIVE_PLANE

_kmotion.CHG_PROBE_FLAG_swigconstant(_kmotion)
CHG_PROBE_FLAG = _kmotion.CHG_PROBE_FLAG

_kmotion.CHG_PROGRAM_X_swigconstant(_kmotion)
CHG_PROGRAM_X = _kmotion.CHG_PROGRAM_X

_kmotion.CHG_PROGRAM_Y_swigconstant(_kmotion)
CHG_PROGRAM_Y = _kmotion.CHG_PROGRAM_Y

_kmotion.CHG_RETRACT_MODE_swigconstant(_kmotion)
CHG_RETRACT_MODE = _kmotion.CHG_RETRACT_MODE

_kmotion.CHG_SELECTED_TOOL_SLOT_swigconstant(_kmotion)
CHG_SELECTED_TOOL_SLOT = _kmotion.CHG_SELECTED_TOOL_SLOT

_kmotion.CHG_SEQUENCE_NUMBER_swigconstant(_kmotion)
CHG_SEQUENCE_NUMBER = _kmotion.CHG_SEQUENCE_NUMBER

_kmotion.CHG_SPINDLE_SPEED_swigconstant(_kmotion)
CHG_SPINDLE_SPEED = _kmotion.CHG_SPINDLE_SPEED

_kmotion.CHG_SPEED_FEED_MODE_swigconstant(_kmotion)
CHG_SPEED_FEED_MODE = _kmotion.CHG_SPEED_FEED_MODE

_kmotion.CHG_SPEED_OVERRIDE_swigconstant(_kmotion)
CHG_SPEED_OVERRIDE = _kmotion.CHG_SPEED_OVERRIDE

_kmotion.CHG_SPINDLE_TURNING_swigconstant(_kmotion)
CHG_SPINDLE_TURNING = _kmotion.CHG_SPINDLE_TURNING

_kmotion.CHG_TOOL_LENGTH_OFFSET_swigconstant(_kmotion)
CHG_TOOL_LENGTH_OFFSET = _kmotion.CHG_TOOL_LENGTH_OFFSET

_kmotion.CHG_TOOL_TABLE_INDEX_swigconstant(_kmotion)
CHG_TOOL_TABLE_INDEX = _kmotion.CHG_TOOL_TABLE_INDEX

_kmotion.CHG_TRAVERSE_RATE_swigconstant(_kmotion)
CHG_TRAVERSE_RATE = _kmotion.CHG_TRAVERSE_RATE

_kmotion.CHG_BLOCK_DELETE_swigconstant(_kmotion)
CHG_BLOCK_DELETE = _kmotion.CHG_BLOCK_DELETE

_kmotion.CHG_CUTTER_RADIUS_COMPENSATION_swigconstant(_kmotion)
CHG_CUTTER_RADIUS_COMPENSATION = _kmotion.CHG_CUTTER_RADIUS_COMPENSATION

_kmotion.CHG_CYCLE_Z_swigconstant(_kmotion)
CHG_CYCLE_Z = _kmotion.CHG_CYCLE_Z

_kmotion.CHG_CURRENT_LINE_swigconstant(_kmotion)
CHG_CURRENT_LINE = _kmotion.CHG_CURRENT_LINE

_kmotion.LAST_GEVTCODE_swigconstant(_kmotion)
LAST_GEVTCODE = _kmotion.LAST_GEVTCODE

_kmotion.VAR_STATUS_swigconstant(_kmotion)
VAR_STATUS = _kmotion.VAR_STATUS

_kmotion.VS_SPINDLE_ON_swigconstant(_kmotion)
VS_SPINDLE_ON = _kmotion.VS_SPINDLE_ON

_kmotion.VS_SPINDLE_INHIBIT_swigconstant(_kmotion)
VS_SPINDLE_INHIBIT = _kmotion.VS_SPINDLE_INHIBIT

_kmotion.VS_PROBE_swigconstant(_kmotion)
VS_PROBE = _kmotion.VS_PROBE

_kmotion.VS_INDEP_PROBE_swigconstant(_kmotion)
VS_INDEP_PROBE = _kmotion.VS_INDEP_PROBE

_kmotion.VS_PROBING_swigconstant(_kmotion)
VS_PROBING = _kmotion.VS_PROBING

_kmotion.VS_TC_swigconstant(_kmotion)
VS_TC = _kmotion.VS_TC

_kmotion.VS_ESTOP_swigconstant(_kmotion)
VS_ESTOP = _kmotion.VS_ESTOP

_kmotion.VS_MANUAL_swigconstant(_kmotion)
VS_MANUAL = _kmotion.VS_MANUAL

_kmotion.VS_REFFING_swigconstant(_kmotion)
VS_REFFING = _kmotion.VS_REFFING

_kmotion.VS_CURR_TOOL_MASK_swigconstant(_kmotion)
VS_CURR_TOOL_MASK = _kmotion.VS_CURR_TOOL_MASK

_kmotion.VS_CURR_TOOL_SHIFT_swigconstant(_kmotion)
VS_CURR_TOOL_SHIFT = _kmotion.VS_CURR_TOOL_SHIFT

_kmotion.VS_NEXT_TOOL_MASK_swigconstant(_kmotion)
VS_NEXT_TOOL_MASK = _kmotion.VS_NEXT_TOOL_MASK

_kmotion.VS_NEXT_TOOL_SHIFT_swigconstant(_kmotion)
VS_NEXT_TOOL_SHIFT = _kmotion.VS_NEXT_TOOL_SHIFT

_kmotion.VAR_IO_STATUS_swigconstant(_kmotion)
VAR_IO_STATUS = _kmotion.VAR_IO_STATUS

_kmotion.VAR_SPINDLE_swigconstant(_kmotion)
VAR_SPINDLE = _kmotion.VAR_SPINDLE

_kmotion.VSP_SPEED_MASK_swigconstant(_kmotion)
VSP_SPEED_MASK = _kmotion.VSP_SPEED_MASK

_kmotion.VSP_SPEED_SHIFT_swigconstant(_kmotion)
VSP_SPEED_SHIFT = _kmotion.VSP_SPEED_SHIFT

_kmotion.VSP_LOAD_MASK_swigconstant(_kmotion)
VSP_LOAD_MASK = _kmotion.VSP_LOAD_MASK

_kmotion.VSP_LOAD_SHIFT_swigconstant(_kmotion)
VSP_LOAD_SHIFT = _kmotion.VSP_LOAD_SHIFT

_kmotion.VSP_ACCEL_swigconstant(_kmotion)
VSP_ACCEL = _kmotion.VSP_ACCEL

_kmotion.VSP_SPEED_VALID_swigconstant(_kmotion)
VSP_SPEED_VALID = _kmotion.VSP_SPEED_VALID

_kmotion.VSP_LOAD_VALID_swigconstant(_kmotion)
VSP_LOAD_VALID = _kmotion.VSP_LOAD_VALID

_kmotion.VAR_SPINDLE_SPEED_swigconstant(_kmotion)
VAR_SPINDLE_SPEED = _kmotion.VAR_SPINDLE_SPEED

_kmotion.VAR_SPINDLE_EFFORT_swigconstant(_kmotion)
VAR_SPINDLE_EFFORT = _kmotion.VAR_SPINDLE_EFFORT

_kmotion.VAR_TOOL_NUMBER_swigconstant(_kmotion)
VAR_TOOL_NUMBER = _kmotion.VAR_TOOL_NUMBER

_kmotion.VAR_JOG_FLAGS_swigconstant(_kmotion)
VAR_JOG_FLAGS = _kmotion.VAR_JOG_FLAGS

_kmotion.VAR_JOG_LINEAR_BASE_swigconstant(_kmotion)
VAR_JOG_LINEAR_BASE = _kmotion.VAR_JOG_LINEAR_BASE

_kmotion.VAR_JOG_ROTARY_BASE_swigconstant(_kmotion)
VAR_JOG_ROTARY_BASE = _kmotion.VAR_JOG_ROTARY_BASE

_kmotion.VAR_ESTOP_STATE_MON_swigconstant(_kmotion)
VAR_ESTOP_STATE_MON = _kmotion.VAR_ESTOP_STATE_MON

_kmotion.VAR_SERVO_STATUS_MON_swigconstant(_kmotion)
VAR_SERVO_STATUS_MON = _kmotion.VAR_SERVO_STATUS_MON

_kmotion.VAR_SP_SAMP_MON_swigconstant(_kmotion)
VAR_SP_SAMP_MON = _kmotion.VAR_SP_SAMP_MON

_kmotion.VAR_CURRENT_TOOL_swigconstant(_kmotion)
VAR_CURRENT_TOOL = _kmotion.VAR_CURRENT_TOOL

_kmotion.VAR_MANUAL_TOOL_swigconstant(_kmotion)
VAR_MANUAL_TOOL = _kmotion.VAR_MANUAL_TOOL

_kmotion.VAR_PROBE_swigconstant(_kmotion)
VAR_PROBE = _kmotion.VAR_PROBE

_kmotion.VAR_INDEP_PROBE_swigconstant(_kmotion)
VAR_INDEP_PROBE = _kmotion.VAR_INDEP_PROBE
class KMotion(CKMotionDLL):
    __swig_setmethods__ = {}
    for _s in [CKMotionDLL]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, KMotion, name, value)
    __swig_getmethods__ = {}
    for _s in [CKMotionDLL]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, KMotion, name)
    __repr__ = _swig_repr

    def __init__(self, boardid):
        if self.__class__ == KMotion:
            _self = None
        else:
            _self = self
        this = _kmotion.new_KMotion(_self, boardid)
        try:
            self.this.append(this)
        except:
            self.this = this

    def MsgBox(self, title, msg, options):
        return _kmotion.KMotion_MsgBox(self, title, msg, options)

    def HandleConsole(self, buf):
        return _kmotion.KMotion_HandleConsole(self, buf)

    def HandleErrMsg(self, buf):
        return _kmotion.KMotion_HandleErrMsg(self, buf)

    def HandleMsgBox(self, title, msg, options):
        return _kmotion.KMotion_HandleMsgBox(self, title, msg, options)
    __swig_destroy__ = _kmotion.delete_KMotion
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _kmotion.disown_KMotion(self)
        return weakref_proxy(self)
KMotion_swigregister = _kmotion.KMotion_swigregister
KMotion_swigregister(KMotion)


_kmotion.MB_OK_swigconstant(_kmotion)
MB_OK = _kmotion.MB_OK

_kmotion.MB_OKCANCEL_swigconstant(_kmotion)
MB_OKCANCEL = _kmotion.MB_OKCANCEL

_kmotion.MB_ABORTRETRYIGNORE_swigconstant(_kmotion)
MB_ABORTRETRYIGNORE = _kmotion.MB_ABORTRETRYIGNORE

_kmotion.MB_YESNOCANCEL_swigconstant(_kmotion)
MB_YESNOCANCEL = _kmotion.MB_YESNOCANCEL

_kmotion.MB_YESNO_swigconstant(_kmotion)
MB_YESNO = _kmotion.MB_YESNO

_kmotion.MB_RETRYCANCEL_swigconstant(_kmotion)
MB_RETRYCANCEL = _kmotion.MB_RETRYCANCEL

_kmotion.MB_CANCELTRYCONTINUE_swigconstant(_kmotion)
MB_CANCELTRYCONTINUE = _kmotion.MB_CANCELTRYCONTINUE

_kmotion.MB_ICONHAND_swigconstant(_kmotion)
MB_ICONHAND = _kmotion.MB_ICONHAND

_kmotion.MB_ICONQUESTION_swigconstant(_kmotion)
MB_ICONQUESTION = _kmotion.MB_ICONQUESTION

_kmotion.MB_ICONEXCLAMATION_swigconstant(_kmotion)
MB_ICONEXCLAMATION = _kmotion.MB_ICONEXCLAMATION

_kmotion.MB_ICONASTERISK_swigconstant(_kmotion)
MB_ICONASTERISK = _kmotion.MB_ICONASTERISK

_kmotion.MB_APPLMODAL_swigconstant(_kmotion)
MB_APPLMODAL = _kmotion.MB_APPLMODAL

_kmotion.MB_SYSTEMMODAL_swigconstant(_kmotion)
MB_SYSTEMMODAL = _kmotion.MB_SYSTEMMODAL

_kmotion.MB_TASKMODAL_swigconstant(_kmotion)
MB_TASKMODAL = _kmotion.MB_TASKMODAL

_kmotion.MB_NOFOCUS_swigconstant(_kmotion)
MB_NOFOCUS = _kmotion.MB_NOFOCUS

_kmotion.MB_SETFOREGROUND_swigconstant(_kmotion)
MB_SETFOREGROUND = _kmotion.MB_SETFOREGROUND

_kmotion.MB_DEFAULT_DESKTOP_ONLY_swigconstant(_kmotion)
MB_DEFAULT_DESKTOP_ONLY = _kmotion.MB_DEFAULT_DESKTOP_ONLY

_kmotion.MB_TOPMOST_swigconstant(_kmotion)
MB_TOPMOST = _kmotion.MB_TOPMOST

_kmotion.MB_RIGHT_swigconstant(_kmotion)
MB_RIGHT = _kmotion.MB_RIGHT

_kmotion.IDOK_swigconstant(_kmotion)
IDOK = _kmotion.IDOK

_kmotion.IDCANCEL_swigconstant(_kmotion)
IDCANCEL = _kmotion.IDCANCEL

_kmotion.IDABORT_swigconstant(_kmotion)
IDABORT = _kmotion.IDABORT

_kmotion.IDRETRY_swigconstant(_kmotion)
IDRETRY = _kmotion.IDRETRY

_kmotion.IDIGNORE_swigconstant(_kmotion)
IDIGNORE = _kmotion.IDIGNORE

_kmotion.IDYES_swigconstant(_kmotion)
IDYES = _kmotion.IDYES

_kmotion.IDNO_swigconstant(_kmotion)
IDNO = _kmotion.IDNO

_kmotion.POLL_G_M_CODES_swigconstant(_kmotion)
POLL_G_M_CODES = _kmotion.POLL_G_M_CODES

_kmotion.POLL_OFFSETS_swigconstant(_kmotion)
POLL_OFFSETS = _kmotion.POLL_OFFSETS

_kmotion.POLL_MISC_MODES_swigconstant(_kmotion)
POLL_MISC_MODES = _kmotion.POLL_MISC_MODES

_kmotion.POLL_TOOL_swigconstant(_kmotion)
POLL_TOOL = _kmotion.POLL_TOOL

_kmotion.POLL_CUTTER_COMP_swigconstant(_kmotion)
POLL_CUTTER_COMP = _kmotion.POLL_CUTTER_COMP

_kmotion.POLL_CANNED_CYCLE_swigconstant(_kmotion)
POLL_CANNED_CYCLE = _kmotion.POLL_CANNED_CYCLE

_kmotion.POLL_FEED_swigconstant(_kmotion)
POLL_FEED = _kmotion.POLL_FEED

_kmotion.POLL_SPINDLE_swigconstant(_kmotion)
POLL_SPINDLE = _kmotion.POLL_SPINDLE

_kmotion.POLL_UNITS_swigconstant(_kmotion)
POLL_UNITS = _kmotion.POLL_UNITS

_kmotion.POLL_COOLANT_swigconstant(_kmotion)
POLL_COOLANT = _kmotion.POLL_COOLANT

_kmotion.POLL_PLANE_swigconstant(_kmotion)
POLL_PLANE = _kmotion.POLL_PLANE

_kmotion.POLL_LINE_swigconstant(_kmotion)
POLL_LINE = _kmotion.POLL_LINE

_kmotion.POLL_x_swigconstant(_kmotion)
POLL_x = _kmotion.POLL_x

_kmotion.POLL_y_swigconstant(_kmotion)
POLL_y = _kmotion.POLL_y

_kmotion.POLL_z_swigconstant(_kmotion)
POLL_z = _kmotion.POLL_z

_kmotion.POLL_a_swigconstant(_kmotion)
POLL_a = _kmotion.POLL_a

_kmotion.MAX_GATHER_DATA_swigconstant(_kmotion)
MAX_GATHER_DATA = _kmotion.MAX_GATHER_DATA
class GCodeInterpreter(CGCodeInterpreter):
    __swig_setmethods__ = {}
    for _s in [CGCodeInterpreter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GCodeInterpreter, name, value)
    __swig_getmethods__ = {}
    for _s in [CGCodeInterpreter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, GCodeInterpreter, name)
    __repr__ = _swig_repr

    def __init__(self, CM):
        if self.__class__ == GCodeInterpreter:
            _self = None
        else:
            _self = self
        this = _kmotion.new_GCodeInterpreter(_self, CM)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _kmotion.delete_GCodeInterpreter
    __del__ = lambda self: None

    def HandleStatus(self, line_no, msg):
        return _kmotion.GCodeInterpreter_HandleStatus(self, line_no, msg)

    def HandleComplete(self, status, lineno, sequence_number, err):
        return _kmotion.GCodeInterpreter_HandleComplete(self, status, lineno, sequence_number, err)

    def HandleUser(self, msg):
        return _kmotion.GCodeInterpreter_HandleUser(self, msg)

    def HandleMCode(self, mCode):
        return _kmotion.GCodeInterpreter_HandleMCode(self, mCode)

    def Interpret(self, board_type, fname, start, end, restart):
        return _kmotion.GCodeInterpreter_Interpret(self, board_type, fname, start, end, restart)

    def Running(self):
        return _kmotion.GCodeInterpreter_Running(self)

    def HandleBoolEvt(self, evt_code, data):
        return _kmotion.GCodeInterpreter_HandleBoolEvt(self, evt_code, data)

    def HandleIntEvt(self, evt_code, data, prevdata):
        return _kmotion.GCodeInterpreter_HandleIntEvt(self, evt_code, data, prevdata)

    def HandleFloatEvt(self, evt_code, data, prevdata):
        return _kmotion.GCodeInterpreter_HandleFloatEvt(self, evt_code, data, prevdata)

    def Poll(self):
        return _kmotion.GCodeInterpreter_Poll(self)

    def PollKMotion(self):
        return _kmotion.GCodeInterpreter_PollKMotion(self)

    def PollGCodeInterpreter(self):
        return _kmotion.GCodeInterpreter_PollGCodeInterpreter(self)

    def EnableEvent(self, evt_code, enable=True, known=False):
        return _kmotion.GCodeInterpreter_EnableEvent(self, evt_code, enable, known)

    def EnableEventByClasses(self, clsbits, enable=True, known=False):
        return _kmotion.GCodeInterpreter_EnableEventByClasses(self, clsbits, enable, known)

    def SetActionNone(self, action_num):
        return _kmotion.GCodeInterpreter_SetActionNone(self, action_num)

    def SetActionSetBit(self, action_num, bit, state):
        return _kmotion.GCodeInterpreter_SetActionSetBit(self, action_num, bit, state)

    def SetActionSetTwoBits(self, action_num, bit, state, bit2, state2):
        return _kmotion.GCodeInterpreter_SetActionSetTwoBits(self, action_num, bit, state, bit2, state2)

    def SetActionDAC(self, action_num, dacnum, scale, offset, minval, maxval):
        return _kmotion.GCodeInterpreter_SetActionDAC(self, action_num, dacnum, scale, offset, minval, maxval)

    def SetActionProgram(self, action_num, name, thread, ipersist=-1):
        return _kmotion.GCodeInterpreter_SetActionProgram(self, action_num, name, thread, ipersist)

    def SetActionProgramWait(self, action_num, name, thread, ipersist=-1):
        return _kmotion.GCodeInterpreter_SetActionProgramWait(self, action_num, name, thread, ipersist)

    def SetActionProgramWaitSync(self, action_num, name, thread, ipersist=-1):
        return _kmotion.GCodeInterpreter_SetActionProgramWaitSync(self, action_num, name, thread, ipersist)

    def SetActionProgramPC(self, action_num, name):
        return _kmotion.GCodeInterpreter_SetActionProgramPC(self, action_num, name)

    def SetActionCallback(self, action_num):
        return _kmotion.GCodeInterpreter_SetActionCallback(self, action_num)

    def SetActionWaitbit(self, action_num, bit, state):
        return _kmotion.GCodeInterpreter_SetActionWaitbit(self, action_num, bit, state)

    def SetMotionParams(self, m):
        return _kmotion.GCodeInterpreter_SetMotionParams(self, m)

    def SetOrigin(self, index, vec):
        return _kmotion.GCodeInterpreter_SetOrigin(self, index, vec)

    def GetOrigin(self, index):
        return _kmotion.GCodeInterpreter_GetOrigin(self, index)

    def ConvertAbsoluteToInterpreterCoord(self, vec):
        return _kmotion.GCodeInterpreter_ConvertAbsoluteToInterpreterCoord(self, vec)

    def ConvertAbsoluteToMachine(self, vec):
        return _kmotion.GCodeInterpreter_ConvertAbsoluteToMachine(self, vec)

    def ReadAndSyncCurPositions(self):
        return _kmotion.GCodeInterpreter_ReadAndSyncCurPositions(self)

    def TransformCADtoActuators(self, vec):
        return _kmotion.GCodeInterpreter_TransformCADtoActuators(self, vec)

    def TransformActuatorstoCAD(self, vec):
        return _kmotion.GCodeInterpreter_TransformActuatorstoCAD(self, vec)

    def FixedToUser(self, vec, metric_in):
        return _kmotion.GCodeInterpreter_FixedToUser(self, vec, metric_in)

    def UserToFixed(self, vec, metric_out):
        return _kmotion.GCodeInterpreter_UserToFixed(self, vec, metric_out)

    def UserIsMetric(self):
        return _kmotion.GCodeInterpreter_UserIsMetric(self)

    def GetSpindleRPM(self):
        return _kmotion.GCodeInterpreter_GetSpindleRPM(self)

    def GetSpindleRPMWithOverride(self):
        return _kmotion.GCodeInterpreter_GetSpindleRPMWithOverride(self)

    def ServiceKFLOPCommands(self):
        return _kmotion.GCodeInterpreter_ServiceKFLOPCommands(self)

    def GetPendingPC(self):
        return _kmotion.GCodeInterpreter_GetPendingPC(self)

    def GetLastGatherString(self):
        return _kmotion.GCodeInterpreter_GetLastGatherString(self)

    def GetPCOptions(self):
        return _kmotion.GCodeInterpreter_GetPCOptions(self)

    def GetKFlopThread(self):
        return _kmotion.GCodeInterpreter_GetKFlopThread(self)

    def GetInputBoxPersist(self):
        return _kmotion.GCodeInterpreter_GetInputBoxPersist(self)

    def GetResultPersist(self):
        return _kmotion.GCodeInterpreter_GetResultPersist(self)

    def SetPCResult(self, r):
        return _kmotion.GCodeInterpreter_SetPCResult(self, r)

    def PC_Estop(self):
        return _kmotion.GCodeInterpreter_PC_Estop(self)

    def PC_Halt(self):
        return _kmotion.GCodeInterpreter_PC_Halt(self)

    def PC_Execute(self):
        return _kmotion.GCodeInterpreter_PC_Execute(self)

    def PC_SingleStep(self):
        return _kmotion.GCodeInterpreter_PC_SingleStep(self)

    def PC_Restart(self):
        return _kmotion.GCodeInterpreter_PC_Restart(self)

    def PC_SetToolLength(self):
        return _kmotion.GCodeInterpreter_PC_SetToolLength(self)

    def PC_GetToolLength(self):
        return _kmotion.GCodeInterpreter_PC_GetToolLength(self)

    def PC_SetFRO(self):
        return _kmotion.GCodeInterpreter_PC_SetFRO(self)

    def PC_SetSSO(self):
        return _kmotion.GCodeInterpreter_PC_SetSSO(self)

    def PC_SetFROInc(self):
        return _kmotion.GCodeInterpreter_PC_SetFROInc(self)

    def PC_SetSSOInc(self):
        return _kmotion.GCodeInterpreter_PC_SetSSOInc(self)

    def PC_UpdateFixture(self):
        return _kmotion.GCodeInterpreter_PC_UpdateFixture(self)

    def PC_UserButton(self):
        return _kmotion.GCodeInterpreter_PC_UserButton(self)

    def PC_MCode(self):
        return _kmotion.GCodeInterpreter_PC_MCode(self)

    def PC_GetToolDiam(self):
        return _kmotion.GCodeInterpreter_PC_GetToolDiam(self)

    def PC_SetToolDiam(self):
        return _kmotion.GCodeInterpreter_PC_SetToolDiam(self)

    def PC_GetToolOffsetX(self):
        return _kmotion.GCodeInterpreter_PC_GetToolOffsetX(self)

    def PC_SetToolOffsetX(self):
        return _kmotion.GCodeInterpreter_PC_SetToolOffsetX(self)

    def PC_GetToolOffsetY(self):
        return _kmotion.GCodeInterpreter_PC_GetToolOffsetY(self)

    def PC_SetToolOffsetY(self):
        return _kmotion.GCodeInterpreter_PC_SetToolOffsetY(self)

    def PC_HaltNextLine(self):
        return _kmotion.GCodeInterpreter_PC_HaltNextLine(self)

    def PC_EnableJogKeys(self):
        return _kmotion.GCodeInterpreter_PC_EnableJogKeys(self)

    def PC_DisableJogKeys(self):
        return _kmotion.GCodeInterpreter_PC_DisableJogKeys(self)

    def PC_StatusMsg(self):
        return _kmotion.GCodeInterpreter_PC_StatusMsg(self)

    def PC_SlotToIndex(self):
        return _kmotion.GCodeInterpreter_PC_SlotToIndex(self)

    def PC_StatusClear(self):
        return _kmotion.GCodeInterpreter_PC_StatusClear(self)

    def PC_Other(self):
        return _kmotion.GCodeInterpreter_PC_Other(self)

    def PC_MsgBox(self):
        return _kmotion.GCodeInterpreter_PC_MsgBox(self)

    def PC_Cancel_MsgBox(self):
        return _kmotion.GCodeInterpreter_PC_Cancel_MsgBox(self)

    def PC_Running_MsgBox(self):
        return _kmotion.GCodeInterpreter_PC_Running_MsgBox(self)

    def PC_MDI(self):
        return _kmotion.GCodeInterpreter_PC_MDI(self)

    def PC_Cancel_MDI(self):
        return _kmotion.GCodeInterpreter_PC_Cancel_MDI(self)

    def PC_Running_MDI(self):
        return _kmotion.GCodeInterpreter_PC_Running_MDI(self)

    def PC_InputBox(self):
        return _kmotion.GCodeInterpreter_PC_InputBox(self)

    def PC_Cancel_InputBox(self):
        return _kmotion.GCodeInterpreter_PC_Cancel_InputBox(self)

    def PC_Running_InputBox(self):
        return _kmotion.GCodeInterpreter_PC_Running_InputBox(self)

    def PC_NBMsgBox(self):
        return _kmotion.GCodeInterpreter_PC_NBMsgBox(self)

    def PC_NBMDI(self):
        return _kmotion.GCodeInterpreter_PC_NBMDI(self)

    def PC_NBInputBox(self):
        return _kmotion.GCodeInterpreter_PC_NBInputBox(self)

    def SendPQR(self, persist, mcode):
        return _kmotion.GCodeInterpreter_SendPQR(self, persist, mcode)

    def SendToolSlot(self, persist):
        return _kmotion.GCodeInterpreter_SendToolSlot(self, persist)

    def SyncPosition(self):
        return _kmotion.GCodeInterpreter_SyncPosition(self)

    def GetPCComm(self):
        return _kmotion.GCodeInterpreter_GetPCComm(self)

    def GetPCCommFloat(self):
        return _kmotion.GCodeInterpreter_GetPCCommFloat(self)

    def GetOnePersistInt(self, index):
        return _kmotion.GCodeInterpreter_GetOnePersistInt(self, index)

    def GetOnePersistFloat(self, index):
        return _kmotion.GCodeInterpreter_GetOnePersistFloat(self, index)

    def GetOnePersistDouble(self, index):
        return _kmotion.GCodeInterpreter_GetOnePersistDouble(self, index)

    def SetOnePersistInt(self, index, value):
        return _kmotion.GCodeInterpreter_SetOnePersistInt(self, index, value)

    def SetOnePersistFloat(self, index, value):
        return _kmotion.GCodeInterpreter_SetOnePersistFloat(self, index, value)

    def SetOnePersistDouble(self, index, value):
        return _kmotion.GCodeInterpreter_SetOnePersistDouble(self, index, value)

    def GetPersistInt(self, index, n_ints):
        return _kmotion.GCodeInterpreter_GetPersistInt(self, index, n_ints)

    def GetPersistFloat(self, index, n_floats):
        return _kmotion.GCodeInterpreter_GetPersistFloat(self, index, n_floats)

    def GetPersistDouble(self, index, n_doubles):
        return _kmotion.GCodeInterpreter_GetPersistDouble(self, index, n_doubles)

    def GetGatherInt(self, byte_offset, n_ints):
        return _kmotion.GCodeInterpreter_GetGatherInt(self, byte_offset, n_ints)

    def GetGatherFloat(self, byte_offset, n_floats):
        return _kmotion.GCodeInterpreter_GetGatherFloat(self, byte_offset, n_floats)

    def GetGatherDouble(self, byte_offset, n_doubles):
        return _kmotion.GCodeInterpreter_GetGatherDouble(self, byte_offset, n_doubles)

    def GetGatherString(self, char_offset, max_chars):
        return _kmotion.GCodeInterpreter_GetGatherString(self, char_offset, max_chars)

    def GetInterpreterParams(self):
        return _kmotion.GCodeInterpreter_GetInterpreterParams(self)

    def SetInterpreterParams(self, s):
        return _kmotion.GCodeInterpreter_SetInterpreterParams(self, s)

    def GetOffsets(self, fixture_num):
        return _kmotion.GCodeInterpreter_GetOffsets(self, fixture_num)

    def SetOffsets(self, fixture_num, offs):
        return _kmotion.GCodeInterpreter_SetOffsets(self, fixture_num, offs)

    def GetCurrent(self, from_cm):
        return _kmotion.GCodeInterpreter_GetCurrent(self, from_cm)
    def __disown__(self):
        self.this.disown()
        _kmotion.disown_GCodeInterpreter(self)
        return weakref_proxy(self)
GCodeInterpreter_swigregister = _kmotion.GCodeInterpreter_swigregister
GCodeInterpreter_swigregister(GCodeInterpreter)

# This file is compatible with both classic and new-style classes.


